replace n_objects@2735
replace light_dirvec@2762
replace n_objects@2735
replace light@2739
var v3@6219
var consts@6220
replace scan_pitch@2754
replace image_center@2753
replace image_center@2753
replace image_size@2752
replace image_size@2752
replace objects@2736
replace n_reflections@2764
replace light@2739
replace light@2739
replace light@2739
replace light@2739
replace n_reflections@2764
replace n_reflections@2764
replace light@2739
replace light@2739
replace light@2739
replace light@2739
replace light@2739
replace light@2739
replace n_reflections@2764
replace reflections@2763
replace n_objects@2735
replace dirvecs@2761
replace n_objects@2735
replace dirvecs@2761
replace dirvecs@2761
replace n_objects@2735
replace dirvecs@2761
replace image_size@2752
replace image_size@2752
replace image_size@2752
replace image_size@2752
replace rgb@2751
replace image_size@2752
replace image_size@2752
replace screenz_dir@2759
replace screeny_dir@2758
replace screenz_dir@2759
replace screeny_dir@2758
replace screenz_dir@2759
replace screeny_dir@2758
replace image_center@2753
replace scan_pitch@2754
replace rgb@2751
replace ptrace_dirvec@2760
replace viewpoint@2738
replace startp@2755
replace rgb@2751
replace ptrace_dirvec@2760
replace ptrace_dirvec@2760
replace screenx_dir@2757
replace ptrace_dirvec@2760
replace screenx_dir@2757
replace ptrace_dirvec@2760
replace screenx_dir@2757
replace image_center@2753
replace scan_pitch@2754
replace diffuse_ray@2750
replace dirvecs@2761
replace diffuse_ray@2750
replace rgb@2751
replace rgb@2751
replace rgb@2751
replace image_size@2752
replace image_size@2752
replace image_size@2752
replace image_size@2752
replace diffuse_ray@2750
replace rgb@2751
replace diffuse_ray@2750
replace diffuse_ray@2750
replace diffuse_ray@2750
replace diffuse_ray@2750
replace diffuse_ray@2750
replace diffuse_ray@2750
replace rgb@2751
replace diffuse_ray@2750
replace dirvecs@2761
replace dirvecs@2761
replace dirvecs@2761
replace dirvecs@2761
replace dirvecs@2761
replace texture_color@2749
replace diffuse_ray@2750
replace light@2739
replace nvector@2748
replace or_net@2742
replace intersection_point@2746
replace objects@2736
replace intersected_object_id@2747
replace tmin@2745
replace n_reflections@2764
replace intersection_point@2746
replace light@2739
replace light@2739
replace nvector@2748
replace or_net@2742
replace nvector@2748
replace nvector@2748
replace nvector@2748
replace texture_color@2749
replace intersection_point@2746
replace intsec_rectside@2744
replace intersection_point@2746
replace intersection_point@2746
replace startp@2755
replace objects@2736
replace intersected_object_id@2747
replace rgb@2751
replace rgb@2751
replace rgb@2751
replace rgb@2751
replace rgb@2751
replace rgb@2751
replace beam@2740
replace light@2739
replace nvector@2748
replace or_net@2742
replace intsec_rectside@2744
replace intersected_object_id@2747
replace reflections@2763
replace rgb@2751
replace rgb@2751
replace rgb@2751
replace rgb@2751
replace rgb@2751
replace rgb@2751
replace texture_color@2749
replace rgb@2751
replace texture_color@2749
replace texture_color@2749
replace texture_color@2749
replace texture_color@2749
replace texture_color@2749
replace texture_color@2749
replace texture_color@2749
replace texture_color@2749
replace texture_color@2749
replace nvector@2748
replace nvector@2748
replace nvector@2748
replace nvector@2748
replace nvector@2748
replace nvector@2748
replace nvector@2748
replace intersection_point@2746
replace intersection_point@2746
replace intersection_point@2746
replace nvector@2748
replace nvector@2748
replace nvector@2748
replace nvector@2748
replace nvector@2748
replace intsec_rectside@2744
replace tmin@2745
replace or_net@2742
replace tmin@2745
replace tmin@2745
replace solver_dist@2743
replace and_net@2741
replace intsec_rectside@2744
replace intersected_object_id@2747
replace intersection_point@2746
replace tmin@2745
replace startp_fast@2756
replace startp_fast@2756
replace startp_fast@2756
replace tmin@2745
replace solver_dist@2743
replace objects@2736
replace tmin@2745
replace or_net@2742
replace tmin@2745
replace tmin@2745
replace solver_dist@2743
replace startp@2755
replace and_net@2741
replace intsec_rectside@2744
replace intersected_object_id@2747
replace intersection_point@2746
replace tmin@2745
replace startp@2755
replace startp@2755
replace startp@2755
replace tmin@2745
replace solver_dist@2743
replace objects@2736
replace startp@2755
replace solver_dist@2743
replace intersection_point@2746
replace light_dirvec@2762
replace and_net@2741
replace intersection_point@2746
replace light@2739
replace intersection_point@2746
replace light@2739
replace intersection_point@2746
replace light@2739
replace objects@2736
replace solver_dist@2743
replace intersection_point@2746
replace light_dirvec@2762
replace objects@2736
replace n_objects@2735
replace startp_fast@2756
replace objects@2736
replace objects@2736
replace objects@2736
replace solver_dist@2743
replace solver_dist@2743
replace solver_dist@2743
replace objects@2736
replace solver_dist@2743
replace solver_dist@2743
replace solver_dist@2743
replace solver_dist@2743
replace solver_dist@2743
replace solver_dist@2743
replace objects@2736
replace solver_dist@2743
replace solver_dist@2743
replace solver_dist@2743
replace or_net@2742
replace and_net@2741
replace n_objects@2735
replace objects@2736
replace beam@2740
replace light@2739
replace light@2739
replace light@2739
replace viewpoint@2738
replace screenz_dir@2759
replace screen@2737
replace viewpoint@2738
replace screenz_dir@2759
replace screen@2737
replace viewpoint@2738
replace screenz_dir@2759
replace screen@2737
replace screeny_dir@2758
replace screeny_dir@2758
replace screeny_dir@2758
replace screenx_dir@2757
replace screenx_dir@2757
replace screenx_dir@2757
replace screenz_dir@2759
replace screenz_dir@2759
replace screenz_dir@2759
replace screen@2737
replace screen@2737
replace screen@2737
replace Tt@2359@6212
replace dummydv@6210
replace dummyff3@6209
replace dummyf3@6208
replace dummyf3@6208
replace consts@6220
replace v3@6219
replace dummyf2@6218
replace dummy_vs@6228
replace Tt@2370@6231
replace dummyff@6227
replace dummyf@6226
replace dummyf@6226
replace Ta@2414@6272
replace and_net@2741
replace Ta@2419@6277
replace Tt@2434@6291
replace dummy@6289
replace dummy@6289
replace dummy@6289
replace dummy@6289
replace dummy@6289
replace dummy@6289
LetRec ("print_int@2578", ["x@2579"],
        Let ("Ti@2532@2580", Int 128,
        IfEq
         (Var x@2579,
          Var Ti@2532@2580,
          Let ("Ti@2541@2595", Int 49,
          Let ("Tu@3@2590", Print Var Ti@2541@2595,
          Let ("Ti@2540@2594", Int 50,
          Let ("Tu@2@2591", Print Var Ti@2540@2594,
          Let ("Ti@2539@2593", Int 56,
          Let ("Tu@1@2592", Print Var Ti@2539@2593,
          ())))))),
          Let ("Ti@2533@2581", Int 255,
          IfEq
           (Var x@2579,
            Var Ti@2533@2581,
            Let ("Ti@2538@2589", Int 50,
            Let ("Tu@6@2584", Print Var Ti@2538@2589,
            Let ("Ti@2537@2588", Int 53,
            Let ("Tu@5@2585", Print Var Ti@2537@2588,
            Let ("Ti@2536@2587", Int 53,
            Let ("Tu@4@2586", Print Var Ti@2536@2587,
            ())))))),
            Let ("Ti@2534@2583", Int 48,
            Let ("Ti@2535@2582", Add (Var x@2579, Var Ti@2534@2583),
            Print Var Ti@2535@2582)))))),
Let ("pi@2599", Float 3.141593,
LetRec ("reduction_2pi@2600", ["x@2601"],
        Let ("Td@2530@2616", Float 2.000000,
        Let ("p@2602", Float 6.283185,
        LetRec ("ploop@2603", ["y@2604"],
                IfLE
                 (Var y@2604,
                  Var x@2601,
                  Let ("Td@2528@2606", Float 2.000000,
                  Let ("Td@2529@2605", FMul (Var Td@2528@2606, Var y@2604),
                  IfLE
                   (Var Td@2529@2605,
                    Var x@2601,
                    Let ("Td@2528@2606@8228", Float 2.000000,
                    Let ("Td@2529@2605@8229",
                         FMul (Var Td@2528@2606@8228, Var Td@2529@2605),
                    App (Var ploop@2603, [Var Td@2529@2605@8229]))),
                    Var Td@2529@2605))),
                  Var y@2604),
        LetRec ("ploop2@2607", ["a@2608"; "p2@2609"],
                IfLE
                 (Var p@2602,
                  Var a@2608,
                  IfLE
                   (Var p2@2609,
                    Var a@2608,
                    Let ("Td@2526@2612", FSub (Var a@2608, Var p2@2609),
                    Let ("Td@2525@2614", Float 2.000000,
                    Let ("Td@2527@2613",
                         FDiv (Var p2@2609, Var Td@2525@2614),
                    App
                     (Var ploop2@2607, [Var Td@2526@2612; Var Td@2527@2613])))),
                    Let ("Td@2523@2611", Float 2.000000,
                    Let ("Td@2524@2610",
                         FDiv (Var p2@2609, Var Td@2523@2611),
                    App (Var ploop2@2607, [Var a@2608; Var Td@2524@2610])))),
                  Var a@2608),
        Let ("Td@2522@2615",
             IfLE
              (Var p@2602,
               Var x@2601,
               Let ("Td@2528@2606@8226", Float 2.000000,
               Let ("Td@2529@2605@8227", Float 12.566371,
               App (Var ploop@2603, [Var Td@2529@2605@8227]))),
               Float 6.283185),
        App (Var ploop2@2607, [Var x@2601; Var Td@2522@2615])))))),
LetRec ("kernel_sin@2617", ["a@2618"],
        Let ("aa@2619", FMul (Var a@2618, Var a@2618),
        Let ("Td@2512@2629", Float -0.000196,
        Let ("Td@2513@2627", FMul (Var Td@2512@2629, Var aa@2619),
        Let ("Td@2514@2628", Float 0.008333,
        Let ("Td@2515@2626", FAdd (Var Td@2513@2627, Var Td@2514@2628),
        Let ("Td@2516@2624", FMul (Var Td@2515@2626, Var aa@2619),
        Let ("Td@2517@2625", Float -0.166667,
        Let ("Td@2518@2623", FAdd (Var Td@2516@2624, Var Td@2517@2625),
        Let ("Td@2519@2621", FMul (Var Td@2518@2623, Var aa@2619),
        Let ("Td@2520@2622", Float 1.000000,
        Let ("Td@2521@2620", FAdd (Var Td@2519@2621, Var Td@2520@2622),
        FMul (Var Td@2521@2620, Var a@2618)))))))))))),
LetRec ("kernel_cos@2630", ["a@2631"],
        Let ("aa@2632", FMul (Var a@2631, Var a@2631),
        Let ("Td@2503@2641", Float -0.001370,
        Let ("Td@2504@2639", FMul (Var Td@2503@2641, Var aa@2632),
        Let ("Td@2505@2640", Float 0.041664,
        Let ("Td@2506@2638", FAdd (Var Td@2504@2639, Var Td@2505@2640),
        Let ("Td@2507@2636", FMul (Var Td@2506@2638, Var aa@2632),
        Let ("Td@2508@2637", Float -0.500000,
        Let ("Td@2509@2635", FAdd (Var Td@2507@2636, Var Td@2508@2637),
        Let ("Td@2510@2633", FMul (Var Td@2509@2635, Var aa@2632),
        Let ("Td@2511@2634", Float 1.000000,
        FAdd (Var Td@2510@2633, Var Td@2511@2634))))))))))),
LetRec ("sin@2642", ["x@2643"],
        Let ("Td@2502@2664", Float 0.000000,
        Let ("a@2644", IfLE (Var Td@2502@2664, Var x@2643, Int 0, Int 1),
        Let ("Tb@2501@2663", Int 0,
        Let ("b@2645",
             IfEq (Var a@2644, Var Tb@2501@2663, Var x@2643, FNeg Var x@2643),
        Let ("c@2646", App (Var reduction_2pi@2600, [Var b@2645]),
        Let ("e@2647", IfLE (Var pi@2599, Var c@2646, Int 1, Int 0),
        Let ("Tb@2500@2662", Int 0,
        Let ("d@2648",
             IfEq
              (Var e@2647,
               Var Tb@2500@2662,
               Var c@2646,
               FSub (Var c@2646, Var pi@2599)),
        Let ("Tb@2498@2660", Int 0,
        Let ("f@2649",
             IfEq
              (Var e@2647,
               Var Tb@2498@2660,
               Var a@2644,
               Let ("Tb@2499@2661", Int 0,
               IfEq (Var a@2644, Var Tb@2499@2661, Int 1, Int 0))),
        Let ("Td@2496@2659", Float 2.000000,
        Let ("Td@2497@2658", Float 1.570796,
        Let ("g@2650",
             IfLE
              (Var Td@2497@2658,
               Var d@2648,
               FSub (Var pi@2599, Var d@2648),
               Var d@2648),
        Let ("Td@2491@2657", Float 4.000000,
        Let ("Td@2492@2653", Float 0.785398,
        Let ("h@2651",
             IfLE
              (Var g@2650,
               Var Td@2492@2653,
               App (Var kernel_sin@2617, [Var g@2650]),
               Let ("Td@2493@2656", Float 2.000000,
               Let ("Td@2494@2655", Float 1.570796,
               Let ("Td@2495@2654", FSub (Var Td@2494@2655, Var g@2650),
               App (Var kernel_cos@2630, [Var Td@2495@2654]))))),
        Let ("Tb@2490@2652", Int 0,
        IfEq (Var f@2649, Var Tb@2490@2652, Var h@2651, FNeg Var h@2651)))))))))))))))))),
LetRec ("cos@2665", ["x@2666"],
        Let ("Td@2489@2689", Float 0.000000,
        Let ("a@2667", IfLE (Var Td@2489@2689, Var x@2666, Int 0, Int 1),
        Let ("Tb@2488@2688", Int 0,
        Let ("b@2668",
             IfEq (Var a@2667, Var Tb@2488@2688, Var x@2666, FNeg Var x@2666),
        Let ("c@2669", App (Var reduction_2pi@2600, [Var b@2668]),
        Let ("e@2670", IfLE (Var pi@2599, Var c@2669, Int 1, Int 0),
        Let ("Tb@2487@2687", Int 0,
        Let ("d@2671",
             IfEq
              (Var e@2670,
               Var Tb@2487@2687,
               Var c@2669,
               FSub (Var c@2669, Var pi@2599)),
        Let ("Td@2485@2686", Float 2.000000,
        Let ("Td@2486@2685", Float 1.570796,
        Let ("f@2672", IfLE (Var Td@2486@2685, Var d@2671, Int 1, Int 0),
        Let ("Tb@2484@2684", Int 0,
        Let ("g@2673",
             IfEq
              (Var f@2672,
               Var Tb@2484@2684,
               Var d@2671,
               FSub (Var pi@2599, Var d@2671)),
        Let ("Tb@2482@2682", Int 0,
        Let ("g2@2674",
             IfEq
              (Var f@2672,
               Var Tb@2482@2682,
               Var e@2670,
               Let ("Tb@2483@2683", Int 0,
               IfEq (Var e@2670, Var Tb@2483@2683, Int 1, Int 0))),
        Let ("Td@2477@2681", Float 4.000000,
        Let ("Td@2478@2677", Float 0.785398,
        Let ("h@2675",
             IfLE
              (Var g@2673,
               Var Td@2478@2677,
               App (Var kernel_cos@2630, [Var g@2673]),
               Let ("Td@2479@2680", Float 2.000000,
               Let ("Td@2480@2679", Float 1.570796,
               Let ("Td@2481@2678", FSub (Var Td@2480@2679, Var g@2673),
               App (Var kernel_sin@2617, [Var Td@2481@2678]))))),
        Let ("Tb@2476@2676", Int 0,
        IfEq (Var g2@2674, Var Tb@2476@2676, Var h@2675, FNeg Var h@2675)))))))))))))))))))),
LetRec ("kernel_atan@2690", ["a@2691"],
        Let ("aa@2692", FMul (Var a@2691, Var a@2691),
        Let ("Td@2473@2694", Float 1.000000,
        Let ("Td@2470@2697", Float -0.333333,
        Let ("Td@2467@2700", Float 0.200000,
        Let ("Td@2464@2703", Float -0.142857,
        Let ("Td@2461@2706", Float 0.111111,
        Let ("Td@2458@2709", Float -0.089764,
        Let ("Td@2457@2711", Float 0.060035,
        Let ("Td@2459@2710", FMul (Var aa@2692, Var Td@2457@2711),
        Let ("Td@2460@2708", FAdd (Var Td@2458@2709, Var Td@2459@2710),
        Let ("Td@2462@2707", FMul (Var aa@2692, Var Td@2460@2708),
        Let ("Td@2463@2705", FAdd (Var Td@2461@2706, Var Td@2462@2707),
        Let ("Td@2465@2704", FMul (Var aa@2692, Var Td@2463@2705),
        Let ("Td@2466@2702", FAdd (Var Td@2464@2703, Var Td@2465@2704),
        Let ("Td@2468@2701", FMul (Var aa@2692, Var Td@2466@2702),
        Let ("Td@2469@2699", FAdd (Var Td@2467@2700, Var Td@2468@2701),
        Let ("Td@2471@2698", FMul (Var aa@2692, Var Td@2469@2699),
        Let ("Td@2472@2696", FAdd (Var Td@2470@2697, Var Td@2471@2698),
        Let ("Td@2474@2695", FMul (Var aa@2692, Var Td@2472@2696),
        Let ("Td@2475@2693", FAdd (Var Td@2473@2694, Var Td@2474@2695),
        FMul (Var a@2691, Var Td@2475@2693))))))))))))))))))))),
LetRec ("atan@2712", ["x@2713"],
        Let ("Td@2456@2734", Float 0.000000,
        Let ("a@2714", IfLE (Var Td@2456@2734, Var x@2713, Int 0, Int 1),
        Let ("Tb@2455@2733", Int 0,
        Let ("b@2715",
             IfEq (Var a@2714, Var Tb@2455@2733, Var x@2713, FNeg Var x@2713),
        Let ("Td@2440@2718", Float 0.437500,
        Let ("c@2716",
             IfLE
              (Var Td@2440@2718,
               Var b@2715,
               Let ("Td@2441@2719", Float 2.437500,
               IfLE
                (Var Td@2441@2719,
                 Var b@2715,
                 Let ("Td@2442@2724", Float 2.000000,
                 Let ("Td@2445@2720", Float 1.570796,
                 Let ("Td@2443@2723", Float 1.000000,
                 Let ("Td@2444@2722", FDiv (Var Td@2443@2723, Var b@2715),
                 Let ("Td@2446@2721",
                      App (Var kernel_atan@2690, [Var Td@2444@2722]),
                 FSub (Var Td@2445@2720, Var Td@2446@2721)))))),
                 Let ("Td@2447@2732", Float 4.000000,
                 Let ("Td@2453@2725", Float 0.785398,
                 Let ("Td@2448@2731", Float 1.000000,
                 Let ("Td@2450@2728", FSub (Var b@2715, Var Td@2448@2731),
                 Let ("Td@2449@2730", Float 1.000000,
                 Let ("Td@2451@2729", FAdd (Var b@2715, Var Td@2449@2730),
                 Let ("Td@2452@2727",
                      FDiv (Var Td@2450@2728, Var Td@2451@2729),
                 Let ("Td@2454@2726",
                      App (Var kernel_atan@2690, [Var Td@2452@2727]),
                 FAdd (Var Td@2453@2725, Var Td@2454@2726))))))))))),
               App (Var kernel_atan@2690, [Var b@2715])),
        Let ("Tb@2439@2717", Int 0,
        IfEq (Var a@2714, Var Tb@2439@2717, Var c@2716, FNeg Var c@2716)))))))),
Let ("Ti@2437@6299", Int 1,
Let ("Ti@2438@6300", Int 0,
Let ("n_objects@2735",
     ExtFunApp (Var create_array, [Var Ti@2437@6299; Var Ti@2438@6300]),
Let ("Ti@2435@6297", Int 0,
Let ("Td@2436@6298", Float 0.000000,
Let ("dummy@6289",
     ExtFunApp (Var create_float_array, [Var Ti@2435@6297; Var Td@2436@6298]),
Let ("Ti@2433@6290", Int 60,
Let ("Ti@2428@6292", Int 0,
Let ("Ti@2429@6293", Int 0,
Let ("Ti@2430@6294", Int 0,
Let ("Ti@2431@6295", Int 0,
Let ("Tb@2432@6296", Int 0,
Let ("Ta@8507", Static dummy@6289,
Let ("Ta@8506", Static dummy@6289,
Let ("Ta@8505", Static dummy@6289,
Let ("Ta@8504", Static dummy@6289,
Let ("Ta@8503", Static dummy@6289,
Let ("Ta@8502", Static dummy@6289,
Let ("Tt@2434@6291",
     Tuple
      [Var Ta@8506; Var Ta@8505; Var Ta@8504; Var Tb@2432@6296; Var Ta@8503;
       Var Ta@8502; Var Ti@2431@6295; Var Ti@2430@6294; Var Ti@2429@6293;
       Var Ti@2428@6292; Var Ta@8507],
Let ("Tt@8501", Static Tt@2434@6291,
Let ("objects@2736",
     ExtFunApp (Var create_array, [Var Ti@2433@6290; Var Tt@8501]),
Let ("Ti@2426@6287", Int 3,
Let ("Td@2427@6288", Float 0.000000,
Let ("screen@2737",
     ExtFunApp (Var create_float_array, [Var Ti@2426@6287; Var Td@2427@6288]),
Let ("Ti@2424@6285", Int 3,
Let ("Td@2425@6286", Float 0.000000,
Let ("viewpoint@2738",
     ExtFunApp (Var create_float_array, [Var Ti@2424@6285; Var Td@2425@6286]),
Let ("Ti@2422@6283", Int 3,
Let ("Td@2423@6284", Float 0.000000,
Let ("light@2739",
     ExtFunApp (Var create_float_array, [Var Ti@2422@6283; Var Td@2423@6284]),
Let ("Ti@2420@6281", Int 1,
Let ("Td@2421@6282", Float 255.000000,
Let ("beam@2740",
     ExtFunApp (Var create_float_array, [Var Ti@2420@6281; Var Td@2421@6282]),
Let ("Ti@2418@6276", Int 50,
Let ("Ti@2416@6278", Int 1,
Let ("Ti@2417@6279", Int -1,
Let ("Ta@2419@6277",
     ExtFunApp (Var create_array, [Var Ti@2416@6278; Var Ti@2417@6279]),
Let ("Ta@8500", Static Ta@2419@6277,
Let ("and_net@2741",
     ExtFunApp (Var create_array, [Var Ti@2418@6276; Var Ta@8500]),
Let ("Ti@2413@6271", Int 1,
Let ("Ti@2411@6273", Int 1,
Let ("Ti@2410@6275", Int 0,
Let ("Ta@8499", Static and_net@2741,
Let ("Ta@2412@6274", Get (Var Ta@8499, Var Ti@2410@6275),
Let ("Ta@2414@6272",
     ExtFunApp (Var create_array, [Var Ti@2411@6273; Var Ta@2412@6274]),
Let ("Ta@8498", Static Ta@2414@6272,
Let ("or_net@2742",
     ExtFunApp (Var create_array, [Var Ti@2413@6271; Var Ta@8498]),
Let ("Ti@2408@6269", Int 1,
Let ("Td@2409@6270", Float 0.000000,
Let ("solver_dist@2743",
     ExtFunApp (Var create_float_array, [Var Ti@2408@6269; Var Td@2409@6270]),
Let ("Ti@2406@6267", Int 1,
Let ("Ti@2407@6268", Int 0,
Let ("intsec_rectside@2744",
     ExtFunApp (Var create_array, [Var Ti@2406@6267; Var Ti@2407@6268]),
Let ("Ti@2404@6265", Int 1,
Let ("Td@2405@6266", Float 1000000000.000000,
Let ("tmin@2745",
     ExtFunApp (Var create_float_array, [Var Ti@2404@6265; Var Td@2405@6266]),
Let ("Ti@2402@6263", Int 3,
Let ("Td@2403@6264", Float 0.000000,
Let ("intersection_point@2746",
     ExtFunApp (Var create_float_array, [Var Ti@2402@6263; Var Td@2403@6264]),
Let ("Ti@2400@6261", Int 1,
Let ("Ti@2401@6262", Int 0,
Let ("intersected_object_id@2747",
     ExtFunApp (Var create_array, [Var Ti@2400@6261; Var Ti@2401@6262]),
Let ("Ti@2398@6259", Int 3,
Let ("Td@2399@6260", Float 0.000000,
Let ("nvector@2748",
     ExtFunApp (Var create_float_array, [Var Ti@2398@6259; Var Td@2399@6260]),
Let ("Ti@2396@6257", Int 3,
Let ("Td@2397@6258", Float 0.000000,
Let ("texture_color@2749",
     ExtFunApp (Var create_float_array, [Var Ti@2396@6257; Var Td@2397@6258]),
Let ("Ti@2394@6255", Int 3,
Let ("Td@2395@6256", Float 0.000000,
Let ("diffuse_ray@2750",
     ExtFunApp (Var create_float_array, [Var Ti@2394@6255; Var Td@2395@6256]),
Let ("Ti@2392@6253", Int 3,
Let ("Td@2393@6254", Float 0.000000,
Let ("rgb@2751",
     ExtFunApp (Var create_float_array, [Var Ti@2392@6253; Var Td@2393@6254]),
Let ("Ti@2390@6251", Int 2,
Let ("Ti@2391@6252", Int 0,
Let ("image_size@2752",
     ExtFunApp (Var create_array, [Var Ti@2390@6251; Var Ti@2391@6252]),
Let ("Ti@2388@6249", Int 2,
Let ("Ti@2389@6250", Int 0,
Let ("image_center@2753",
     ExtFunApp (Var create_array, [Var Ti@2388@6249; Var Ti@2389@6250]),
Let ("Ti@2386@6247", Int 1,
Let ("Td@2387@6248", Float 0.000000,
Let ("scan_pitch@2754",
     ExtFunApp (Var create_float_array, [Var Ti@2386@6247; Var Td@2387@6248]),
Let ("Ti@2384@6245", Int 3,
Let ("Td@2385@6246", Float 0.000000,
Let ("startp@2755",
     ExtFunApp (Var create_float_array, [Var Ti@2384@6245; Var Td@2385@6246]),
Let ("Ti@2382@6243", Int 3,
Let ("Td@2383@6244", Float 0.000000,
Let ("startp_fast@2756",
     ExtFunApp (Var create_float_array, [Var Ti@2382@6243; Var Td@2383@6244]),
Let ("Ti@2380@6241", Int 3,
Let ("Td@2381@6242", Float 0.000000,
Let ("screenx_dir@2757",
     ExtFunApp (Var create_float_array, [Var Ti@2380@6241; Var Td@2381@6242]),
Let ("Ti@2378@6239", Int 3,
Let ("Td@2379@6240", Float 0.000000,
Let ("screeny_dir@2758",
     ExtFunApp (Var create_float_array, [Var Ti@2378@6239; Var Td@2379@6240]),
Let ("Ti@2376@6237", Int 3,
Let ("Td@2377@6238", Float 0.000000,
Let ("screenz_dir@2759",
     ExtFunApp (Var create_float_array, [Var Ti@2376@6237; Var Td@2377@6238]),
Let ("Ti@2374@6235", Int 3,
Let ("Td@2375@6236", Float 0.000000,
Let ("ptrace_dirvec@2760",
     ExtFunApp (Var create_float_array, [Var Ti@2374@6235; Var Td@2375@6236]),
Let ("Ti@2372@6233", Int 0,
Let ("Td@2373@6234", Float 0.000000,
Let ("dummyf@6226",
     ExtFunApp (Var create_float_array, [Var Ti@2372@6233; Var Td@2373@6234]),
Let ("Ti@2371@6232", Int 0,
Let ("Ta@8497", Static dummyf@6226,
Let ("dummyff@6227",
     ExtFunApp (Var create_array, [Var Ti@2371@6232; Var Ta@8497]),
Let ("Ti@2369@6230", Int 0,
Let ("Ta@8496", Static dummyff@6227,
Let ("Ta@8495", Static dummyf@6226,
Let ("Tt@2370@6231", Tuple [Var Ta@8495; Var Ta@8496],
Let ("Tt@8494", Static Tt@2370@6231,
Let ("dummy_vs@6228",
     ExtFunApp (Var create_array, [Var Ti@2369@6230; Var Tt@8494]),
Let ("Ti@2368@6229", Int 5,
Let ("Ta@8493", Static dummy_vs@6228,
Let ("dirvecs@2761",
     ExtFunApp (Var create_array, [Var Ti@2368@6229; Var Ta@8493]),
Let ("Ti@2366@6224", Int 0,
Let ("Td@2367@6225", Float 0.000000,
Let ("dummyf2@6218",
     ExtFunApp (Var create_float_array, [Var Ti@2366@6224; Var Td@2367@6225]),
Let ("Ti@2364@6222", Int 3,
Let ("Td@2365@6223", Float 0.000000,
Let ("v3@6219",
     ExtFunApp (Var create_float_array, [Var Ti@2364@6222; Var Td@2365@6223]),
Let ("Ti@2363@6221", Int 60,
Let ("Ta@8492", Static dummyf2@6218,
Let ("consts@6220",
     ExtFunApp (Var create_array, [Var Ti@2363@6221; Var Ta@8492]),
Let ("Ta@8491", Static consts@6220,
Let ("Ta@8490", Static v3@6219,
Let ("light_dirvec@2762", Tuple [Var Ta@8490; Var Ta@8491],
Let ("Ti@2361@6216", Int 0,
Let ("Td@2362@6217", Float 0.000000,
Let ("dummyf3@6208",
     ExtFunApp (Var create_float_array, [Var Ti@2361@6216; Var Td@2362@6217]),
Let ("Ti@2360@6215", Int 0,
Let ("Ta@8489", Static dummyf3@6208,
Let ("dummyff3@6209",
     ExtFunApp (Var create_array, [Var Ti@2360@6215; Var Ta@8489]),
Let ("Ta@8488", Static dummyff3@6209,
Let ("Ta@8487", Static dummyf3@6208,
Let ("dummydv@6210", Tuple [Var Ta@8487; Var Ta@8488],
Let ("Ti@2358@6211", Int 180,
Let ("Ti@2356@6213", Int 0,
Let ("Td@2357@6214", Float 0.000000,
Let ("Tt@8486", Static dummydv@6210,
Let ("Tt@2359@6212", Tuple [Var Tt@8486; Var Ti@2356@6213; Var Td@2357@6214],
Let ("Tt@8485", Static Tt@2359@6212,
Let ("reflections@2763",
     ExtFunApp (Var create_array, [Var Ti@2358@6211; Var Tt@8485]),
Let ("Ti@2354@6206", Int 1,
Let ("Ti@2355@6207", Int 0,
Let ("n_reflections@2764",
     ExtFunApp (Var create_array, [Var Ti@2354@6206; Var Ti@2355@6207]),
LetRec ("sgn@2770", ["x@2771"],
        Let ("Tb@2348@2772", Int 0,
        Let ("Td@2546@2563@8225", Float 0.000000,
        Let ("Tb@2349@2773",
             IfEq (Var x@2771, Var Td@2546@2563@8225, Int 1, Int 0),
        IfEq
         (Var Tb@2349@2773,
          Var Tb@2348@2772,
          Let ("Tb@2350@2774", Int 0,
          Let ("Td@2548@2557@8224", Float 0.000000,
          Let ("Tb@2351@2775",
               IfLE (Var x@2771, Var Td@2548@2557@8224, Int 0, Int 1),
          IfEq
           (Var Tb@2351@2775,
            Var Tb@2350@2774,
            Float -1.000000,
            Float 1.000000)))),
          Float 0.000000)))),
LetRec ("vecset@2786", ["y@2789"; "x@2788"; "v@2787"; "z@2790"],
        Let ("Ti@2344@2795", Int 0,
        Let ("Tu@2@2791", Put (Var v@2787, Var Ti@2344@2795, Var x@2788),
        Let ("Ti@2343@2794", Int 1,
        Let ("Tu@1@2792", Put (Var v@2787, Var Ti@2343@2794, Var y@2789),
        Let ("Ti@2342@2793", Int 2,
        Put (Var v@2787, Var Ti@2342@2793, Var z@2790)))))),
LetRec ("vecfill@2796", ["v@2797"; "elem@2798"],
        Let ("Ti@2341@2803", Int 0,
        Let ("Tu@4@2799", Put (Var v@2797, Var Ti@2341@2803, Var elem@2798),
        Let ("Ti@2340@2802", Int 1,
        Let ("Tu@3@2800", Put (Var v@2797, Var Ti@2340@2802, Var elem@2798),
        Let ("Ti@2339@2801", Int 2,
        Put (Var v@2797, Var Ti@2339@2801, Var elem@2798)))))),
LetRec ("veccpy@2807", ["dest@2808"; "src@2809"],
        Let ("Ti@2336@2818", Int 0,
        Let ("Ti@2335@2820", Int 0,
        Let ("Td@2337@2819", Get (Var src@2809, Var Ti@2335@2820),
        Let ("Tu@6@2810",
             Put (Var dest@2808, Var Ti@2336@2818, Var Td@2337@2819),
        Let ("Ti@2333@2815", Int 1,
        Let ("Ti@2332@2817", Int 1,
        Let ("Td@2334@2816", Get (Var src@2809, Var Ti@2332@2817),
        Let ("Tu@5@2811",
             Put (Var dest@2808, Var Ti@2333@2815, Var Td@2334@2816),
        Let ("Ti@2330@2812", Int 2,
        Let ("Ti@2329@2814", Int 2,
        Let ("Td@2331@2813", Get (Var src@2809, Var Ti@2329@2814),
        Put (Var dest@2808, Var Ti@2330@2812, Var Td@2331@2813)))))))))))),
LetRec ("vecunit_sgn@2873", ["v@2874"; "inv@2875"],
        Let ("Ti@2274@2907", Int 0,
        Let ("Td@2275@2906", Get (Var v@2874, Var Ti@2274@2907),
        Let ("Td@2278@2902", FMul (Var Td@2275@2906, Var Td@2275@2906),
        Let ("Ti@2276@2905", Int 1,
        Let ("Td@2277@2904", Get (Var v@2874, Var Ti@2276@2905),
        Let ("Td@2279@2903", FMul (Var Td@2277@2904, Var Td@2277@2904),
        Let ("Td@2282@2898", FAdd (Var Td@2278@2902, Var Td@2279@2903),
        Let ("Ti@2280@2901", Int 2,
        Let ("Td@2281@2900", Get (Var v@2874, Var Ti@2280@2901),
        Let ("Td@2283@2899", FMul (Var Td@2281@2900, Var Td@2281@2900),
        Let ("Td@2284@2897", FAdd (Var Td@2282@2898, Var Td@2283@2899),
        Let ("l@2876", Sqrt Var Td@2284@2897,
        Let ("Tb@2269@2892", Int 0,
        Let ("Td@2546@2563@8223", Float 0.000000,
        Let ("Tb@2270@2893",
             IfEq (Var l@2876, Var Td@2546@2563@8223, Int 1, Int 0),
        Let ("il@2877",
             IfEq
              (Var Tb@2270@2893,
               Var Tb@2269@2892,
               Let ("Tb@2271@2894", Int 0,
               IfEq
                (Var inv@2875,
                 Var Tb@2271@2894,
                 Let ("Td@2273@2896", Float 1.000000,
                 FDiv (Var Td@2273@2896, Var l@2876)),
                 Let ("Td@2272@2895", Float -1.000000,
                 FDiv (Var Td@2272@2895, Var l@2876)))),
               Float 1.000000),
        Let ("Ti@2267@2888", Int 0,
        Let ("Ti@2265@2891", Int 0,
        Let ("Td@2266@2890", Get (Var v@2874, Var Ti@2265@2891),
        Let ("Td@2268@2889", FMul (Var Td@2266@2890, Var il@2877),
        Let ("Tu@10@2878",
             Put (Var v@2874, Var Ti@2267@2888, Var Td@2268@2889),
        Let ("Ti@2263@2884", Int 1,
        Let ("Ti@2261@2887", Int 1,
        Let ("Td@2262@2886", Get (Var v@2874, Var Ti@2261@2887),
        Let ("Td@2264@2885", FMul (Var Td@2262@2886, Var il@2877),
        Let ("Tu@9@2879",
             Put (Var v@2874, Var Ti@2263@2884, Var Td@2264@2885),
        Let ("Ti@2259@2880", Int 2,
        Let ("Ti@2257@2883", Int 2,
        Let ("Td@2258@2882", Get (Var v@2874, Var Ti@2257@2883),
        Let ("Td@2260@2881", FMul (Var Td@2258@2882, Var il@2877),
        Put (Var v@2874, Var Ti@2259@2880, Var Td@2260@2881))))))))))))))))))))))))))))))),
LetRec ("veciprod@2908", ["v@2909"; "w@2910"],
        Let ("Ti@2241@2926", Int 0,
        Let ("Td@2243@2923", Get (Var v@2909, Var Ti@2241@2926),
        Let ("Ti@2242@2925", Int 0,
        Let ("Td@2244@2924", Get (Var w@2910, Var Ti@2242@2925),
        Let ("Td@2249@2917", FMul (Var Td@2243@2923, Var Td@2244@2924),
        Let ("Ti@2245@2922", Int 1,
        Let ("Td@2247@2919", Get (Var v@2909, Var Ti@2245@2922),
        Let ("Ti@2246@2921", Int 1,
        Let ("Td@2248@2920", Get (Var w@2910, Var Ti@2246@2921),
        Let ("Td@2250@2918", FMul (Var Td@2247@2919, Var Td@2248@2920),
        Let ("Td@2255@2911", FAdd (Var Td@2249@2917, Var Td@2250@2918),
        Let ("Ti@2251@2916", Int 2,
        Let ("Td@2253@2913", Get (Var v@2909, Var Ti@2251@2916),
        Let ("Ti@2252@2915", Int 2,
        Let ("Td@2254@2914", Get (Var w@2910, Var Ti@2252@2915),
        Let ("Td@2256@2912", FMul (Var Td@2253@2913, Var Td@2254@2914),
        FAdd (Var Td@2255@2911, Var Td@2256@2912))))))))))))))))),
LetRec ("veciprod2@2927", ["w1@2930"; "w0@2929"; "v@2928"; "w2@2931"],
        Let ("Ti@2231@2941", Int 0,
        Let ("Td@2232@2940", Get (Var v@2928, Var Ti@2231@2941),
        Let ("Td@2235@2936", FMul (Var Td@2232@2940, Var w0@2929),
        Let ("Ti@2233@2939", Int 1,
        Let ("Td@2234@2938", Get (Var v@2928, Var Ti@2233@2939),
        Let ("Td@2236@2937", FMul (Var Td@2234@2938, Var w1@2930),
        Let ("Td@2239@2932", FAdd (Var Td@2235@2936, Var Td@2236@2937),
        Let ("Ti@2237@2935", Int 2,
        Let ("Td@2238@2934", Get (Var v@2928, Var Ti@2237@2935),
        Let ("Td@2240@2933", FMul (Var Td@2238@2934, Var w2@2931),
        FAdd (Var Td@2239@2932, Var Td@2240@2933))))))))))),
LetRec ("vecaccum@2942", ["scale@2944"; "dest@2943"; "v@2945"],
        Let ("Ti@2229@2962", Int 0,
        Let ("Ti@2224@2968", Int 0,
        Let ("Td@2227@2964", Get (Var dest@2943, Var Ti@2224@2968),
        Let ("Ti@2225@2967", Int 0,
        Let ("Td@2226@2966", Get (Var v@2945, Var Ti@2225@2967),
        Let ("Td@2228@2965", FMul (Var scale@2944, Var Td@2226@2966),
        Let ("Td@2230@2963", FAdd (Var Td@2227@2964, Var Td@2228@2965),
        Let ("Tu@12@2946",
             Put (Var dest@2943, Var Ti@2229@2962, Var Td@2230@2963),
        Let ("Ti@2222@2955", Int 1,
        Let ("Ti@2217@2961", Int 1,
        Let ("Td@2220@2957", Get (Var dest@2943, Var Ti@2217@2961),
        Let ("Ti@2218@2960", Int 1,
        Let ("Td@2219@2959", Get (Var v@2945, Var Ti@2218@2960),
        Let ("Td@2221@2958", FMul (Var scale@2944, Var Td@2219@2959),
        Let ("Td@2223@2956", FAdd (Var Td@2220@2957, Var Td@2221@2958),
        Let ("Tu@11@2947",
             Put (Var dest@2943, Var Ti@2222@2955, Var Td@2223@2956),
        Let ("Ti@2215@2948", Int 2,
        Let ("Ti@2210@2954", Int 2,
        Let ("Td@2213@2950", Get (Var dest@2943, Var Ti@2210@2954),
        Let ("Ti@2211@2953", Int 2,
        Let ("Td@2212@2952", Get (Var v@2945, Var Ti@2211@2953),
        Let ("Td@2214@2951", FMul (Var scale@2944, Var Td@2212@2952),
        Let ("Td@2216@2949", FAdd (Var Td@2213@2950, Var Td@2214@2951),
        Put (Var dest@2943, Var Ti@2215@2948, Var Td@2216@2949)))))))))))))))))))))))),
LetRec ("vecadd@2969", ["dest@2970"; "v@2971"],
        Let ("Ti@2208@2986", Int 0,
        Let ("Ti@2204@2991", Int 0,
        Let ("Td@2206@2988", Get (Var dest@2970, Var Ti@2204@2991),
        Let ("Ti@2205@2990", Int 0,
        Let ("Td@2207@2989", Get (Var v@2971, Var Ti@2205@2990),
        Let ("Td@2209@2987", FAdd (Var Td@2206@2988, Var Td@2207@2989),
        Let ("Tu@14@2972",
             Put (Var dest@2970, Var Ti@2208@2986, Var Td@2209@2987),
        Let ("Ti@2202@2980", Int 1,
        Let ("Ti@2198@2985", Int 1,
        Let ("Td@2200@2982", Get (Var dest@2970, Var Ti@2198@2985),
        Let ("Ti@2199@2984", Int 1,
        Let ("Td@2201@2983", Get (Var v@2971, Var Ti@2199@2984),
        Let ("Td@2203@2981", FAdd (Var Td@2200@2982, Var Td@2201@2983),
        Let ("Tu@13@2973",
             Put (Var dest@2970, Var Ti@2202@2980, Var Td@2203@2981),
        Let ("Ti@2196@2974", Int 2,
        Let ("Ti@2192@2979", Int 2,
        Let ("Td@2194@2976", Get (Var dest@2970, Var Ti@2192@2979),
        Let ("Ti@2193@2978", Int 2,
        Let ("Td@2195@2977", Get (Var v@2971, Var Ti@2193@2978),
        Let ("Td@2197@2975", FAdd (Var Td@2194@2976, Var Td@2195@2977),
        Put (Var dest@2970, Var Ti@2196@2974, Var Td@2197@2975))))))))))))))))))))),
LetRec ("vecscale@3015", ["dest@3016"; "scale@3017"],
        Let ("Ti@2172@3028", Int 0,
        Let ("Ti@2170@3031", Int 0,
        Let ("Td@2171@3030", Get (Var dest@3016, Var Ti@2170@3031),
        Let ("Td@2173@3029", FMul (Var Td@2171@3030, Var scale@3017),
        Let ("Tu@18@3018",
             Put (Var dest@3016, Var Ti@2172@3028, Var Td@2173@3029),
        Let ("Ti@2168@3024", Int 1,
        Let ("Ti@2166@3027", Int 1,
        Let ("Td@2167@3026", Get (Var dest@3016, Var Ti@2166@3027),
        Let ("Td@2169@3025", FMul (Var Td@2167@3026, Var scale@3017),
        Let ("Tu@17@3019",
             Put (Var dest@3016, Var Ti@2168@3024, Var Td@2169@3025),
        Let ("Ti@2164@3020", Int 2,
        Let ("Ti@2162@3023", Int 2,
        Let ("Td@2163@3022", Get (Var dest@3016, Var Ti@2162@3023),
        Let ("Td@2165@3021", FMul (Var Td@2163@3022, Var scale@3017),
        Put (Var dest@3016, Var Ti@2164@3020, Var Td@2165@3021))))))))))))))),
LetRec ("vecaccumv@3032", ["v@3034"; "dest@3033"; "w@3035"],
        Let ("Ti@2160@3056", Int 0,
        Let ("Ti@2153@3064", Int 0,
        Let ("Td@2158@3058", Get (Var dest@3033, Var Ti@2153@3064),
        Let ("Ti@2154@3063", Int 0,
        Let ("Td@2156@3060", Get (Var v@3034, Var Ti@2154@3063),
        Let ("Ti@2155@3062", Int 0,
        Let ("Td@2157@3061", Get (Var w@3035, Var Ti@2155@3062),
        Let ("Td@2159@3059", FMul (Var Td@2156@3060, Var Td@2157@3061),
        Let ("Td@2161@3057", FAdd (Var Td@2158@3058, Var Td@2159@3059),
        Let ("Tu@20@3036",
             Put (Var dest@3033, Var Ti@2160@3056, Var Td@2161@3057),
        Let ("Ti@2151@3047", Int 1,
        Let ("Ti@2144@3055", Int 1,
        Let ("Td@2149@3049", Get (Var dest@3033, Var Ti@2144@3055),
        Let ("Ti@2145@3054", Int 1,
        Let ("Td@2147@3051", Get (Var v@3034, Var Ti@2145@3054),
        Let ("Ti@2146@3053", Int 1,
        Let ("Td@2148@3052", Get (Var w@3035, Var Ti@2146@3053),
        Let ("Td@2150@3050", FMul (Var Td@2147@3051, Var Td@2148@3052),
        Let ("Td@2152@3048", FAdd (Var Td@2149@3049, Var Td@2150@3050),
        Let ("Tu@19@3037",
             Put (Var dest@3033, Var Ti@2151@3047, Var Td@2152@3048),
        Let ("Ti@2142@3038", Int 2,
        Let ("Ti@2135@3046", Int 2,
        Let ("Td@2140@3040", Get (Var dest@3033, Var Ti@2135@3046),
        Let ("Ti@2136@3045", Int 2,
        Let ("Td@2138@3042", Get (Var v@3034, Var Ti@2136@3045),
        Let ("Ti@2137@3044", Int 2,
        Let ("Td@2139@3043", Get (Var w@3035, Var Ti@2137@3044),
        Let ("Td@2141@3041", FMul (Var Td@2138@3042, Var Td@2139@3043),
        Let ("Td@2143@3039", FAdd (Var Td@2140@3040, Var Td@2141@3041),
        Put (Var dest@3033, Var Ti@2142@3038, Var Td@2143@3039)))))))))))))))))))))))))))))),
LetRec ("read_screen_settings@3471", ["Tu@21@3472"],
        Let ("Ti@2116@3545", Int 0,
        Let ("Tu@2115@3547", (),
        Let ("Td@2117@3546", FRead (),
        Let ("Ta@8484", Static screen@2737,
        Let ("Tu@35@3473",
             Put (Var Ta@8484, Var Ti@2116@3545, Var Td@2117@3546),
        Let ("Ti@2113@3542", Int 1,
        Let ("Tu@2112@3544", (),
        Let ("Td@2114@3543", FRead (),
        Let ("Ta@8483", Static screen@2737,
        Let ("Tu@34@3474",
             Put (Var Ta@8483, Var Ti@2113@3542, Var Td@2114@3543),
        Let ("Ti@2110@3539", Int 2,
        Let ("Tu@2109@3541", (),
        Let ("Td@2111@3540", FRead (),
        Let ("Ta@8482", Static screen@2737,
        Let ("Tu@33@3475",
             Put (Var Ta@8482, Var Ti@2110@3539, Var Td@2111@3540),
        Let ("Tu@2107@3538", (),
        Let ("Td@2108@3537", FRead (),
        Let ("Td@2118@3470@8222", Float 0.017453,
        Let ("v1@3476", FMul (Var Td@2108@3537, Var Td@2118@3470@8222),
        Let ("cos_v1@3477", App (Var cos@2665, [Var v1@3476]),
        Let ("sin_v1@3478", App (Var sin@2642, [Var v1@3476]),
        Let ("Tu@2105@3536", (),
        Let ("Td@2106@3535", FRead (),
        Let ("Td@2118@3470@8221", Float 0.017453,
        Let ("v2@3479", FMul (Var Td@2106@3535, Var Td@2118@3470@8221),
        Let ("cos_v2@3480", App (Var cos@2665, [Var v2@3479]),
        Let ("sin_v2@3481", App (Var sin@2642, [Var v2@3479]),
        Let ("Ti@2103@3531", Int 0,
        Let ("Td@2101@3533", FMul (Var cos_v1@3477, Var sin_v2@3481),
        Let ("Td@2102@3534", Float 200.000000,
        Let ("Td@2104@3532", FMul (Var Td@2101@3533, Var Td@2102@3534),
        Let ("Ta@8481", Static screenz_dir@2759,
        Let ("Tu@32@3482",
             Put (Var Ta@8481, Var Ti@2103@3531, Var Td@2104@3532),
        Let ("Ti@2099@3528", Int 1,
        Let ("Td@2098@3530", Float -200.000000,
        Let ("Td@2100@3529", FMul (Var sin_v1@3478, Var Td@2098@3530),
        Let ("Ta@8480", Static screenz_dir@2759,
        Let ("Tu@31@3483",
             Put (Var Ta@8480, Var Ti@2099@3528, Var Td@2100@3529),
        Let ("Ti@2096@3524", Int 2,
        Let ("Td@2094@3526", FMul (Var cos_v1@3477, Var cos_v2@3480),
        Let ("Td@2095@3527", Float 200.000000,
        Let ("Td@2097@3525", FMul (Var Td@2094@3526, Var Td@2095@3527),
        Let ("Ta@8479", Static screenz_dir@2759,
        Let ("Tu@30@3484",
             Put (Var Ta@8479, Var Ti@2096@3524, Var Td@2097@3525),
        Let ("Ti@2093@3523", Int 0,
        Let ("Ta@8478", Static screenx_dir@2757,
        Let ("Tu@29@3485",
             Put (Var Ta@8478, Var Ti@2093@3523, Var cos_v2@3480),
        Let ("Ti@2091@3521", Int 1,
        Let ("Td@2092@3522", Float 0.000000,
        Let ("Ta@8477", Static screenx_dir@2757,
        Let ("Tu@28@3486",
             Put (Var Ta@8477, Var Ti@2091@3521, Var Td@2092@3522),
        Let ("Ti@2089@3519", Int 2,
        Let ("Td@2090@3520", FNeg Var sin_v2@3481,
        Let ("Ta@8476", Static screenx_dir@2757,
        Let ("Tu@27@3487",
             Put (Var Ta@8476, Var Ti@2089@3519, Var Td@2090@3520),
        Let ("Ti@2087@3516", Int 0,
        Let ("Td@2086@3518", FNeg Var sin_v1@3478,
        Let ("Td@2088@3517", FMul (Var Td@2086@3518, Var sin_v2@3481),
        Let ("Ta@8475", Static screeny_dir@2758,
        Let ("Tu@26@3488",
             Put (Var Ta@8475, Var Ti@2087@3516, Var Td@2088@3517),
        Let ("Ti@2084@3514", Int 1,
        Let ("Td@2085@3515", FNeg Var cos_v1@3477,
        Let ("Ta@8474", Static screeny_dir@2758,
        Let ("Tu@25@3489",
             Put (Var Ta@8474, Var Ti@2084@3514, Var Td@2085@3515),
        Let ("Ti@2082@3511", Int 2,
        Let ("Td@2081@3513", FNeg Var sin_v1@3478,
        Let ("Td@2083@3512", FMul (Var Td@2081@3513, Var cos_v2@3480),
        Let ("Ta@8473", Static screeny_dir@2758,
        Let ("Tu@24@3490",
             Put (Var Ta@8473, Var Ti@2082@3511, Var Td@2083@3512),
        Let ("Ti@2079@3505", Int 0,
        Let ("Ti@2075@3510", Int 0,
        Let ("Ta@8472", Static screen@2737,
        Let ("Td@2077@3507", Get (Var Ta@8472, Var Ti@2075@3510),
        Let ("Ti@2076@3509", Int 0,
        Let ("Ta@8471", Static screenz_dir@2759,
        Let ("Td@2078@3508", Get (Var Ta@8471, Var Ti@2076@3509),
        Let ("Td@2080@3506", FSub (Var Td@2077@3507, Var Td@2078@3508),
        Let ("Ta@8470", Static viewpoint@2738,
        Let ("Tu@23@3491",
             Put (Var Ta@8470, Var Ti@2079@3505, Var Td@2080@3506),
        Let ("Ti@2073@3499", Int 1,
        Let ("Ti@2069@3504", Int 1,
        Let ("Ta@8469", Static screen@2737,
        Let ("Td@2071@3501", Get (Var Ta@8469, Var Ti@2069@3504),
        Let ("Ti@2070@3503", Int 1,
        Let ("Ta@8468", Static screenz_dir@2759,
        Let ("Td@2072@3502", Get (Var Ta@8468, Var Ti@2070@3503),
        Let ("Td@2074@3500", FSub (Var Td@2071@3501, Var Td@2072@3502),
        Let ("Ta@8467", Static viewpoint@2738,
        Let ("Tu@22@3492",
             Put (Var Ta@8467, Var Ti@2073@3499, Var Td@2074@3500),
        Let ("Ti@2067@3493", Int 2,
        Let ("Ti@2063@3498", Int 2,
        Let ("Ta@8466", Static screen@2737,
        Let ("Td@2065@3495", Get (Var Ta@8466, Var Ti@2063@3498),
        Let ("Ti@2064@3497", Int 2,
        Let ("Ta@8465", Static screenz_dir@2759,
        Let ("Td@2066@3496", Get (Var Ta@8465, Var Ti@2064@3497),
        Let ("Td@2068@3494", FSub (Var Td@2065@3495, Var Td@2066@3496),
        Let ("Ta@8464", Static viewpoint@2738,
        Put (Var Ta@8464, Var Ti@2067@3493, Var Td@2068@3494))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))),
LetRec ("read_light@3548", ["Tu@36@3549"],
        Let ("Tu@2062@3573", (),
        Let ("nl@3550", Read (),
        Let ("Tu@2060@3572", (),
        Let ("Td@2061@3571", FRead (),
        Let ("Td@2118@3470@8220", Float 0.017453,
        Let ("l1@3551", FMul (Var Td@2061@3571, Var Td@2118@3470@8220),
        Let ("sl1@3552", App (Var sin@2642, [Var l1@3551]),
        Let ("Ti@2058@3569", Int 1,
        Let ("Td@2059@3570", FNeg Var sl1@3552,
        Let ("Ta@8463", Static light@2739,
        Let ("Tu@39@3553",
             Put (Var Ta@8463, Var Ti@2058@3569, Var Td@2059@3570),
        Let ("Tu@2056@3568", (),
        Let ("Td@2057@3567", FRead (),
        Let ("Td@2118@3470@8219", Float 0.017453,
        Let ("l2@3554", FMul (Var Td@2057@3567, Var Td@2118@3470@8219),
        Let ("cl1@3555", App (Var cos@2665, [Var l1@3551]),
        Let ("sl2@3556", App (Var sin@2642, [Var l2@3554]),
        Let ("Ti@2054@3565", Int 0,
        Let ("Td@2055@3566", FMul (Var cl1@3555, Var sl2@3556),
        Let ("Ta@8462", Static light@2739,
        Let ("Tu@38@3557",
             Put (Var Ta@8462, Var Ti@2054@3565, Var Td@2055@3566),
        Let ("cl2@3558", App (Var cos@2665, [Var l2@3554]),
        Let ("Ti@2052@3563", Int 2,
        Let ("Td@2053@3564", FMul (Var cl1@3555, Var cl2@3558),
        Let ("Ta@8461", Static light@2739,
        Let ("Tu@37@3559",
             Put (Var Ta@8461, Var Ti@2052@3563, Var Td@2053@3564),
        Let ("Ti@2050@3560", Int 0,
        Let ("Tu@2049@3562", (),
        Let ("Td@2051@3561", FRead (),
        Let ("Ta@8460", Static beam@2740,
        Put (Var Ta@8460, Var Ti@2050@3560, Var Td@2051@3561))))))))))))))))))))))))))))))),
LetRec ("rotate_quadratic_matrix@3574", ["abc@3575"; "rot@3576"],
        Let ("Ti@2047@3686", Int 0,
        Let ("Td@2048@3685", Get (Var rot@3576, Var Ti@2047@3686),
        Let ("cos_x@3577", App (Var cos@2665, [Var Td@2048@3685]),
        Let ("Ti@2045@3684", Int 0,
        Let ("Td@2046@3683", Get (Var rot@3576, Var Ti@2045@3684),
        Let ("sin_x@3578", App (Var sin@2642, [Var Td@2046@3683]),
        Let ("Ti@2043@3682", Int 1,
        Let ("Td@2044@3681", Get (Var rot@3576, Var Ti@2043@3682),
        Let ("cos_y@3579", App (Var cos@2665, [Var Td@2044@3681]),
        Let ("Ti@2041@3680", Int 1,
        Let ("Td@2042@3679", Get (Var rot@3576, Var Ti@2041@3680),
        Let ("sin_y@3580", App (Var sin@2642, [Var Td@2042@3679]),
        Let ("Ti@2039@3678", Int 2,
        Let ("Td@2040@3677", Get (Var rot@3576, Var Ti@2039@3678),
        Let ("cos_z@3581", App (Var cos@2665, [Var Td@2040@3677]),
        Let ("Ti@2037@3676", Int 2,
        Let ("Td@2038@3675", Get (Var rot@3576, Var Ti@2037@3676),
        Let ("sin_z@3582", App (Var sin@2642, [Var Td@2038@3675]),
        Let ("m00@3583", FMul (Var cos_y@3579, Var cos_z@3581),
        Let ("Td@2034@3674", FMul (Var sin_x@3578, Var sin_y@3580),
        Let ("Td@2035@3672", FMul (Var Td@2034@3674, Var cos_z@3581),
        Let ("Td@2036@3673", FMul (Var cos_x@3577, Var sin_z@3582),
        Let ("m01@3584", FSub (Var Td@2035@3672, Var Td@2036@3673),
        Let ("Td@2031@3671", FMul (Var cos_x@3577, Var sin_y@3580),
        Let ("Td@2032@3669", FMul (Var Td@2031@3671, Var cos_z@3581),
        Let ("Td@2033@3670", FMul (Var sin_x@3578, Var sin_z@3582),
        Let ("m02@3585", FAdd (Var Td@2032@3669, Var Td@2033@3670),
        Let ("m10@3586", FMul (Var cos_y@3579, Var sin_z@3582),
        Let ("Td@2028@3668", FMul (Var sin_x@3578, Var sin_y@3580),
        Let ("Td@2029@3666", FMul (Var Td@2028@3668, Var sin_z@3582),
        Let ("Td@2030@3667", FMul (Var cos_x@3577, Var cos_z@3581),
        Let ("m11@3587", FAdd (Var Td@2029@3666, Var Td@2030@3667),
        Let ("Td@2025@3665", FMul (Var cos_x@3577, Var sin_y@3580),
        Let ("Td@2026@3663", FMul (Var Td@2025@3665, Var sin_z@3582),
        Let ("Td@2027@3664", FMul (Var sin_x@3578, Var cos_z@3581),
        Let ("m12@3588", FSub (Var Td@2026@3663, Var Td@2027@3664),
        Let ("m20@3589", FNeg Var sin_y@3580,
        Let ("m21@3590", FMul (Var sin_x@3578, Var cos_y@3579),
        Let ("m22@3591", FMul (Var cos_x@3577, Var cos_y@3579),
        Let ("Ti@2024@3662", Int 0,
        Let ("ao@3592", Get (Var abc@3575, Var Ti@2024@3662),
        Let ("Ti@2023@3661", Int 1,
        Let ("bo@3593", Get (Var abc@3575, Var Ti@2023@3661),
        Let ("Ti@2022@3660", Int 2,
        Let ("co@3594", Get (Var abc@3575, Var Ti@2022@3660),
        Let ("Ti@2020@3651", Int 0,
        Let ("Td@2013@3659", FMul (Var m00@3583, Var m00@3583),
        Let ("Td@2015@3656", FMul (Var ao@3592, Var Td@2013@3659),
        Let ("Td@2014@3658", FMul (Var m10@3586, Var m10@3586),
        Let ("Td@2016@3657", FMul (Var bo@3593, Var Td@2014@3658),
        Let ("Td@2018@3653", FAdd (Var Td@2015@3656, Var Td@2016@3657),
        Let ("Td@2017@3655", FMul (Var m20@3589, Var m20@3589),
        Let ("Td@2019@3654", FMul (Var co@3594, Var Td@2017@3655),
        Let ("Td@2021@3652", FAdd (Var Td@2018@3653, Var Td@2019@3654),
        Let ("Tu@44@3595",
             Put (Var abc@3575, Var Ti@2020@3651, Var Td@2021@3652),
        Let ("Ti@2011@3642", Int 1,
        Let ("Td@2004@3650", FMul (Var m01@3584, Var m01@3584),
        Let ("Td@2006@3647", FMul (Var ao@3592, Var Td@2004@3650),
        Let ("Td@2005@3649", FMul (Var m11@3587, Var m11@3587),
        Let ("Td@2007@3648", FMul (Var bo@3593, Var Td@2005@3649),
        Let ("Td@2009@3644", FAdd (Var Td@2006@3647, Var Td@2007@3648),
        Let ("Td@2008@3646", FMul (Var m21@3590, Var m21@3590),
        Let ("Td@2010@3645", FMul (Var co@3594, Var Td@2008@3646),
        Let ("Td@2012@3643", FAdd (Var Td@2009@3644, Var Td@2010@3645),
        Let ("Tu@43@3596",
             Put (Var abc@3575, Var Ti@2011@3642, Var Td@2012@3643),
        Let ("Ti@2002@3633", Int 2,
        Let ("Td@1995@3641", FMul (Var m02@3585, Var m02@3585),
        Let ("Td@1997@3638", FMul (Var ao@3592, Var Td@1995@3641),
        Let ("Td@1996@3640", FMul (Var m12@3588, Var m12@3588),
        Let ("Td@1998@3639", FMul (Var bo@3593, Var Td@1996@3640),
        Let ("Td@2000@3635", FAdd (Var Td@1997@3638, Var Td@1998@3639),
        Let ("Td@1999@3637", FMul (Var m22@3591, Var m22@3591),
        Let ("Td@2001@3636", FMul (Var co@3594, Var Td@1999@3637),
        Let ("Td@2003@3634", FAdd (Var Td@2000@3635, Var Td@2001@3636),
        Let ("Tu@42@3597",
             Put (Var abc@3575, Var Ti@2002@3633, Var Td@2003@3634),
        Let ("Ti@1993@3622", Int 0,
        Let ("Td@1991@3624", Float 2.000000,
        Let ("Td@1984@3632", FMul (Var ao@3592, Var m01@3584),
        Let ("Td@1986@3629", FMul (Var Td@1984@3632, Var m02@3585),
        Let ("Td@1985@3631", FMul (Var bo@3593, Var m11@3587),
        Let ("Td@1987@3630", FMul (Var Td@1985@3631, Var m12@3588),
        Let ("Td@1989@3626", FAdd (Var Td@1986@3629, Var Td@1987@3630),
        Let ("Td@1988@3628", FMul (Var co@3594, Var m21@3590),
        Let ("Td@1990@3627", FMul (Var Td@1988@3628, Var m22@3591),
        Let ("Td@1992@3625", FAdd (Var Td@1989@3626, Var Td@1990@3627),
        Let ("Td@1994@3623", FMul (Var Td@1991@3624, Var Td@1992@3625),
        Let ("Tu@41@3598",
             Put (Var rot@3576, Var Ti@1993@3622, Var Td@1994@3623),
        Let ("Ti@1982@3611", Int 1,
        Let ("Td@1980@3613", Float 2.000000,
        Let ("Td@1973@3621", FMul (Var ao@3592, Var m00@3583),
        Let ("Td@1975@3618", FMul (Var Td@1973@3621, Var m02@3585),
        Let ("Td@1974@3620", FMul (Var bo@3593, Var m10@3586),
        Let ("Td@1976@3619", FMul (Var Td@1974@3620, Var m12@3588),
        Let ("Td@1978@3615", FAdd (Var Td@1975@3618, Var Td@1976@3619),
        Let ("Td@1977@3617", FMul (Var co@3594, Var m20@3589),
        Let ("Td@1979@3616", FMul (Var Td@1977@3617, Var m22@3591),
        Let ("Td@1981@3614", FAdd (Var Td@1978@3615, Var Td@1979@3616),
        Let ("Td@1983@3612", FMul (Var Td@1980@3613, Var Td@1981@3614),
        Let ("Tu@40@3599",
             Put (Var rot@3576, Var Ti@1982@3611, Var Td@1983@3612),
        Let ("Ti@1971@3600", Int 2,
        Let ("Td@1969@3602", Float 2.000000,
        Let ("Td@1962@3610", FMul (Var ao@3592, Var m00@3583),
        Let ("Td@1964@3607", FMul (Var Td@1962@3610, Var m01@3584),
        Let ("Td@1963@3609", FMul (Var bo@3593, Var m10@3586),
        Let ("Td@1965@3608", FMul (Var Td@1963@3609, Var m11@3587),
        Let ("Td@1967@3604", FAdd (Var Td@1964@3607, Var Td@1965@3608),
        Let ("Td@1966@3606", FMul (Var co@3594, Var m20@3589),
        Let ("Td@1968@3605", FMul (Var Td@1966@3606, Var m21@3590),
        Let ("Td@1970@3603", FAdd (Var Td@1967@3604, Var Td@1968@3605),
        Let ("Td@1972@3601", FMul (Var Td@1969@3602, Var Td@1970@3603),
        Put (Var rot@3576, Var Ti@1971@3600, Var Td@1972@3601))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))),
LetRec ("read_nth_object@3687", ["n@3688"],
        Let ("Tu@1961@3816", (),
        Let ("texture@3689", Read (),
        Let ("Ti@1869@3815", Int 1,
        Let ("Ti@1870@3690", Int -1,
        IfEq
         (Var texture@3689,
          Var Ti@1870@3690,
          Int 0,
          Let ("Tu@1960@3814", (),
          Let ("form@3691", Read (),
          Let ("Tu@1959@3813", (),
          Let ("refltype@3692", Read (),
          Let ("Tu@1958@3812", (),
          Let ("isrot_p@3693", Read (),
          Let ("Ti@1956@3810", Int 3,
          Let ("Td@1957@3811", Float 0.000000,
          Let ("abc@3694",
               ExtFunApp
                (Var create_float_array,
                 [Var Ti@1956@3810; Var Td@1957@3811]),
          Let ("Ti@1954@3807", Int 0,
          Let ("Tu@1953@3809", (),
          Let ("Td@1955@3808", FRead (),
          Let ("Tu@63@3695",
               Put (Var abc@3694, Var Ti@1954@3807, Var Td@1955@3808),
          Let ("Ti@1951@3804", Int 1,
          Let ("Tu@1950@3806", (),
          Let ("Td@1952@3805", FRead (),
          Let ("Tu@62@3696",
               Put (Var abc@3694, Var Ti@1951@3804, Var Td@1952@3805),
          Let ("Ti@1948@3801", Int 2,
          Let ("Tu@1947@3803", (),
          Let ("Td@1949@3802", FRead (),
          Let ("Tu@61@3697",
               Put (Var abc@3694, Var Ti@1948@3801, Var Td@1949@3802),
          Let ("Ti@1945@3799", Int 3,
          Let ("Td@1946@3800", Float 0.000000,
          Let ("xyz@3698",
               ExtFunApp
                (Var create_float_array,
                 [Var Ti@1945@3799; Var Td@1946@3800]),
          Let ("Ti@1943@3796", Int 0,
          Let ("Tu@1942@3798", (),
          Let ("Td@1944@3797", FRead (),
          Let ("Tu@60@3699",
               Put (Var xyz@3698, Var Ti@1943@3796, Var Td@1944@3797),
          Let ("Ti@1940@3793", Int 1,
          Let ("Tu@1939@3795", (),
          Let ("Td@1941@3794", FRead (),
          Let ("Tu@59@3700",
               Put (Var xyz@3698, Var Ti@1940@3793, Var Td@1941@3794),
          Let ("Ti@1937@3790", Int 2,
          Let ("Tu@1936@3792", (),
          Let ("Td@1938@3791", FRead (),
          Let ("Tu@58@3701",
               Put (Var xyz@3698, Var Ti@1937@3790, Var Td@1938@3791),
          Let ("Tu@1934@3789", (),
          Let ("Td@1935@3788", FRead (),
          Let ("Td@2547@2560@8218", Float 0.000000,
          Let ("m_invert@3702",
               IfLE (Var Td@2547@2560@8218, Var Td@1935@3788, Int 0, Int 1),
          Let ("Ti@1932@3786", Int 2,
          Let ("Td@1933@3787", Float 0.000000,
          Let ("reflparam@3703",
               ExtFunApp
                (Var create_float_array,
                 [Var Ti@1932@3786; Var Td@1933@3787]),
          Let ("Ti@1930@3783", Int 0,
          Let ("Tu@1929@3785", (),
          Let ("Td@1931@3784", FRead (),
          Let ("Tu@57@3704",
               Put (Var reflparam@3703, Var Ti@1930@3783, Var Td@1931@3784),
          Let ("Ti@1927@3780", Int 1,
          Let ("Tu@1926@3782", (),
          Let ("Td@1928@3781", FRead (),
          Let ("Tu@56@3705",
               Put (Var reflparam@3703, Var Ti@1927@3780, Var Td@1928@3781),
          Let ("Ti@1924@3778", Int 3,
          Let ("Td@1925@3779", Float 0.000000,
          Let ("color@3706",
               ExtFunApp
                (Var create_float_array,
                 [Var Ti@1924@3778; Var Td@1925@3779]),
          Let ("Ti@1922@3775", Int 0,
          Let ("Tu@1921@3777", (),
          Let ("Td@1923@3776", FRead (),
          Let ("Tu@55@3707",
               Put (Var color@3706, Var Ti@1922@3775, Var Td@1923@3776),
          Let ("Ti@1919@3772", Int 1,
          Let ("Tu@1918@3774", (),
          Let ("Td@1920@3773", FRead (),
          Let ("Tu@54@3708",
               Put (Var color@3706, Var Ti@1919@3772, Var Td@1920@3773),
          Let ("Ti@1916@3769", Int 2,
          Let ("Tu@1915@3771", (),
          Let ("Td@1917@3770", FRead (),
          Let ("Tu@53@3709",
               Put (Var color@3706, Var Ti@1916@3769, Var Td@1917@3770),
          Let ("Ti@1913@3767", Int 3,
          Let ("Td@1914@3768", Float 0.000000,
          Let ("rotation@3710",
               ExtFunApp
                (Var create_float_array,
                 [Var Ti@1913@3767; Var Td@1914@3768]),
          Let ("Ti@1900@3752", Int 0,
          Let ("Tu@52@3711",
               IfEq
                (Var isrot_p@3693,
                 Var Ti@1900@3752,
                 (),
                 Let ("Ti@1911@3763", Int 0,
                 Let ("Tu@1909@3766", (),
                 Let ("Td@1910@3765", FRead (),
                 Let ("Td@2118@3470@8217", Float 0.017453,
                 Let ("Td@1912@3764",
                      FMul (Var Td@1910@3765, Var Td@2118@3470@8217),
                 Let ("Tu@46@3753",
                      Put
                       (Var rotation@3710,
                        Var Ti@1911@3763,
                        Var Td@1912@3764),
                 Let ("Ti@1907@3759", Int 1,
                 Let ("Tu@1905@3762", (),
                 Let ("Td@1906@3761", FRead (),
                 Let ("Td@2118@3470@8216", Float 0.017453,
                 Let ("Td@1908@3760",
                      FMul (Var Td@1906@3761, Var Td@2118@3470@8216),
                 Let ("Tu@45@3754",
                      Put
                       (Var rotation@3710,
                        Var Ti@1907@3759,
                        Var Td@1908@3760),
                 Let ("Ti@1903@3755", Int 2,
                 Let ("Tu@1901@3758", (),
                 Let ("Td@1902@3757", FRead (),
                 Let ("Td@2118@3470@8215", Float 0.017453,
                 Let ("Td@1904@3756",
                      FMul (Var Td@1902@3757, Var Td@2118@3470@8215),
                 Put (Var rotation@3710, Var Ti@1903@3755, Var Td@1904@3756))))))))))))))))))),
          Let ("Ti@1899@3751", Int 2,
          Let ("m_invert2@3712",
               IfEq
                (Var form@3691, Var Ti@1899@3751, Int 1, Var m_invert@3702),
          Let ("Ti@1897@3749", Int 4,
          Let ("Td@1898@3750", Float 0.000000,
          Let ("ctbl@3713",
               ExtFunApp
                (Var create_float_array,
                 [Var Ti@1897@3749; Var Td@1898@3750]),
          Let ("obj@3714",
               Tuple
                [Var rotation@3710; Var color@3706; Var reflparam@3703;
                 Var m_invert2@3712; Var xyz@3698; Var abc@3694;
                 Var isrot_p@3693; Var refltype@3692; Var form@3691;
                 Var texture@3689; Var ctbl@3713],
          Let ("Ta@8459", Static objects@2736,
          Let ("Tu@51@3715", Put (Var Ta@8459, Var n@3688, Var obj@3714),
          Let ("Ti@1872@3719", Int 3,
          Let ("Tu@50@3716",
               IfEq
                (Var form@3691,
                 Var Ti@1872@3719,
                 Let ("Ti@1896@3748", Int 0,
                 Let ("a@3723", Get (Var abc@3694, Var Ti@1896@3748),
                 Let ("Ti@1894@3742", Int 0,
                 Let ("Tb@1890@3744", Int 0,
                 Let ("Td@2546@2563@8214", Float 0.000000,
                 Let ("Tb@1891@3745",
                      IfEq (Var a@3723, Var Td@2546@2563@8214, Int 1, Int 0),
                 Let ("Td@1895@3743",
                      IfEq
                       (Var Tb@1891@3745,
                        Var Tb@1890@3744,
                        Let ("Td@1892@3746",
                             App (Var sgn@2770, [Var a@3723]),
                        Let ("Td@1893@3747", FMul (Var a@3723, Var a@3723),
                        FDiv (Var Td@1892@3746, Var Td@1893@3747))),
                        Float 0.000000),
                 Let ("Tu@48@3724",
                      Put (Var abc@3694, Var Ti@1894@3742, Var Td@1895@3743),
                 Let ("Ti@1889@3741", Int 1,
                 Let ("b@3725", Get (Var abc@3694, Var Ti@1889@3741),
                 Let ("Ti@1887@3735", Int 1,
                 Let ("Tb@1883@3737", Int 0,
                 Let ("Td@2546@2563@8213", Float 0.000000,
                 Let ("Tb@1884@3738",
                      IfEq (Var b@3725, Var Td@2546@2563@8213, Int 1, Int 0),
                 Let ("Td@1888@3736",
                      IfEq
                       (Var Tb@1884@3738,
                        Var Tb@1883@3737,
                        Let ("Td@1885@3739",
                             App (Var sgn@2770, [Var b@3725]),
                        Let ("Td@1886@3740", FMul (Var b@3725, Var b@3725),
                        FDiv (Var Td@1885@3739, Var Td@1886@3740))),
                        Float 0.000000),
                 Let ("Tu@47@3726",
                      Put (Var abc@3694, Var Ti@1887@3735, Var Td@1888@3736),
                 Let ("Ti@1882@3734", Int 2,
                 Let ("c@3727", Get (Var abc@3694, Var Ti@1882@3734),
                 Let ("Ti@1880@3728", Int 2,
                 Let ("Tb@1876@3730", Int 0,
                 Let ("Td@2546@2563@8212", Float 0.000000,
                 Let ("Tb@1877@3731",
                      IfEq (Var c@3727, Var Td@2546@2563@8212, Int 1, Int 0),
                 Let ("Td@1881@3729",
                      IfEq
                       (Var Tb@1877@3731,
                        Var Tb@1876@3730,
                        Let ("Td@1878@3732",
                             App (Var sgn@2770, [Var c@3727]),
                        Let ("Td@1879@3733", FMul (Var c@3727, Var c@3727),
                        FDiv (Var Td@1878@3732, Var Td@1879@3733))),
                        Float 0.000000),
                 Put (Var abc@3694, Var Ti@1880@3728, Var Td@1881@3729)))))))))))))))))))))))),
                 Let ("Ti@1873@3720", Int 2,
                 IfEq
                  (Var form@3691,
                   Var Ti@1873@3720,
                   Let ("Tb@1874@3722", Int 0,
                   Let ("Tb@1875@3721",
                        IfEq
                         (Var m_invert@3702, Var Tb@1874@3722, Int 1, Int 0),
                   App
                    (Var vecunit_sgn@2873, [Var abc@3694; Var Tb@1875@3721]))),
                   ()))),
          Let ("Ti@1871@3718", Int 0,
          Let ("Tu@49@3717",
               IfEq
                (Var isrot_p@3693,
                 Var Ti@1871@3718,
                 (),
                 App
                  (Var rotate_quadratic_matrix@3574,
                   [Var abc@3694; Var rotation@3710])),
          Int 1)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))),
LetRec ("read_object@3817", ["n@3818"],
        Let ("Ti@1863@3819", Int 60,
        IfLE
         (Var Ti@1863@3819,
          Var n@3818,
          (),
          Let ("Tb@1864@3820", Int 0,
          Let ("Tb@1865@3821", App (Var read_nth_object@3687, [Var n@3818]),
          IfEq
           (Var Tb@1865@3821,
            Var Tb@1864@3820,
            Let ("Ti@1868@3824", Int 0,
            Let ("Ta@8458", Static n_objects@2735,
            Put (Var Ta@8458, Var Ti@1868@3824, Var n@3818))),
            Let ("Ti@1866@3823", Int 1,
            Let ("Ti@1867@3822", Add (Var n@3818, Var Ti@1866@3823),
            App (Var read_object@3817, [Var Ti@1867@3822])))))))),
LetRec ("read_net_item@3828", ["length@3829"],
        Let ("Tu@1861@3841", (),
        Let ("item@3830", Read (),
        Let ("Ti@1853@3840", Int 1,
        Let ("Ti@1854@3831", Int -1,
        IfEq
         (Var item@3830,
          Var Ti@1854@3831,
          Let ("Ti@1857@3839", Int 1,
          Let ("Ti@1859@3836", Add (Var length@3829, Var Ti@1857@3839),
          Let ("Ti@1858@3838", Int 1,
          Let ("Ti@1860@3837", Int -1,
          ExtFunApp (Var create_array, [Var Ti@1859@3836; Var Ti@1860@3837]))))),
          Let ("Ti@1855@3835", Int 1,
          Let ("Ti@1856@3834", Add (Var length@3829, Var Ti@1855@3835),
          Let ("v@3832", App (Var read_net_item@3828, [Var Ti@1856@3834]),
          Let ("Tu@65@3833",
               Put (Var v@3832, Var length@3829, Var item@3830),
          Var v@3832))))))))),
LetRec ("read_or_network@3842", ["length@3843"],
        Let ("Ti@1852@3855", Int 0,
        Let ("net@3844", App (Var read_net_item@3828, [Var Ti@1852@3855]),
        Let ("Ti@1845@3854", Int 1,
        Let ("Ti@1846@3845", Int -1,
        Let ("Ti@1844@3853", Int 0,
        Let ("Ti@1847@3846", Get (Var net@3844, Var Ti@1844@3853),
        IfEq
         (Var Ti@1847@3846,
          Var Ti@1846@3845,
          Let ("Ti@1850@3852", Int 1,
          Let ("Ti@1851@3851", Add (Var length@3843, Var Ti@1850@3852),
          ExtFunApp (Var create_array, [Var Ti@1851@3851; Var net@3844]))),
          Let ("Ti@1848@3850", Int 1,
          Let ("Ti@1849@3849", Add (Var length@3843, Var Ti@1848@3850),
          Let ("v@3847", App (Var read_or_network@3842, [Var Ti@1849@3849]),
          Let ("Tu@66@3848", Put (Var v@3847, Var length@3843, Var net@3844),
          Var v@3847))))))))))),
LetRec ("read_and_network@3856", ["n@3857"],
        Let ("Ti@1843@3866", Int 0,
        Let ("net@3858", App (Var read_net_item@3828, [Var Ti@1843@3866]),
        Let ("Ti@1838@3865", Int 1,
        Let ("Ti@1839@3859", Int -1,
        Let ("Ti@1837@3864", Int 0,
        Let ("Ti@1840@3860", Get (Var net@3858, Var Ti@1837@3864),
        IfEq
         (Var Ti@1840@3860,
          Var Ti@1839@3859,
          (),
          Let ("Ta@8457", Static and_net@2741,
          Let ("Tu@67@3861", Put (Var Ta@8457, Var n@3857, Var net@3858),
          Let ("Ti@1841@3863", Int 1,
          Let ("Ti@1842@3862", Add (Var n@3857, Var Ti@1841@3863),
          App (Var read_and_network@3856, [Var Ti@1842@3862])))))))))))),
LetRec ("read_parameter@3867", ["Tu@68@3868"],
        Let ("Tu@1836@3879", (),
        Let ("Tu@72@3869",
             App (Var read_screen_settings@3471, [Var Tu@1836@3879]),
        Let ("Tu@1835@3878", (),
        Let ("Tu@71@3870", App (Var read_light@3548, [Var Tu@1835@3878]),
        Let ("Tu@1834@3877", (),
        Let ("Ti@1862@3827@8211", Int 0,
        Let ("Tu@70@3871",
             App (Var read_object@3817, [Var Ti@1862@3827@8211]),
        Let ("Ti@1833@3876", Int 0,
        Let ("Tu@69@3872",
             App (Var read_and_network@3856, [Var Ti@1833@3876]),
        Let ("Ti@1831@3873", Int 0,
        Let ("Ti@1830@3875", Int 0,
        Let ("Ta@1832@3874",
             App (Var read_or_network@3842, [Var Ti@1830@3875]),
        Let ("Ta@8456", Static or_net@2742,
        Put (Var Ta@8456, Var Ti@1831@3873, Var Ta@1832@3874)))))))))))))),
LetRec ("solver_rect_surface@3880",
        ["i1@3887"; "i0@3886"; "b2@3885"; "b1@3884"; "b0@3883";
         "dirvec@3882"; "m@3881"; "i2@3888"],
        Let ("Tb@1806@3889", Int 0,
        Let ("Td@1805@3917", Get (Var dirvec@3882, Var i0@3886),
        Let ("Td@2546@2563@8210", Float 0.000000,
        Let ("Tb@1807@3890",
             IfEq (Var Td@1805@3917, Var Td@2546@2563@8210, Int 1, Int 0),
        IfEq
         (Var Tb@1807@3890,
          Var Tb@1806@3889,
          LetTuple (["xm_rot123@3183@8208"; "xm_color@3182@8207";
                     "xm_surfparams@3181@8206"; "xm_invert@3180@8205";
                     "xm_xyz@3179@8204"; "m_abc@3178@8203";
                     "xm_isrot@3177@8202"; "xm_surface@3176@8201";
                     "xm_shape@3175@8200"; "xm_tex@3174@8199";
                     "xm_ctbl@3184@8209"],
                    Var m@3881,
          LetTuple (["xm_rot123@3115@8197"; "xm_color@3114@8196";
                     "xm_surfparams@3113@8195"; "m_invert@3112@8194";
                     "xm_xyz@3111@8193"; "xm_abc@3110@8192";
                     "xm_isrot@3109@8191"; "xm_surface@3108@8190";
                     "xm_shape@3107@8189"; "xm_tex@3106@8188";
                     "xm_ctbl@3116@8198"],
                    Var m@3881,
          Let ("Td@1825@3916", Get (Var dirvec@3882, Var i0@3886),
          Let ("Td@2547@2560@8187", Float 0.000000,
          Let ("Tb@1827@3915",
               IfLE (Var Td@2547@2560@8187, Var Td@1825@3916, Int 0, Int 1),
          Let ("Tb@2352@2768@8185", Int 0,
          Let ("Tb@1828@3912",
               IfEq
                (Var m_invert@3112@8194,
                 Var Tb@2352@2768@8185,
                 Var Tb@1827@3915,
                 Let ("Tb@2353@2769@8186", Int 0,
                 IfEq (Var Tb@1827@3915, Var Tb@2353@2769@8186, Int 1, Int 0))),
          Let ("Td@1829@3913", Get (Var m_abc@3178@8203, Var i0@3886),
          Let ("Tb@2347@2779@8184", Int 0,
          Let ("d@3892",
               IfEq
                (Var Tb@1828@3912,
                 Var Tb@2347@2779@8184,
                 FNeg Var Td@1829@3913,
                 Var Td@1829@3913),
          Let ("Td@1823@3910", FSub (Var d@3892, Var b0@3883),
          Let ("Td@1824@3911", Get (Var dirvec@3882, Var i0@3886),
          Let ("d2@3893", FDiv (Var Td@1823@3910, Var Td@1824@3911),
          Let ("Tb@1813@3894", Int 0,
          Let ("Td@1808@3909", Get (Var dirvec@3882, Var i1@3887),
          Let ("Td@1809@3908", FMul (Var d2@3893, Var Td@1808@3909),
          Let ("Td@1810@3907", FAdd (Var Td@1809@3908, Var b1@3884),
          Let ("Td@1811@3905", FAbs Var Td@1810@3907,
          Let ("Td@1812@3906", Get (Var m_abc@3178@8203, Var i1@3887),
          Let ("Tb@1814@3895",
               IfLE (Var Td@1812@3906, Var Td@1811@3905, Int 0, Int 1),
          IfEq
           (Var Tb@1814@3895,
            Var Tb@1813@3894,
            Int 0,
            Let ("Tb@1820@3896", Int 0,
            Let ("Td@1815@3904", Get (Var dirvec@3882, Var i2@3888),
            Let ("Td@1816@3903", FMul (Var d2@3893, Var Td@1815@3904),
            Let ("Td@1817@3902", FAdd (Var Td@1816@3903, Var b2@3885),
            Let ("Td@1818@3900", FAbs Var Td@1817@3902,
            Let ("Td@1819@3901", Get (Var m_abc@3178@8203, Var i2@3888),
            Let ("Tb@1821@3897",
                 IfLE (Var Td@1819@3901, Var Td@1818@3900, Int 0, Int 1),
            IfEq
             (Var Tb@1821@3897,
              Var Tb@1820@3896,
              Int 0,
              Let ("Ti@1822@3899", Int 0,
              Let ("Ta@8455", Static solver_dist@2743,
              Let ("Tu@73@3898",
                   Put (Var Ta@8455, Var Ti@1822@3899, Var d2@3893),
              Int 1)))))))))))))))))))))))))))))))),
          Int 0))))),
LetRec ("solver_rect@3918",
        ["b1@3922"; "b0@3921"; "dirvec@3920"; "m@3919"; "b2@3923"],
        Let ("Tb@1793@3924", Int 0,
        Let ("Ti@1790@3936", Int 0,
        Let ("Ti@1791@3937", Int 1,
        Let ("Ti@1792@3938", Int 2,
        Let ("Tb@1794@3925",
             App
              (Var solver_rect_surface@3880,
               [Var Ti@1791@3937; Var Ti@1790@3936; Var b2@3923; Var b1@3922;
                Var b0@3921; Var dirvec@3920; Var m@3919; Var Ti@1792@3938]),
        IfEq
         (Var Tb@1794@3925,
          Var Tb@1793@3924,
          Let ("Tb@1798@3926", Int 0,
          Let ("Ti@1795@3933", Int 1,
          Let ("Ti@1796@3934", Int 2,
          Let ("Ti@1797@3935", Int 0,
          Let ("Tb@1799@3927",
               App
                (Var solver_rect_surface@3880,
                 [Var Ti@1796@3934; Var Ti@1795@3933; Var b0@3921;
                  Var b2@3923; Var b1@3922; Var dirvec@3920; Var m@3919;
                  Var Ti@1797@3935]),
          IfEq
           (Var Tb@1799@3927,
            Var Tb@1798@3926,
            Let ("Tb@1803@3928", Int 0,
            Let ("Ti@1800@3930", Int 2,
            Let ("Ti@1801@3931", Int 0,
            Let ("Ti@1802@3932", Int 1,
            Let ("Tb@1804@3929",
                 App
                  (Var solver_rect_surface@3880,
                   [Var Ti@1801@3931; Var Ti@1800@3930; Var b1@3922;
                    Var b0@3921; Var b2@3923; Var dirvec@3920; Var m@3919;
                    Var Ti@1802@3932]),
            IfEq (Var Tb@1804@3929, Var Tb@1803@3928, Int 0, Int 3)))))),
            Int 2)))))),
          Int 1)))))),
LetRec ("solver_surface@3939",
        ["b1@3943"; "b0@3942"; "dirvec@3941"; "m@3940"; "b2@3944"],
        LetTuple (["xm_rot123@3183@8182"; "xm_color@3182@8181";
                   "xm_surfparams@3181@8180"; "xm_invert@3180@8179";
                   "xm_xyz@3179@8178"; "m_abc@3178@8177";
                   "xm_isrot@3177@8176"; "xm_surface@3176@8175";
                   "xm_shape@3175@8174"; "xm_tex@3174@8173";
                   "xm_ctbl@3184@8183"],
                  Var m@3940,
        Let ("d@3946",
             App (Var veciprod@2908, [Var dirvec@3941; Var m_abc@3178@8177]),
        Let ("Tb@1784@3947", Int 0,
        Let ("Td@2548@2557@8172", Float 0.000000,
        Let ("Tb@1785@3948",
             IfLE (Var d@3946, Var Td@2548@2557@8172, Int 0, Int 1),
        IfEq
         (Var Tb@1785@3948,
          Var Tb@1784@3947,
          Int 0,
          Let ("Ti@1788@3950", Int 0,
          Let ("Td@1786@3953",
               App
                (Var veciprod2@2927,
                 [Var b1@3943; Var b0@3942; Var m_abc@3178@8177; Var b2@3944]),
          Let ("Td@1787@3952", FNeg Var Td@1786@3953,
          Let ("Td@1789@3951", FDiv (Var Td@1787@3952, Var d@3946),
          Let ("Ta@8454", Static solver_dist@2743,
          Let ("Tu@74@3949",
               Put (Var Ta@8454, Var Ti@1788@3950, Var Td@1789@3951),
          Int 1)))))))))))),
LetRec ("quadratic@3954", ["v1@3957"; "v0@3956"; "m@3955"; "v2@3958"],
        Let ("Td@1774@3981", FMul (Var v0@3956, Var v0@3956),
        LetTuple (["xm_rot123@3141@8169"; "xm_color@3140@8168";
                   "xm_surfparams@3139@8167"; "xm_invert@3138@8166";
                   "xm_xyz@3137@8165"; "m_abc@3136@8164";
                   "xm_isrot@3135@8163"; "xm_surface@3134@8162";
                   "xm_shape@3133@8161"; "xm_tex@3132@8160";
                   "xm_ctbl@3142@8170"],
                  Var m@3955,
        Let ("Ti@2134@3143@8171", Int 0,
        Let ("Td@1775@3982",
             Get (Var m_abc@3136@8164, Var Ti@2134@3143@8171),
        Let ("Td@1778@3977", FMul (Var Td@1774@3981, Var Td@1775@3982),
        Let ("Td@1776@3979", FMul (Var v1@3957, Var v1@3957),
        LetTuple (["xm_rot123@3155@8157"; "xm_color@3154@8156";
                   "xm_surfparams@3153@8155"; "xm_invert@3152@8154";
                   "xm_xyz@3151@8153"; "m_abc@3150@8152";
                   "xm_isrot@3149@8151"; "xm_surface@3148@8150";
                   "xm_shape@3147@8149"; "xm_tex@3146@8148";
                   "xm_ctbl@3156@8158"],
                  Var m@3955,
        Let ("Ti@2133@3157@8159", Int 1,
        Let ("Td@1777@3980",
             Get (Var m_abc@3150@8152, Var Ti@2133@3157@8159),
        Let ("Td@1779@3978", FMul (Var Td@1776@3979, Var Td@1777@3980),
        Let ("Td@1782@3973", FAdd (Var Td@1778@3977, Var Td@1779@3978),
        Let ("Td@1780@3975", FMul (Var v2@3958, Var v2@3958),
        LetTuple (["xm_rot123@3169@8145"; "xm_color@3168@8144";
                   "xm_surfparams@3167@8143"; "xm_invert@3166@8142";
                   "xm_xyz@3165@8141"; "m_abc@3164@8140";
                   "xm_isrot@3163@8139"; "xm_surface@3162@8138";
                   "xm_shape@3161@8137"; "xm_tex@3160@8136";
                   "xm_ctbl@3170@8146"],
                  Var m@3955,
        Let ("Ti@2132@3171@8147", Int 2,
        Let ("Td@1781@3976",
             Get (Var m_abc@3164@8140, Var Ti@2132@3171@8147),
        Let ("Td@1783@3974", FMul (Var Td@1780@3975, Var Td@1781@3976),
        Let ("diag_part@3959", FAdd (Var Td@1782@3973, Var Td@1783@3974),
        Let ("Ti@1761@3960", Int 0,
        LetTuple (["xm_rot123@3128@8134"; "xm_color@3127@8133";
                   "xm_surfparams@3126@8132"; "xm_invert@3125@8131";
                   "xm_xyz@3124@8130"; "xm_abc@3123@8129";
                   "m_isrot@3122@8128"; "xm_surface@3121@8127";
                   "xm_shape@3120@8126"; "xm_tex@3119@8125";
                   "xm_ctbl@3129@8135"],
                  Var m@3955,
        IfEq
         (Var m_isrot@3122@8128,
          Var Ti@1761@3960,
          Var diag_part@3959,
          Let ("Td@1763@3971", FMul (Var v1@3957, Var v2@3958),
          LetTuple (["m_rot123@3308@8122"; "xm_color@3307@8121";
                     "xm_surfparams@3306@8120"; "xm_invert@3305@8119";
                     "xm_xyz@3304@8118"; "xm_abc@3303@8117";
                     "xm_isrot@3302@8116"; "xm_surface@3301@8115";
                     "xm_shape@3300@8114"; "xm_tex@3299@8113";
                     "xm_ctbl@3309@8123"],
                    Var m@3955,
          Let ("Ti@2123@3310@8124", Int 0,
          Let ("Td@1764@3972",
               Get (Var m_rot123@3308@8122, Var Ti@2123@3310@8124),
          Let ("Td@1765@3970", FMul (Var Td@1763@3971, Var Td@1764@3972),
          Let ("Td@1768@3966", FAdd (Var diag_part@3959, Var Td@1765@3970),
          Let ("Td@1766@3968", FMul (Var v2@3958, Var v0@3956),
          LetTuple (["m_rot123@3322@8110"; "xm_color@3321@8109";
                     "xm_surfparams@3320@8108"; "xm_invert@3319@8107";
                     "xm_xyz@3318@8106"; "xm_abc@3317@8105";
                     "xm_isrot@3316@8104"; "xm_surface@3315@8103";
                     "xm_shape@3314@8102"; "xm_tex@3313@8101";
                     "xm_ctbl@3323@8111"],
                    Var m@3955,
          Let ("Ti@2122@3324@8112", Int 1,
          Let ("Td@1767@3969",
               Get (Var m_rot123@3322@8110, Var Ti@2122@3324@8112),
          Let ("Td@1769@3967", FMul (Var Td@1766@3968, Var Td@1767@3969),
          Let ("Td@1772@3962", FAdd (Var Td@1768@3966, Var Td@1769@3967),
          Let ("Td@1770@3964", FMul (Var v0@3956, Var v1@3957),
          LetTuple (["m_rot123@3336@8098"; "xm_color@3335@8097";
                     "xm_surfparams@3334@8096"; "xm_invert@3333@8095";
                     "xm_xyz@3332@8094"; "xm_abc@3331@8093";
                     "xm_isrot@3330@8092"; "xm_surface@3329@8091";
                     "xm_shape@3328@8090"; "xm_tex@3327@8089";
                     "xm_ctbl@3337@8099"],
                    Var m@3955,
          Let ("Ti@2121@3338@8100", Int 2,
          Let ("Td@1771@3965",
               Get (Var m_rot123@3336@8098, Var Ti@2121@3338@8100),
          Let ("Td@1773@3963", FMul (Var Td@1770@3964, Var Td@1771@3965),
          FAdd (Var Td@1772@3962, Var Td@1773@3963)))))))))))))))))))))))))))))))))))))),
LetRec ("bilinear@3983",
        ["w1@3989"; "w0@3988"; "v2@3987"; "v1@3986"; "v0@3985"; "m@3984";
         "w2@3990"],
        Let ("Td@1751@4020", FMul (Var v0@3985, Var w0@3988),
        LetTuple (["xm_rot123@3141@8086"; "xm_color@3140@8085";
                   "xm_surfparams@3139@8084"; "xm_invert@3138@8083";
                   "xm_xyz@3137@8082"; "m_abc@3136@8081";
                   "xm_isrot@3135@8080"; "xm_surface@3134@8079";
                   "xm_shape@3133@8078"; "xm_tex@3132@8077";
                   "xm_ctbl@3142@8087"],
                  Var m@3984,
        Let ("Ti@2134@3143@8088", Int 0,
        Let ("Td@1752@4021",
             Get (Var m_abc@3136@8081, Var Ti@2134@3143@8088),
        Let ("Td@1755@4016", FMul (Var Td@1751@4020, Var Td@1752@4021),
        Let ("Td@1753@4018", FMul (Var v1@3986, Var w1@3989),
        LetTuple (["xm_rot123@3155@8074"; "xm_color@3154@8073";
                   "xm_surfparams@3153@8072"; "xm_invert@3152@8071";
                   "xm_xyz@3151@8070"; "m_abc@3150@8069";
                   "xm_isrot@3149@8068"; "xm_surface@3148@8067";
                   "xm_shape@3147@8066"; "xm_tex@3146@8065";
                   "xm_ctbl@3156@8075"],
                  Var m@3984,
        Let ("Ti@2133@3157@8076", Int 1,
        Let ("Td@1754@4019",
             Get (Var m_abc@3150@8069, Var Ti@2133@3157@8076),
        Let ("Td@1756@4017", FMul (Var Td@1753@4018, Var Td@1754@4019),
        Let ("Td@1759@4012", FAdd (Var Td@1755@4016, Var Td@1756@4017),
        Let ("Td@1757@4014", FMul (Var v2@3987, Var w2@3990),
        LetTuple (["xm_rot123@3169@8062"; "xm_color@3168@8061";
                   "xm_surfparams@3167@8060"; "xm_invert@3166@8059";
                   "xm_xyz@3165@8058"; "m_abc@3164@8057";
                   "xm_isrot@3163@8056"; "xm_surface@3162@8055";
                   "xm_shape@3161@8054"; "xm_tex@3160@8053";
                   "xm_ctbl@3170@8063"],
                  Var m@3984,
        Let ("Ti@2132@3171@8064", Int 2,
        Let ("Td@1758@4015",
             Get (Var m_abc@3164@8057, Var Ti@2132@3171@8064),
        Let ("Td@1760@4013", FMul (Var Td@1757@4014, Var Td@1758@4015),
        Let ("diag_part@3991", FAdd (Var Td@1759@4012, Var Td@1760@4013),
        Let ("Ti@1731@3992", Int 0,
        LetTuple (["xm_rot123@3128@8051"; "xm_color@3127@8050";
                   "xm_surfparams@3126@8049"; "xm_invert@3125@8048";
                   "xm_xyz@3124@8047"; "xm_abc@3123@8046";
                   "m_isrot@3122@8045"; "xm_surface@3121@8044";
                   "xm_shape@3120@8043"; "xm_tex@3119@8042";
                   "xm_ctbl@3129@8052"],
                  Var m@3984,
        IfEq
         (Var m_isrot@3122@8045,
          Var Ti@1731@3992,
          Var diag_part@3991,
          Let ("Td@1733@4010", FMul (Var v2@3987, Var w1@3989),
          Let ("Td@1734@4011", FMul (Var v1@3986, Var w2@3990),
          Let ("Td@1735@4008", FAdd (Var Td@1733@4010, Var Td@1734@4011),
          LetTuple (["m_rot123@3308@8039"; "xm_color@3307@8038";
                     "xm_surfparams@3306@8037"; "xm_invert@3305@8036";
                     "xm_xyz@3304@8035"; "xm_abc@3303@8034";
                     "xm_isrot@3302@8033"; "xm_surface@3301@8032";
                     "xm_shape@3300@8031"; "xm_tex@3299@8030";
                     "xm_ctbl@3309@8040"],
                    Var m@3984,
          Let ("Ti@2123@3310@8041", Int 0,
          Let ("Td@1736@4009",
               Get (Var m_rot123@3308@8039, Var Ti@2123@3310@8041),
          Let ("Td@1741@4002", FMul (Var Td@1735@4008, Var Td@1736@4009),
          Let ("Td@1737@4006", FMul (Var v0@3985, Var w2@3990),
          Let ("Td@1738@4007", FMul (Var v2@3987, Var w0@3988),
          Let ("Td@1739@4004", FAdd (Var Td@1737@4006, Var Td@1738@4007),
          LetTuple (["m_rot123@3322@8027"; "xm_color@3321@8026";
                     "xm_surfparams@3320@8025"; "xm_invert@3319@8024";
                     "xm_xyz@3318@8023"; "xm_abc@3317@8022";
                     "xm_isrot@3316@8021"; "xm_surface@3315@8020";
                     "xm_shape@3314@8019"; "xm_tex@3313@8018";
                     "xm_ctbl@3323@8028"],
                    Var m@3984,
          Let ("Ti@2122@3324@8029", Int 1,
          Let ("Td@1740@4005",
               Get (Var m_rot123@3322@8027, Var Ti@2122@3324@8029),
          Let ("Td@1742@4003", FMul (Var Td@1739@4004, Var Td@1740@4005),
          Let ("Td@1747@3996", FAdd (Var Td@1741@4002, Var Td@1742@4003),
          Let ("Td@1743@4000", FMul (Var v0@3985, Var w1@3989),
          Let ("Td@1744@4001", FMul (Var v1@3986, Var w0@3988),
          Let ("Td@1745@3998", FAdd (Var Td@1743@4000, Var Td@1744@4001),
          LetTuple (["m_rot123@3336@8015"; "xm_color@3335@8014";
                     "xm_surfparams@3334@8013"; "xm_invert@3333@8012";
                     "xm_xyz@3332@8011"; "xm_abc@3331@8010";
                     "xm_isrot@3330@8009"; "xm_surface@3329@8008";
                     "xm_shape@3328@8007"; "xm_tex@3327@8006";
                     "xm_ctbl@3337@8016"],
                    Var m@3984,
          Let ("Ti@2121@3338@8017", Int 2,
          Let ("Td@1746@3999",
               Get (Var m_rot123@3336@8015, Var Ti@2121@3338@8017),
          Let ("Td@1748@3997", FMul (Var Td@1745@3998, Var Td@1746@3999),
          Let ("Td@1749@3995", FAdd (Var Td@1747@3996, Var Td@1748@3997),
          Let ("Td@2545@2566@8005", Float 0.500000,
          Let ("Td@1750@3994",
               FMul (Var Td@1749@3995, Var Td@2545@2566@8005),
          FAdd (Var diag_part@3991, Var Td@1750@3994)))))))))))))))))))))))))))))))))))))))))))))),
LetRec ("solver_second@4022",
        ["b1@4026"; "b0@4025"; "dirvec@4024"; "m@4023"; "b2@4027"],
        Let ("Ti@1725@4061", Int 0,
        Let ("Td@1728@4056", Get (Var dirvec@4024, Var Ti@1725@4061),
        Let ("Ti@1726@4060", Int 1,
        Let ("Td@1729@4057", Get (Var dirvec@4024, Var Ti@1726@4060),
        Let ("Ti@1727@4059", Int 2,
        Let ("Td@1730@4058", Get (Var dirvec@4024, Var Ti@1727@4059),
        Let ("aa@4028",
             App
              (Var quadratic@3954,
               [Var Td@1729@4057; Var Td@1728@4056; Var m@4023;
                Var Td@1730@4058]),
        Let ("Tb@1705@4029", Int 0,
        Let ("Td@2546@2563@8004", Float 0.000000,
        Let ("Tb@1706@4030",
             IfEq (Var aa@4028, Var Td@2546@2563@8004, Int 1, Int 0),
        IfEq
         (Var Tb@1706@4030,
          Var Tb@1705@4029,
          Let ("Ti@1719@4055", Int 0,
          Let ("Td@1722@4050", Get (Var dirvec@4024, Var Ti@1719@4055),
          Let ("Ti@1720@4054", Int 1,
          Let ("Td@1723@4051", Get (Var dirvec@4024, Var Ti@1720@4054),
          Let ("Ti@1721@4053", Int 2,
          Let ("Td@1724@4052", Get (Var dirvec@4024, Var Ti@1721@4053),
          Let ("bb@4031",
               App
                (Var bilinear@3983,
                 [Var b1@4026; Var b0@4025; Var Td@1724@4052;
                  Var Td@1723@4051; Var Td@1722@4050; Var m@4023; Var b2@4027]),
          Let ("cc0@4032",
               App
                (Var quadratic@3954,
                 [Var b1@4026; Var b0@4025; Var m@4023; Var b2@4027]),
          Let ("Ti@1716@4047", Int 3,
          LetTuple (["xm_rot123@3089@8002"; "xm_color@3088@8001";
                     "xm_surfparams@3087@8000"; "xm_invert@3086@7999";
                     "xm_xyz@3085@7998"; "xm_abc@3084@7997";
                     "xm_isrot@3083@7996"; "xm_surface@3082@7995";
                     "m_shape@3081@7994"; "xm_tex@3080@7993";
                     "xm_ctbl@3090@8003"],
                    Var m@4023,
          Let ("cc@4033",
               IfEq
                (Var m_shape@3081@7994,
                 Var Ti@1716@4047,
                 Let ("Td@1718@4049", Float 1.000000,
                 FSub (Var cc0@4032, Var Td@1718@4049)),
                 Var cc0@4032),
          Let ("Td@1714@4045", FMul (Var bb@4031, Var bb@4031),
          Let ("Td@1715@4046", FMul (Var aa@4028, Var cc@4033),
          Let ("d@4034", FSub (Var Td@1714@4045, Var Td@1715@4046),
          Let ("Tb@1707@4035", Int 0,
          Let ("Td@2548@2557@7992", Float 0.000000,
          Let ("Tb@1708@4036",
               IfLE (Var d@4034, Var Td@2548@2557@7992, Int 0, Int 1),
          IfEq
           (Var Tb@1708@4036,
            Var Tb@1707@4035,
            Int 0,
            Let ("sd@4037", Sqrt Var d@4034,
            Let ("Tb@1712@4043", Int 0,
            LetTuple (["xm_rot123@3115@7990"; "xm_color@3114@7989";
                       "xm_surfparams@3113@7988"; "m_invert@3112@7987";
                       "xm_xyz@3111@7986"; "xm_abc@3110@7985";
                       "xm_isrot@3109@7984"; "xm_surface@3108@7983";
                       "xm_shape@3107@7982"; "xm_tex@3106@7981";
                       "xm_ctbl@3116@7991"],
                      Var m@4023,
            Let ("t1@4038",
                 IfEq
                  (Var m_invert@3112@7987,
                   Var Tb@1712@4043,
                   FNeg Var sd@4037,
                   Var sd@4037),
            Let ("Ti@1710@4040", Int 0,
            Let ("Td@1709@4042", FSub (Var t1@4038, Var bb@4031),
            Let ("Td@1711@4041", FDiv (Var Td@1709@4042, Var aa@4028),
            Let ("Ta@8453", Static solver_dist@2743,
            Let ("Tu@75@4039",
                 Put (Var Ta@8453, Var Ti@1710@4040, Var Td@1711@4041),
            Int 1))))))))))))))))))))))))))),
          Int 0))))))))))),
LetRec ("solver@4062", ["dirvec@4064"; "index@4063"; "org@4065"],
        Let ("Ta@8452", Static objects@2736,
        Let ("m@4066", Get (Var Ta@8452, Var index@4063),
        Let ("Ti@1702@4081", Int 0,
        Let ("Td@1703@4079", Get (Var org@4065, Var Ti@1702@4081),
        LetTuple (["xm_rot123@3196@7978"; "xm_color@3195@7977";
                   "xm_surfparams@3194@7976"; "xm_invert@3193@7975";
                   "m_xyz@3192@7974"; "xm_abc@3191@7973";
                   "xm_isrot@3190@7972"; "xm_surface@3189@7971";
                   "xm_shape@3188@7970"; "xm_tex@3187@7969";
                   "xm_ctbl@3197@7979"],
                  Var m@4066,
        Let ("Ti@2131@3198@7980", Int 0,
        Let ("Td@1704@4080",
             Get (Var m_xyz@3192@7974, Var Ti@2131@3198@7980),
        Let ("b0@4067", FSub (Var Td@1703@4079, Var Td@1704@4080),
        Let ("Ti@1699@4078", Int 1,
        Let ("Td@1700@4076", Get (Var org@4065, Var Ti@1699@4078),
        LetTuple (["xm_rot123@3210@7966"; "xm_color@3209@7965";
                   "xm_surfparams@3208@7964"; "xm_invert@3207@7963";
                   "m_xyz@3206@7962"; "xm_abc@3205@7961";
                   "xm_isrot@3204@7960"; "xm_surface@3203@7959";
                   "xm_shape@3202@7958"; "xm_tex@3201@7957";
                   "xm_ctbl@3211@7967"],
                  Var m@4066,
        Let ("Ti@2130@3212@7968", Int 1,
        Let ("Td@1701@4077",
             Get (Var m_xyz@3206@7962, Var Ti@2130@3212@7968),
        Let ("b1@4068", FSub (Var Td@1700@4076, Var Td@1701@4077),
        Let ("Ti@1696@4075", Int 2,
        Let ("Td@1697@4073", Get (Var org@4065, Var Ti@1696@4075),
        LetTuple (["xm_rot123@3224@7954"; "xm_color@3223@7953";
                   "xm_surfparams@3222@7952"; "xm_invert@3221@7951";
                   "m_xyz@3220@7950"; "xm_abc@3219@7949";
                   "xm_isrot@3218@7948"; "xm_surface@3217@7947";
                   "xm_shape@3216@7946"; "xm_tex@3215@7945";
                   "xm_ctbl@3225@7955"],
                  Var m@4066,
        Let ("Ti@2129@3226@7956", Int 2,
        Let ("Td@1698@4074",
             Get (Var m_xyz@3220@7950, Var Ti@2129@3226@7956),
        Let ("b2@4069", FSub (Var Td@1697@4073, Var Td@1698@4074),
        LetTuple (["xm_rot123@3089@7943"; "xm_color@3088@7942";
                   "xm_surfparams@3087@7941"; "xm_invert@3086@7940";
                   "xm_xyz@3085@7939"; "xm_abc@3084@7938";
                   "xm_isrot@3083@7937"; "xm_surface@3082@7936";
                   "m_shape@3081@7935"; "xm_tex@3080@7934";
                   "xm_ctbl@3090@7944"],
                  Var m@4066,
        Let ("Ti@1694@4071", Int 1,
        IfEq
         (Var m_shape@3081@7935,
          Var Ti@1694@4071,
          App
           (Var solver_rect@3918,
            [Var b1@4068; Var b0@4067; Var dirvec@4064; Var m@4066;
             Var b2@4069]),
          Let ("Ti@1695@4072", Int 2,
          IfEq
           (Var m_shape@3081@7935,
            Var Ti@1695@4072,
            App
             (Var solver_surface@3939,
              [Var b1@4068; Var b0@4067; Var dirvec@4064; Var m@4066;
               Var b2@4069]),
            App
             (Var solver_second@4022,
              [Var b1@4068; Var b0@4067; Var dirvec@4064; Var m@4066;
               Var b2@4069])))))))))))))))))))))))))),
LetRec ("solver_rect_fast@4082",
        ["b1@4087"; "b0@4086"; "dconst@4085"; "v@4084"; "m@4083"; "b2@4088"],
        Let ("Ti@1689@4178", Int 0,
        Let ("Td@1690@4177", Get (Var dconst@4085, Var Ti@1689@4178),
        Let ("Td@1692@4174", FSub (Var Td@1690@4177, Var b0@4086),
        Let ("Ti@1691@4176", Int 1,
        Let ("Td@1693@4175", Get (Var dconst@4085, Var Ti@1691@4176),
        Let ("d0@4089", FMul (Var Td@1692@4174, Var Td@1693@4175),
        Let ("Tb@1630@4090", Int 0,
        Let ("Tb@1616@4154", Int 0,
        Let ("Ti@1610@4173", Int 1,
        Let ("Td@1611@4172", Get (Var v@4084, Var Ti@1610@4173),
        Let ("Td@1612@4171", FMul (Var d0@4089, Var Td@1611@4172),
        Let ("Td@1613@4170", FAdd (Var Td@1612@4171, Var b1@4087),
        Let ("Td@1614@4168", FAbs Var Td@1613@4170,
        LetTuple (["xm_rot123@3155@7931"; "xm_color@3154@7930";
                   "xm_surfparams@3153@7929"; "xm_invert@3152@7928";
                   "xm_xyz@3151@7927"; "m_abc@3150@7926";
                   "xm_isrot@3149@7925"; "xm_surface@3148@7924";
                   "xm_shape@3147@7923"; "xm_tex@3146@7922";
                   "xm_ctbl@3156@7932"],
                  Var m@4083,
        Let ("Ti@2133@3157@7933", Int 1,
        Let ("Td@1615@4169",
             Get (Var m_abc@3150@7926, Var Ti@2133@3157@7933),
        Let ("Tb@1617@4155",
             IfLE (Var Td@1615@4169, Var Td@1614@4168, Int 0, Int 1),
        Let ("Tb@1631@4091",
             IfEq
              (Var Tb@1617@4155,
               Var Tb@1616@4154,
               Int 0,
               Let ("Tb@1624@4156", Int 0,
               Let ("Ti@1618@4167", Int 2,
               Let ("Td@1619@4166", Get (Var v@4084, Var Ti@1618@4167),
               Let ("Td@1620@4165", FMul (Var d0@4089, Var Td@1619@4166),
               Let ("Td@1621@4164", FAdd (Var Td@1620@4165, Var b2@4088),
               Let ("Td@1622@4162", FAbs Var Td@1621@4164,
               LetTuple (["xm_rot123@3169@7919"; "xm_color@3168@7918";
                          "xm_surfparams@3167@7917"; "xm_invert@3166@7916";
                          "xm_xyz@3165@7915"; "m_abc@3164@7914";
                          "xm_isrot@3163@7913"; "xm_surface@3162@7912";
                          "xm_shape@3161@7911"; "xm_tex@3160@7910";
                          "xm_ctbl@3170@7920"],
                         Var m@4083,
               Let ("Ti@2132@3171@7921", Int 2,
               Let ("Td@1623@4163",
                    Get (Var m_abc@3164@7914, Var Ti@2132@3171@7921),
               Let ("Tb@1625@4157",
                    IfLE (Var Td@1623@4163, Var Td@1622@4162, Int 0, Int 1),
               IfEq
                (Var Tb@1625@4157,
                 Var Tb@1624@4156,
                 Int 0,
                 Let ("Tb@1628@4158", Int 0,
                 Let ("Ti@1626@4161", Int 1,
                 Let ("Td@1627@4160",
                      Get (Var dconst@4085, Var Ti@1626@4161),
                 Let ("Td@2546@2563@7909", Float 0.000000,
                 Let ("Tb@1629@4159",
                      IfEq
                       (Var Td@1627@4160,
                        Var Td@2546@2563@7909,
                        Int 1,
                        Int 0),
                 IfEq (Var Tb@1629@4159, Var Tb@1628@4158, Int 1, Int 0)))))))))))))))))),
        IfEq
         (Var Tb@1631@4091,
          Var Tb@1630@4090,
          Let ("Ti@1684@4153", Int 2,
          Let ("Td@1685@4152", Get (Var dconst@4085, Var Ti@1684@4153),
          Let ("Td@1687@4149", FSub (Var Td@1685@4152, Var b1@4087),
          Let ("Ti@1686@4151", Int 3,
          Let ("Td@1688@4150", Get (Var dconst@4085, Var Ti@1686@4151),
          Let ("d1@4094", FMul (Var Td@1687@4149, Var Td@1688@4150),
          Let ("Tb@1653@4095", Int 0,
          Let ("Tb@1639@4129", Int 0,
          Let ("Ti@1633@4148", Int 0,
          Let ("Td@1634@4147", Get (Var v@4084, Var Ti@1633@4148),
          Let ("Td@1635@4146", FMul (Var d1@4094, Var Td@1634@4147),
          Let ("Td@1636@4145", FAdd (Var Td@1635@4146, Var b0@4086),
          Let ("Td@1637@4143", FAbs Var Td@1636@4145,
          LetTuple (["xm_rot123@3141@7906"; "xm_color@3140@7905";
                     "xm_surfparams@3139@7904"; "xm_invert@3138@7903";
                     "xm_xyz@3137@7902"; "m_abc@3136@7901";
                     "xm_isrot@3135@7900"; "xm_surface@3134@7899";
                     "xm_shape@3133@7898"; "xm_tex@3132@7897";
                     "xm_ctbl@3142@7907"],
                    Var m@4083,
          Let ("Ti@2134@3143@7908", Int 0,
          Let ("Td@1638@4144",
               Get (Var m_abc@3136@7901, Var Ti@2134@3143@7908),
          Let ("Tb@1640@4130",
               IfLE (Var Td@1638@4144, Var Td@1637@4143, Int 0, Int 1),
          Let ("Tb@1654@4096",
               IfEq
                (Var Tb@1640@4130,
                 Var Tb@1639@4129,
                 Int 0,
                 Let ("Tb@1647@4131", Int 0,
                 Let ("Ti@1641@4142", Int 2,
                 Let ("Td@1642@4141", Get (Var v@4084, Var Ti@1641@4142),
                 Let ("Td@1643@4140", FMul (Var d1@4094, Var Td@1642@4141),
                 Let ("Td@1644@4139", FAdd (Var Td@1643@4140, Var b2@4088),
                 Let ("Td@1645@4137", FAbs Var Td@1644@4139,
                 LetTuple (["xm_rot123@3169@7894"; "xm_color@3168@7893";
                            "xm_surfparams@3167@7892"; "xm_invert@3166@7891";
                            "xm_xyz@3165@7890"; "m_abc@3164@7889";
                            "xm_isrot@3163@7888"; "xm_surface@3162@7887";
                            "xm_shape@3161@7886"; "xm_tex@3160@7885";
                            "xm_ctbl@3170@7895"],
                           Var m@4083,
                 Let ("Ti@2132@3171@7896", Int 2,
                 Let ("Td@1646@4138",
                      Get (Var m_abc@3164@7889, Var Ti@2132@3171@7896),
                 Let ("Tb@1648@4132",
                      IfLE (Var Td@1646@4138, Var Td@1645@4137, Int 0, Int 1),
                 IfEq
                  (Var Tb@1648@4132,
                   Var Tb@1647@4131,
                   Int 0,
                   Let ("Tb@1651@4133", Int 0,
                   Let ("Ti@1649@4136", Int 3,
                   Let ("Td@1650@4135",
                        Get (Var dconst@4085, Var Ti@1649@4136),
                   Let ("Td@2546@2563@7884", Float 0.000000,
                   Let ("Tb@1652@4134",
                        IfEq
                         (Var Td@1650@4135,
                          Var Td@2546@2563@7884,
                          Int 1,
                          Int 0),
                   IfEq (Var Tb@1652@4134, Var Tb@1651@4133, Int 1, Int 0)))))))))))))))))),
          IfEq
           (Var Tb@1654@4096,
            Var Tb@1653@4095,
            Let ("Ti@1679@4128", Int 4,
            Let ("Td@1680@4127", Get (Var dconst@4085, Var Ti@1679@4128),
            Let ("Td@1682@4124", FSub (Var Td@1680@4127, Var b2@4088),
            Let ("Ti@1681@4126", Int 5,
            Let ("Td@1683@4125", Get (Var dconst@4085, Var Ti@1681@4126),
            Let ("d2@4099", FMul (Var Td@1682@4124, Var Td@1683@4125),
            Let ("Tb@1676@4100", Int 0,
            Let ("Tb@1662@4104", Int 0,
            Let ("Ti@1656@4123", Int 0,
            Let ("Td@1657@4122", Get (Var v@4084, Var Ti@1656@4123),
            Let ("Td@1658@4121", FMul (Var d2@4099, Var Td@1657@4122),
            Let ("Td@1659@4120", FAdd (Var Td@1658@4121, Var b0@4086),
            Let ("Td@1660@4118", FAbs Var Td@1659@4120,
            LetTuple (["xm_rot123@3141@7881"; "xm_color@3140@7880";
                       "xm_surfparams@3139@7879"; "xm_invert@3138@7878";
                       "xm_xyz@3137@7877"; "m_abc@3136@7876";
                       "xm_isrot@3135@7875"; "xm_surface@3134@7874";
                       "xm_shape@3133@7873"; "xm_tex@3132@7872";
                       "xm_ctbl@3142@7882"],
                      Var m@4083,
            Let ("Ti@2134@3143@7883", Int 0,
            Let ("Td@1661@4119",
                 Get (Var m_abc@3136@7876, Var Ti@2134@3143@7883),
            Let ("Tb@1663@4105",
                 IfLE (Var Td@1661@4119, Var Td@1660@4118, Int 0, Int 1),
            Let ("Tb@1677@4101",
                 IfEq
                  (Var Tb@1663@4105,
                   Var Tb@1662@4104,
                   Int 0,
                   Let ("Tb@1670@4106", Int 0,
                   Let ("Ti@1664@4117", Int 1,
                   Let ("Td@1665@4116", Get (Var v@4084, Var Ti@1664@4117),
                   Let ("Td@1666@4115", FMul (Var d2@4099, Var Td@1665@4116),
                   Let ("Td@1667@4114", FAdd (Var Td@1666@4115, Var b1@4087),
                   Let ("Td@1668@4112", FAbs Var Td@1667@4114,
                   LetTuple (["xm_rot123@3155@7869"; "xm_color@3154@7868";
                              "xm_surfparams@3153@7867";
                              "xm_invert@3152@7866"; "xm_xyz@3151@7865";
                              "m_abc@3150@7864"; "xm_isrot@3149@7863";
                              "xm_surface@3148@7862"; "xm_shape@3147@7861";
                              "xm_tex@3146@7860"; "xm_ctbl@3156@7870"],
                             Var m@4083,
                   Let ("Ti@2133@3157@7871", Int 1,
                   Let ("Td@1669@4113",
                        Get (Var m_abc@3150@7864, Var Ti@2133@3157@7871),
                   Let ("Tb@1671@4107",
                        IfLE
                         (Var Td@1669@4113, Var Td@1668@4112, Int 0, Int 1),
                   IfEq
                    (Var Tb@1671@4107,
                     Var Tb@1670@4106,
                     Int 0,
                     Let ("Tb@1674@4108", Int 0,
                     Let ("Ti@1672@4111", Int 5,
                     Let ("Td@1673@4110",
                          Get (Var dconst@4085, Var Ti@1672@4111),
                     Let ("Td@2546@2563@7859", Float 0.000000,
                     Let ("Tb@1675@4109",
                          IfEq
                           (Var Td@1673@4110,
                            Var Td@2546@2563@7859,
                            Int 1,
                            Int 0),
                     IfEq (Var Tb@1675@4109, Var Tb@1674@4108, Int 1, Int 0)))))))))))))))))),
            IfEq
             (Var Tb@1677@4101,
              Var Tb@1676@4100,
              Int 0,
              Let ("Ti@1678@4103", Int 0,
              Let ("Ta@8451", Static solver_dist@2743,
              Let ("Tu@78@4102",
                   Put (Var Ta@8451, Var Ti@1678@4103, Var d2@4099),
              Int 3)))))))))))))))))))))),
            Let ("Ti@1655@4098", Int 0,
            Let ("Ta@8450", Static solver_dist@2743,
            Let ("Tu@77@4097",
                 Put (Var Ta@8450, Var Ti@1655@4098, Var d1@4094),
            Int 2)))))))))))))))))))))),
          Let ("Ti@1632@4093", Int 0,
          Let ("Ta@8449", Static solver_dist@2743,
          Let ("Tu@76@4092",
               Put (Var Ta@8449, Var Ti@1632@4093, Var d0@4089),
          Int 1)))))))))))))))))))))),
LetRec ("solver_surface_fast@4179",
        ["b1@4183"; "b0@4182"; "dconst@4181"; "m@4180"; "b2@4184"],
        Let ("Tb@1596@4185", Int 0,
        Let ("Ti@1594@4201", Int 0,
        Let ("Td@1595@4200", Get (Var dconst@4181, Var Ti@1594@4201),
        Let ("Td@2547@2560@7858", Float 0.000000,
        Let ("Tb@1597@4186",
             IfLE (Var Td@2547@2560@7858, Var Td@1595@4200, Int 0, Int 1),
        IfEq
         (Var Tb@1597@4186,
          Var Tb@1596@4185,
          Int 0,
          Let ("Ti@1608@4188", Int 0,
          Let ("Ti@1598@4199", Int 1,
          Let ("Td@1599@4198", Get (Var dconst@4181, Var Ti@1598@4199),
          Let ("Td@1602@4194", FMul (Var Td@1599@4198, Var b0@4182),
          Let ("Ti@1600@4197", Int 2,
          Let ("Td@1601@4196", Get (Var dconst@4181, Var Ti@1600@4197),
          Let ("Td@1603@4195", FMul (Var Td@1601@4196, Var b1@4183),
          Let ("Td@1606@4190", FAdd (Var Td@1602@4194, Var Td@1603@4195),
          Let ("Ti@1604@4193", Int 3,
          Let ("Td@1605@4192", Get (Var dconst@4181, Var Ti@1604@4193),
          Let ("Td@1607@4191", FMul (Var Td@1605@4192, Var b2@4184),
          Let ("Td@1609@4189", FAdd (Var Td@1606@4190, Var Td@1607@4191),
          Let ("Ta@8448", Static solver_dist@2743,
          Let ("Tu@79@4187",
               Put (Var Ta@8448, Var Ti@1608@4188, Var Td@1609@4189),
          Int 1)))))))))))))))))))),
LetRec ("solver_second_fast@4202",
        ["b1@4206"; "b0@4205"; "dconst@4204"; "m@4203"; "b2@4207"],
        Let ("Ti@1593@4247", Int 0,
        Let ("aa@4208", Get (Var dconst@4204, Var Ti@1593@4247),
        Let ("Tb@1560@4209", Int 0,
        Let ("Td@2546@2563@7857", Float 0.000000,
        Let ("Tb@1561@4210",
             IfEq (Var aa@4208, Var Td@2546@2563@7857, Int 1, Int 0),
        IfEq
         (Var Tb@1561@4210,
          Var Tb@1560@4209,
          Let ("Ti@1583@4246", Int 1,
          Let ("Td@1584@4245", Get (Var dconst@4204, Var Ti@1583@4246),
          Let ("Td@1587@4241", FMul (Var Td@1584@4245, Var b0@4205),
          Let ("Ti@1585@4244", Int 2,
          Let ("Td@1586@4243", Get (Var dconst@4204, Var Ti@1585@4244),
          Let ("Td@1588@4242", FMul (Var Td@1586@4243, Var b1@4206),
          Let ("Td@1591@4237", FAdd (Var Td@1587@4241, Var Td@1588@4242),
          Let ("Ti@1589@4240", Int 3,
          Let ("Td@1590@4239", Get (Var dconst@4204, Var Ti@1589@4240),
          Let ("Td@1592@4238", FMul (Var Td@1590@4239, Var b2@4207),
          Let ("neg_bb@4211", FAdd (Var Td@1591@4237, Var Td@1592@4238),
          Let ("cc0@4212",
               App
                (Var quadratic@3954,
                 [Var b1@4206; Var b0@4205; Var m@4203; Var b2@4207]),
          Let ("Ti@1580@4234", Int 3,
          LetTuple (["xm_rot123@3089@7855"; "xm_color@3088@7854";
                     "xm_surfparams@3087@7853"; "xm_invert@3086@7852";
                     "xm_xyz@3085@7851"; "xm_abc@3084@7850";
                     "xm_isrot@3083@7849"; "xm_surface@3082@7848";
                     "m_shape@3081@7847"; "xm_tex@3080@7846";
                     "xm_ctbl@3090@7856"],
                    Var m@4203,
          Let ("cc@4213",
               IfEq
                (Var m_shape@3081@7847,
                 Var Ti@1580@4234,
                 Let ("Td@1582@4236", Float 1.000000,
                 FSub (Var cc0@4212, Var Td@1582@4236)),
                 Var cc0@4212),
          Let ("Td@1578@4232", FMul (Var neg_bb@4211, Var neg_bb@4211),
          Let ("Td@1579@4233", FMul (Var aa@4208, Var cc@4213),
          Let ("d@4214", FSub (Var Td@1578@4232, Var Td@1579@4233),
          Let ("Tb@1562@4215", Int 0,
          Let ("Td@2548@2557@7845", Float 0.000000,
          Let ("Tb@1563@4216",
               IfLE (Var d@4214, Var Td@2548@2557@7845, Int 0, Int 1),
          IfEq
           (Var Tb@1563@4216,
            Var Tb@1562@4215,
            Int 0,
            Let ("Tb@1564@4218", Int 0,
            LetTuple (["xm_rot123@3115@7843"; "xm_color@3114@7842";
                       "xm_surfparams@3113@7841"; "m_invert@3112@7840";
                       "xm_xyz@3111@7839"; "xm_abc@3110@7838";
                       "xm_isrot@3109@7837"; "xm_surface@3108@7836";
                       "xm_shape@3107@7835"; "xm_tex@3106@7834";
                       "xm_ctbl@3116@7844"],
                      Var m@4203,
            Let ("Tu@80@4217",
                 IfEq
                  (Var m_invert@3112@7840,
                   Var Tb@1564@4218,
                   Let ("Ti@1576@4226", Int 0,
                   Let ("Td@1572@4231", Sqrt Var d@4214,
                   Let ("Td@1574@4228",
                        FSub (Var neg_bb@4211, Var Td@1572@4231),
                   Let ("Ti@1573@4230", Int 4,
                   Let ("Td@1575@4229",
                        Get (Var dconst@4204, Var Ti@1573@4230),
                   Let ("Td@1577@4227",
                        FMul (Var Td@1574@4228, Var Td@1575@4229),
                   Let ("Ta@8447", Static solver_dist@2743,
                   Put (Var Ta@8447, Var Ti@1576@4226, Var Td@1577@4227)))))))),
                   Let ("Ti@1570@4220", Int 0,
                   Let ("Td@1566@4225", Sqrt Var d@4214,
                   Let ("Td@1568@4222",
                        FAdd (Var neg_bb@4211, Var Td@1566@4225),
                   Let ("Ti@1567@4224", Int 4,
                   Let ("Td@1569@4223",
                        Get (Var dconst@4204, Var Ti@1567@4224),
                   Let ("Td@1571@4221",
                        FMul (Var Td@1568@4222, Var Td@1569@4223),
                   Let ("Ta@8446", Static solver_dist@2743,
                   Put (Var Ta@8446, Var Ti@1570@4220, Var Td@1571@4221))))))))),
            Int 1))))))))))))))))))))))))),
          Int 0)))))),
LetRec ("solver_fast@4248", ["dirvec@4250"; "index@4249"; "org@4251"],
        Let ("Ta@8445", Static objects@2736,
        Let ("m@4252", Get (Var Ta@8445, Var index@4249),
        Let ("Ti@1557@4270", Int 0,
        Let ("Td@1558@4268", Get (Var org@4251, Var Ti@1557@4270),
        LetTuple (["xm_rot123@3196@7831"; "xm_color@3195@7830";
                   "xm_surfparams@3194@7829"; "xm_invert@3193@7828";
                   "m_xyz@3192@7827"; "xm_abc@3191@7826";
                   "xm_isrot@3190@7825"; "xm_surface@3189@7824";
                   "xm_shape@3188@7823"; "xm_tex@3187@7822";
                   "xm_ctbl@3197@7832"],
                  Var m@4252,
        Let ("Ti@2131@3198@7833", Int 0,
        Let ("Td@1559@4269",
             Get (Var m_xyz@3192@7827, Var Ti@2131@3198@7833),
        Let ("b0@4253", FSub (Var Td@1558@4268, Var Td@1559@4269),
        Let ("Ti@1554@4267", Int 1,
        Let ("Td@1555@4265", Get (Var org@4251, Var Ti@1554@4267),
        LetTuple (["xm_rot123@3210@7819"; "xm_color@3209@7818";
                   "xm_surfparams@3208@7817"; "xm_invert@3207@7816";
                   "m_xyz@3206@7815"; "xm_abc@3205@7814";
                   "xm_isrot@3204@7813"; "xm_surface@3203@7812";
                   "xm_shape@3202@7811"; "xm_tex@3201@7810";
                   "xm_ctbl@3211@7820"],
                  Var m@4252,
        Let ("Ti@2130@3212@7821", Int 1,
        Let ("Td@1556@4266",
             Get (Var m_xyz@3206@7815, Var Ti@2130@3212@7821),
        Let ("b1@4254", FSub (Var Td@1555@4265, Var Td@1556@4266),
        Let ("Ti@1551@4264", Int 2,
        Let ("Td@1552@4262", Get (Var org@4251, Var Ti@1551@4264),
        LetTuple (["xm_rot123@3224@7807"; "xm_color@3223@7806";
                   "xm_surfparams@3222@7805"; "xm_invert@3221@7804";
                   "m_xyz@3220@7803"; "xm_abc@3219@7802";
                   "xm_isrot@3218@7801"; "xm_surface@3217@7800";
                   "xm_shape@3216@7799"; "xm_tex@3215@7798";
                   "xm_ctbl@3225@7808"],
                  Var m@4252,
        Let ("Ti@2129@3226@7809", Int 2,
        Let ("Td@1553@4263",
             Get (Var m_xyz@3220@7803, Var Ti@2129@3226@7809),
        Let ("b2@4255", FSub (Var Td@1552@4262, Var Td@1553@4263),
        LetTuple (["dm_vec@3451@7796"; "m_const@3452@7797"], Var dirvec@4250,
        Let ("dconst@4257", Get (Var m_const@3452@7797, Var index@4249),
        LetTuple (["xm_rot123@3089@7794"; "xm_color@3088@7793";
                   "xm_surfparams@3087@7792"; "xm_invert@3086@7791";
                   "xm_xyz@3085@7790"; "xm_abc@3084@7789";
                   "xm_isrot@3083@7788"; "xm_surface@3082@7787";
                   "m_shape@3081@7786"; "xm_tex@3080@7785";
                   "xm_ctbl@3090@7795"],
                  Var m@4252,
        Let ("Ti@1548@4259", Int 1,
        IfEq
         (Var m_shape@3081@7786,
          Var Ti@1548@4259,
          LetTuple (["m_vec@3447@7783"; "xm_const@3448@7784"],
                    Var dirvec@4250,
          App
           (Var solver_rect_fast@4082,
            [Var b1@4254; Var b0@4253; Var dconst@4257; Var m_vec@3447@7783;
             Var m@4252; Var b2@4255])),
          Let ("Ti@1549@4260", Int 2,
          IfEq
           (Var m_shape@3081@7786,
            Var Ti@1549@4260,
            App
             (Var solver_surface_fast@4179,
              [Var b1@4254; Var b0@4253; Var dconst@4257; Var m@4252;
               Var b2@4255]),
            App
             (Var solver_second_fast@4202,
              [Var b1@4254; Var b0@4253; Var dconst@4257; Var m@4252;
               Var b2@4255])))))))))))))))))))))))))))),
LetRec ("solver_surface_fast2@4271",
        ["b1@4276"; "b0@4275"; "sconst@4274"; "dconst@4273"; "m@4272";
         "b2@4277"],
        Let ("Tb@1540@4278", Int 0,
        Let ("Ti@1538@4288", Int 0,
        Let ("Td@1539@4287", Get (Var dconst@4273, Var Ti@1538@4288),
        Let ("Td@2547@2560@7782", Float 0.000000,
        Let ("Tb@1541@4279",
             IfLE (Var Td@2547@2560@7782, Var Td@1539@4287, Int 0, Int 1),
        IfEq
         (Var Tb@1541@4279,
          Var Tb@1540@4278,
          Int 0,
          Let ("Ti@1546@4281", Int 0,
          Let ("Ti@1542@4286", Int 0,
          Let ("Td@1544@4283", Get (Var dconst@4273, Var Ti@1542@4286),
          Let ("Ti@1543@4285", Int 3,
          Let ("Td@1545@4284", Get (Var sconst@4274, Var Ti@1543@4285),
          Let ("Td@1547@4282", FMul (Var Td@1544@4283, Var Td@1545@4284),
          Let ("Ta@8444", Static solver_dist@2743,
          Let ("Tu@81@4280",
               Put (Var Ta@8444, Var Ti@1546@4281, Var Td@1547@4282),
          Int 1)))))))))))))),
LetRec ("solver_second_fast2@4289",
        ["b1@4294"; "b0@4293"; "sconst@4292"; "dconst@4291"; "m@4290";
         "b2@4295"],
        Let ("Ti@1537@4332", Int 0,
        Let ("aa@4296", Get (Var dconst@4291, Var Ti@1537@4332),
        Let ("Tb@1506@4297", Int 0,
        Let ("Td@2546@2563@7781", Float 0.000000,
        Let ("Tb@1507@4298",
             IfEq (Var aa@4296, Var Td@2546@2563@7781, Int 1, Int 0),
        IfEq
         (Var Tb@1507@4298,
          Var Tb@1506@4297,
          Let ("Ti@1527@4331", Int 1,
          Let ("Td@1528@4330", Get (Var dconst@4291, Var Ti@1527@4331),
          Let ("Td@1531@4326", FMul (Var Td@1528@4330, Var b0@4293),
          Let ("Ti@1529@4329", Int 2,
          Let ("Td@1530@4328", Get (Var dconst@4291, Var Ti@1529@4329),
          Let ("Td@1532@4327", FMul (Var Td@1530@4328, Var b1@4294),
          Let ("Td@1535@4322", FAdd (Var Td@1531@4326, Var Td@1532@4327),
          Let ("Ti@1533@4325", Int 3,
          Let ("Td@1534@4324", Get (Var dconst@4291, Var Ti@1533@4325),
          Let ("Td@1536@4323", FMul (Var Td@1534@4324, Var b2@4295),
          Let ("neg_bb@4299", FAdd (Var Td@1535@4322, Var Td@1536@4323),
          Let ("Ti@1526@4321", Int 3,
          Let ("cc@4300", Get (Var sconst@4292, Var Ti@1526@4321),
          Let ("Td@1524@4319", FMul (Var neg_bb@4299, Var neg_bb@4299),
          Let ("Td@1525@4320", FMul (Var aa@4296, Var cc@4300),
          Let ("d@4301", FSub (Var Td@1524@4319, Var Td@1525@4320),
          Let ("Tb@1508@4302", Int 0,
          Let ("Td@2548@2557@7780", Float 0.000000,
          Let ("Tb@1509@4303",
               IfLE (Var d@4301, Var Td@2548@2557@7780, Int 0, Int 1),
          IfEq
           (Var Tb@1509@4303,
            Var Tb@1508@4302,
            Int 0,
            Let ("Tb@1510@4305", Int 0,
            LetTuple (["xm_rot123@3115@7778"; "xm_color@3114@7777";
                       "xm_surfparams@3113@7776"; "m_invert@3112@7775";
                       "xm_xyz@3111@7774"; "xm_abc@3110@7773";
                       "xm_isrot@3109@7772"; "xm_surface@3108@7771";
                       "xm_shape@3107@7770"; "xm_tex@3106@7769";
                       "xm_ctbl@3116@7779"],
                      Var m@4290,
            Let ("Tu@82@4304",
                 IfEq
                  (Var m_invert@3112@7775,
                   Var Tb@1510@4305,
                   Let ("Ti@1522@4313", Int 0,
                   Let ("Td@1518@4318", Sqrt Var d@4301,
                   Let ("Td@1520@4315",
                        FSub (Var neg_bb@4299, Var Td@1518@4318),
                   Let ("Ti@1519@4317", Int 4,
                   Let ("Td@1521@4316",
                        Get (Var dconst@4291, Var Ti@1519@4317),
                   Let ("Td@1523@4314",
                        FMul (Var Td@1520@4315, Var Td@1521@4316),
                   Let ("Ta@8443", Static solver_dist@2743,
                   Put (Var Ta@8443, Var Ti@1522@4313, Var Td@1523@4314)))))))),
                   Let ("Ti@1516@4307", Int 0,
                   Let ("Td@1512@4312", Sqrt Var d@4301,
                   Let ("Td@1514@4309",
                        FAdd (Var neg_bb@4299, Var Td@1512@4312),
                   Let ("Ti@1513@4311", Int 4,
                   Let ("Td@1515@4310",
                        Get (Var dconst@4291, Var Ti@1513@4311),
                   Let ("Td@1517@4308",
                        FMul (Var Td@1514@4309, Var Td@1515@4310),
                   Let ("Ta@8442", Static solver_dist@2743,
                   Put (Var Ta@8442, Var Ti@1516@4307, Var Td@1517@4308))))))))),
            Int 1))))))))))))))))))))))),
          Int 0)))))),
LetRec ("solver_fast2@4333", ["index@4334"; "dirvec@4335"],
        Let ("Ta@8441", Static objects@2736,
        Let ("m@4336", Get (Var Ta@8441, Var index@4334),
        LetTuple (["xm_rot123@3350@7767"; "xm_color@3349@7766";
                   "xm_surfparams@3348@7765"; "xm_invert@3347@7764";
                   "xm_xyz@3346@7763"; "xm_abc@3345@7762";
                   "xm_isrot@3344@7761"; "xm_surface@3343@7760";
                   "xm_shape@3342@7759"; "xm_tex@3341@7758";
                   "m_ctbl@3351@7768"],
                  Var m@4336,
        Let ("Ti@1505@4349", Int 0,
        Let ("b0@4338", Get (Var m_ctbl@3351@7768, Var Ti@1505@4349),
        Let ("Ti@1504@4348", Int 1,
        Let ("b1@4339", Get (Var m_ctbl@3351@7768, Var Ti@1504@4348),
        Let ("Ti@1503@4347", Int 2,
        Let ("b2@4340", Get (Var m_ctbl@3351@7768, Var Ti@1503@4347),
        LetTuple (["dm_vec@3451@7756"; "m_const@3452@7757"], Var dirvec@4335,
        Let ("dconst@4342", Get (Var m_const@3452@7757, Var index@4334),
        LetTuple (["xm_rot123@3089@7754"; "xm_color@3088@7753";
                   "xm_surfparams@3087@7752"; "xm_invert@3086@7751";
                   "xm_xyz@3085@7750"; "xm_abc@3084@7749";
                   "xm_isrot@3083@7748"; "xm_surface@3082@7747";
                   "m_shape@3081@7746"; "xm_tex@3080@7745";
                   "xm_ctbl@3090@7755"],
                  Var m@4336,
        Let ("Ti@1500@4344", Int 1,
        IfEq
         (Var m_shape@3081@7746,
          Var Ti@1500@4344,
          LetTuple (["m_vec@3447@7743"; "xm_const@3448@7744"],
                    Var dirvec@4335,
          App
           (Var solver_rect_fast@4082,
            [Var b1@4339; Var b0@4338; Var dconst@4342; Var m_vec@3447@7743;
             Var m@4336; Var b2@4340])),
          Let ("Ti@1501@4345", Int 2,
          IfEq
           (Var m_shape@3081@7746,
            Var Ti@1501@4345,
            App
             (Var solver_surface_fast2@4271,
              [Var b1@4339; Var b0@4338; Var m_ctbl@3351@7768;
               Var dconst@4342; Var m@4336; Var b2@4340]),
            App
             (Var solver_second_fast2@4289,
              [Var b1@4339; Var b0@4338; Var m_ctbl@3351@7768;
               Var dconst@4342; Var m@4336; Var b2@4340]))))))))))))))))),
LetRec ("setup_rect_table@4350", ["vec@4351"; "m@4352"],
        Let ("Ti@1498@4417", Int 6,
        Let ("Td@1499@4418", Float 0.000000,
        Let ("const@4353",
             ExtFunApp
              (Var create_float_array, [Var Ti@1498@4417; Var Td@1499@4418]),
        Let ("Tb@1481@4397", Int 0,
        Let ("Ti@1479@4416", Int 0,
        Let ("Td@1480@4415", Get (Var vec@4351, Var Ti@1479@4416),
        Let ("Td@2546@2563@7742", Float 0.000000,
        Let ("Tb@1482@4398",
             IfEq (Var Td@1480@4415, Var Td@2546@2563@7742, Int 1, Int 0),
        Let ("Tu@88@4354",
             IfEq
              (Var Tb@1482@4398,
               Var Tb@1481@4397,
               Let ("Ti@1496@4407", Int 0,
               LetTuple (["xm_rot123@3115@7740"; "xm_color@3114@7739";
                          "xm_surfparams@3113@7738"; "m_invert@3112@7737";
                          "xm_xyz@3111@7736"; "xm_abc@3110@7735";
                          "xm_isrot@3109@7734"; "xm_surface@3108@7733";
                          "xm_shape@3107@7732"; "xm_tex@3106@7731";
                          "xm_ctbl@3116@7741"],
                         Var m@4352,
               Let ("Ti@1490@4414", Int 0,
               Let ("Td@1491@4413", Get (Var vec@4351, Var Ti@1490@4414),
               Let ("Td@2547@2560@7730", Float 0.000000,
               Let ("Tb@1493@4412",
                    IfLE
                     (Var Td@2547@2560@7730, Var Td@1491@4413, Int 0, Int 1),
               Let ("Tb@2352@2768@7728", Int 0,
               Let ("Tb@1494@4409",
                    IfEq
                     (Var m_invert@3112@7737,
                      Var Tb@2352@2768@7728,
                      Var Tb@1493@4412,
                      Let ("Tb@2353@2769@7729", Int 0,
                      IfEq
                       (Var Tb@1493@4412,
                        Var Tb@2353@2769@7729,
                        Int 1,
                        Int 0))),
               LetTuple (["xm_rot123@3141@7725"; "xm_color@3140@7724";
                          "xm_surfparams@3139@7723"; "xm_invert@3138@7722";
                          "xm_xyz@3137@7721"; "m_abc@3136@7720";
                          "xm_isrot@3135@7719"; "xm_surface@3134@7718";
                          "xm_shape@3133@7717"; "xm_tex@3132@7716";
                          "xm_ctbl@3142@7726"],
                         Var m@4352,
               Let ("Ti@2134@3143@7727", Int 0,
               Let ("Td@1495@4410",
                    Get (Var m_abc@3136@7720, Var Ti@2134@3143@7727),
               Let ("Tb@2347@2779@7715", Int 0,
               Let ("Td@1497@4408",
                    IfEq
                     (Var Tb@1494@4409,
                      Var Tb@2347@2779@7715,
                      FNeg Var Td@1495@4410,
                      Var Td@1495@4410),
               Let ("Tu@83@4401",
                    Put (Var const@4353, Var Ti@1496@4407, Var Td@1497@4408),
               Let ("Ti@1488@4402", Int 1,
               Let ("Td@1486@4404", Float 1.000000,
               Let ("Ti@1485@4406", Int 0,
               Let ("Td@1487@4405", Get (Var vec@4351, Var Ti@1485@4406),
               Let ("Td@1489@4403",
                    FDiv (Var Td@1486@4404, Var Td@1487@4405),
               Put (Var const@4353, Var Ti@1488@4402, Var Td@1489@4403)))))))))))))))))))),
               Let ("Ti@1483@4399", Int 1,
               Let ("Td@1484@4400", Float 0.000000,
               Put (Var const@4353, Var Ti@1483@4399, Var Td@1484@4400)))),
        Let ("Tb@1462@4377", Int 0,
        Let ("Ti@1460@4396", Int 1,
        Let ("Td@1461@4395", Get (Var vec@4351, Var Ti@1460@4396),
        Let ("Td@2546@2563@7714", Float 0.000000,
        Let ("Tb@1463@4378",
             IfEq (Var Td@1461@4395, Var Td@2546@2563@7714, Int 1, Int 0),
        Let ("Tu@87@4355",
             IfEq
              (Var Tb@1463@4378,
               Var Tb@1462@4377,
               Let ("Ti@1477@4387", Int 2,
               LetTuple (["xm_rot123@3115@7712"; "xm_color@3114@7711";
                          "xm_surfparams@3113@7710"; "m_invert@3112@7709";
                          "xm_xyz@3111@7708"; "xm_abc@3110@7707";
                          "xm_isrot@3109@7706"; "xm_surface@3108@7705";
                          "xm_shape@3107@7704"; "xm_tex@3106@7703";
                          "xm_ctbl@3116@7713"],
                         Var m@4352,
               Let ("Ti@1471@4394", Int 1,
               Let ("Td@1472@4393", Get (Var vec@4351, Var Ti@1471@4394),
               Let ("Td@2547@2560@7702", Float 0.000000,
               Let ("Tb@1474@4392",
                    IfLE
                     (Var Td@2547@2560@7702, Var Td@1472@4393, Int 0, Int 1),
               Let ("Tb@2352@2768@7700", Int 0,
               Let ("Tb@1475@4389",
                    IfEq
                     (Var m_invert@3112@7709,
                      Var Tb@2352@2768@7700,
                      Var Tb@1474@4392,
                      Let ("Tb@2353@2769@7701", Int 0,
                      IfEq
                       (Var Tb@1474@4392,
                        Var Tb@2353@2769@7701,
                        Int 1,
                        Int 0))),
               LetTuple (["xm_rot123@3155@7697"; "xm_color@3154@7696";
                          "xm_surfparams@3153@7695"; "xm_invert@3152@7694";
                          "xm_xyz@3151@7693"; "m_abc@3150@7692";
                          "xm_isrot@3149@7691"; "xm_surface@3148@7690";
                          "xm_shape@3147@7689"; "xm_tex@3146@7688";
                          "xm_ctbl@3156@7698"],
                         Var m@4352,
               Let ("Ti@2133@3157@7699", Int 1,
               Let ("Td@1476@4390",
                    Get (Var m_abc@3150@7692, Var Ti@2133@3157@7699),
               Let ("Tb@2347@2779@7687", Int 0,
               Let ("Td@1478@4388",
                    IfEq
                     (Var Tb@1475@4389,
                      Var Tb@2347@2779@7687,
                      FNeg Var Td@1476@4390,
                      Var Td@1476@4390),
               Let ("Tu@84@4381",
                    Put (Var const@4353, Var Ti@1477@4387, Var Td@1478@4388),
               Let ("Ti@1469@4382", Int 3,
               Let ("Td@1467@4384", Float 1.000000,
               Let ("Ti@1466@4386", Int 1,
               Let ("Td@1468@4385", Get (Var vec@4351, Var Ti@1466@4386),
               Let ("Td@1470@4383",
                    FDiv (Var Td@1467@4384, Var Td@1468@4385),
               Put (Var const@4353, Var Ti@1469@4382, Var Td@1470@4383)))))))))))))))))))),
               Let ("Ti@1464@4379", Int 3,
               Let ("Td@1465@4380", Float 0.000000,
               Put (Var const@4353, Var Ti@1464@4379, Var Td@1465@4380)))),
        Let ("Tb@1443@4357", Int 0,
        Let ("Ti@1441@4376", Int 2,
        Let ("Td@1442@4375", Get (Var vec@4351, Var Ti@1441@4376),
        Let ("Td@2546@2563@7686", Float 0.000000,
        Let ("Tb@1444@4358",
             IfEq (Var Td@1442@4375, Var Td@2546@2563@7686, Int 1, Int 0),
        Let ("Tu@86@4356",
             IfEq
              (Var Tb@1444@4358,
               Var Tb@1443@4357,
               Let ("Ti@1458@4367", Int 4,
               LetTuple (["xm_rot123@3115@7684"; "xm_color@3114@7683";
                          "xm_surfparams@3113@7682"; "m_invert@3112@7681";
                          "xm_xyz@3111@7680"; "xm_abc@3110@7679";
                          "xm_isrot@3109@7678"; "xm_surface@3108@7677";
                          "xm_shape@3107@7676"; "xm_tex@3106@7675";
                          "xm_ctbl@3116@7685"],
                         Var m@4352,
               Let ("Ti@1452@4374", Int 2,
               Let ("Td@1453@4373", Get (Var vec@4351, Var Ti@1452@4374),
               Let ("Td@2547@2560@7674", Float 0.000000,
               Let ("Tb@1455@4372",
                    IfLE
                     (Var Td@2547@2560@7674, Var Td@1453@4373, Int 0, Int 1),
               Let ("Tb@2352@2768@7672", Int 0,
               Let ("Tb@1456@4369",
                    IfEq
                     (Var m_invert@3112@7681,
                      Var Tb@2352@2768@7672,
                      Var Tb@1455@4372,
                      Let ("Tb@2353@2769@7673", Int 0,
                      IfEq
                       (Var Tb@1455@4372,
                        Var Tb@2353@2769@7673,
                        Int 1,
                        Int 0))),
               LetTuple (["xm_rot123@3169@7669"; "xm_color@3168@7668";
                          "xm_surfparams@3167@7667"; "xm_invert@3166@7666";
                          "xm_xyz@3165@7665"; "m_abc@3164@7664";
                          "xm_isrot@3163@7663"; "xm_surface@3162@7662";
                          "xm_shape@3161@7661"; "xm_tex@3160@7660";
                          "xm_ctbl@3170@7670"],
                         Var m@4352,
               Let ("Ti@2132@3171@7671", Int 2,
               Let ("Td@1457@4370",
                    Get (Var m_abc@3164@7664, Var Ti@2132@3171@7671),
               Let ("Tb@2347@2779@7659", Int 0,
               Let ("Td@1459@4368",
                    IfEq
                     (Var Tb@1456@4369,
                      Var Tb@2347@2779@7659,
                      FNeg Var Td@1457@4370,
                      Var Td@1457@4370),
               Let ("Tu@85@4361",
                    Put (Var const@4353, Var Ti@1458@4367, Var Td@1459@4368),
               Let ("Ti@1450@4362", Int 5,
               Let ("Td@1448@4364", Float 1.000000,
               Let ("Ti@1447@4366", Int 2,
               Let ("Td@1449@4365", Get (Var vec@4351, Var Ti@1447@4366),
               Let ("Td@1451@4363",
                    FDiv (Var Td@1448@4364, Var Td@1449@4365),
               Put (Var const@4353, Var Ti@1450@4362, Var Td@1451@4363)))))))))))))))))))),
               Let ("Ti@1445@4359", Int 5,
               Let ("Td@1446@4360", Float 0.000000,
               Put (Var const@4353, Var Ti@1445@4359, Var Td@1446@4360)))),
        Var const@4353))))))))))))))))))))),
LetRec ("setup_surface_table@4419", ["vec@4420"; "m@4421"],
        Let ("Ti@1439@4460", Int 4,
        Let ("Td@1440@4461", Float 0.000000,
        Let ("const@4422",
             ExtFunApp
              (Var create_float_array, [Var Ti@1439@4460; Var Td@1440@4461]),
        Let ("Ti@1426@4459", Int 0,
        Let ("Td@1427@4457", Get (Var vec@4420, Var Ti@1426@4459),
        LetTuple (["xm_rot123@3141@7656"; "xm_color@3140@7655";
                   "xm_surfparams@3139@7654"; "xm_invert@3138@7653";
                   "xm_xyz@3137@7652"; "m_abc@3136@7651";
                   "xm_isrot@3135@7650"; "xm_surface@3134@7649";
                   "xm_shape@3133@7648"; "xm_tex@3132@7647";
                   "xm_ctbl@3142@7657"],
                  Var m@4421,
        Let ("Ti@2134@3143@7658", Int 0,
        Let ("Td@1428@4458",
             Get (Var m_abc@3136@7651, Var Ti@2134@3143@7658),
        Let ("Td@1432@4452", FMul (Var Td@1427@4457, Var Td@1428@4458),
        Let ("Ti@1429@4456", Int 1,
        Let ("Td@1430@4454", Get (Var vec@4420, Var Ti@1429@4456),
        LetTuple (["xm_rot123@3155@7644"; "xm_color@3154@7643";
                   "xm_surfparams@3153@7642"; "xm_invert@3152@7641";
                   "xm_xyz@3151@7640"; "m_abc@3150@7639";
                   "xm_isrot@3149@7638"; "xm_surface@3148@7637";
                   "xm_shape@3147@7636"; "xm_tex@3146@7635";
                   "xm_ctbl@3156@7645"],
                  Var m@4421,
        Let ("Ti@2133@3157@7646", Int 1,
        Let ("Td@1431@4455",
             Get (Var m_abc@3150@7639, Var Ti@2133@3157@7646),
        Let ("Td@1433@4453", FMul (Var Td@1430@4454, Var Td@1431@4455),
        Let ("Td@1437@4447", FAdd (Var Td@1432@4452, Var Td@1433@4453),
        Let ("Ti@1434@4451", Int 2,
        Let ("Td@1435@4449", Get (Var vec@4420, Var Ti@1434@4451),
        LetTuple (["xm_rot123@3169@7632"; "xm_color@3168@7631";
                   "xm_surfparams@3167@7630"; "xm_invert@3166@7629";
                   "xm_xyz@3165@7628"; "m_abc@3164@7627";
                   "xm_isrot@3163@7626"; "xm_surface@3162@7625";
                   "xm_shape@3161@7624"; "xm_tex@3160@7623";
                   "xm_ctbl@3170@7633"],
                  Var m@4421,
        Let ("Ti@2132@3171@7634", Int 2,
        Let ("Td@1436@4450",
             Get (Var m_abc@3164@7627, Var Ti@2132@3171@7634),
        Let ("Td@1438@4448", FMul (Var Td@1435@4449, Var Td@1436@4450),
        Let ("d@4423", FAdd (Var Td@1437@4447, Var Td@1438@4448),
        Let ("Tb@1407@4425", Int 0,
        Let ("Td@2548@2557@7622", Float 0.000000,
        Let ("Tb@1408@4426",
             IfLE (Var d@4423, Var Td@2548@2557@7622, Int 0, Int 1),
        Let ("Tu@92@4424",
             IfEq
              (Var Tb@1408@4426,
               Var Tb@1407@4425,
               Let ("Ti@1424@4445", Int 0,
               Let ("Td@1425@4446", Float 0.000000,
               Put (Var const@4422, Var Ti@1424@4445, Var Td@1425@4446))),
               Let ("Ti@1422@4442", Int 0,
               Let ("Td@1421@4444", Float -1.000000,
               Let ("Td@1423@4443", FDiv (Var Td@1421@4444, Var d@4423),
               Let ("Tu@91@4427",
                    Put (Var const@4422, Var Ti@1422@4442, Var Td@1423@4443),
               Let ("Ti@1419@4438", Int 1,
               LetTuple (["xm_rot123@3141@7619"; "xm_color@3140@7618";
                          "xm_surfparams@3139@7617"; "xm_invert@3138@7616";
                          "xm_xyz@3137@7615"; "m_abc@3136@7614";
                          "xm_isrot@3135@7613"; "xm_surface@3134@7612";
                          "xm_shape@3133@7611"; "xm_tex@3132@7610";
                          "xm_ctbl@3142@7620"],
                         Var m@4421,
               Let ("Ti@2134@3143@7621", Int 0,
               Let ("Td@1417@4441",
                    Get (Var m_abc@3136@7614, Var Ti@2134@3143@7621),
               Let ("Td@1418@4440", FDiv (Var Td@1417@4441, Var d@4423),
               Let ("Td@1420@4439", FNeg Var Td@1418@4440,
               Let ("Tu@90@4428",
                    Put (Var const@4422, Var Ti@1419@4438, Var Td@1420@4439),
               Let ("Ti@1415@4434", Int 2,
               LetTuple (["xm_rot123@3155@7607"; "xm_color@3154@7606";
                          "xm_surfparams@3153@7605"; "xm_invert@3152@7604";
                          "xm_xyz@3151@7603"; "m_abc@3150@7602";
                          "xm_isrot@3149@7601"; "xm_surface@3148@7600";
                          "xm_shape@3147@7599"; "xm_tex@3146@7598";
                          "xm_ctbl@3156@7608"],
                         Var m@4421,
               Let ("Ti@2133@3157@7609", Int 1,
               Let ("Td@1413@4437",
                    Get (Var m_abc@3150@7602, Var Ti@2133@3157@7609),
               Let ("Td@1414@4436", FDiv (Var Td@1413@4437, Var d@4423),
               Let ("Td@1416@4435", FNeg Var Td@1414@4436,
               Let ("Tu@89@4429",
                    Put (Var const@4422, Var Ti@1415@4434, Var Td@1416@4435),
               Let ("Ti@1411@4430", Int 3,
               LetTuple (["xm_rot123@3169@7595"; "xm_color@3168@7594";
                          "xm_surfparams@3167@7593"; "xm_invert@3166@7592";
                          "xm_xyz@3165@7591"; "m_abc@3164@7590";
                          "xm_isrot@3163@7589"; "xm_surface@3162@7588";
                          "xm_shape@3161@7587"; "xm_tex@3160@7586";
                          "xm_ctbl@3170@7596"],
                         Var m@4421,
               Let ("Ti@2132@3171@7597", Int 2,
               Let ("Td@1409@4433",
                    Get (Var m_abc@3164@7590, Var Ti@2132@3171@7597),
               Let ("Td@1410@4432", FDiv (Var Td@1409@4433, Var d@4423),
               Let ("Td@1412@4431", FNeg Var Td@1410@4432,
               Put (Var const@4422, Var Ti@1411@4430, Var Td@1412@4431)))))))))))))))))))))))))),
        Var const@4422))))))))))))))))))))))))))),
LetRec ("setup_second_table@4462", ["v@4463"; "m@4464"],
        Let ("Ti@1405@4542", Int 5,
        Let ("Td@1406@4543", Float 0.000000,
        Let ("const@4465",
             ExtFunApp
              (Var create_float_array, [Var Ti@1405@4542; Var Td@1406@4543]),
        Let ("Ti@1399@4541", Int 0,
        Let ("Td@1402@4536", Get (Var v@4463, Var Ti@1399@4541),
        Let ("Ti@1400@4540", Int 1,
        Let ("Td@1403@4537", Get (Var v@4463, Var Ti@1400@4540),
        Let ("Ti@1401@4539", Int 2,
        Let ("Td@1404@4538", Get (Var v@4463, Var Ti@1401@4539),
        Let ("aa@4466",
             App
              (Var quadratic@3954,
               [Var Td@1403@4537; Var Td@1402@4536; Var m@4464;
                Var Td@1404@4538]),
        Let ("Ti@1395@4535", Int 0,
        Let ("Td@1396@4533", Get (Var v@4463, Var Ti@1395@4535),
        LetTuple (["xm_rot123@3141@7583"; "xm_color@3140@7582";
                   "xm_surfparams@3139@7581"; "xm_invert@3138@7580";
                   "xm_xyz@3137@7579"; "m_abc@3136@7578";
                   "xm_isrot@3135@7577"; "xm_surface@3134@7576";
                   "xm_shape@3133@7575"; "xm_tex@3132@7574";
                   "xm_ctbl@3142@7584"],
                  Var m@4464,
        Let ("Ti@2134@3143@7585", Int 0,
        Let ("Td@1397@4534",
             Get (Var m_abc@3136@7578, Var Ti@2134@3143@7585),
        Let ("Td@1398@4532", FMul (Var Td@1396@4533, Var Td@1397@4534),
        Let ("c1@4467", FNeg Var Td@1398@4532,
        Let ("Ti@1391@4531", Int 1,
        Let ("Td@1392@4529", Get (Var v@4463, Var Ti@1391@4531),
        LetTuple (["xm_rot123@3155@7571"; "xm_color@3154@7570";
                   "xm_surfparams@3153@7569"; "xm_invert@3152@7568";
                   "xm_xyz@3151@7567"; "m_abc@3150@7566";
                   "xm_isrot@3149@7565"; "xm_surface@3148@7564";
                   "xm_shape@3147@7563"; "xm_tex@3146@7562";
                   "xm_ctbl@3156@7572"],
                  Var m@4464,
        Let ("Ti@2133@3157@7573", Int 1,
        Let ("Td@1393@4530",
             Get (Var m_abc@3150@7566, Var Ti@2133@3157@7573),
        Let ("Td@1394@4528", FMul (Var Td@1392@4529, Var Td@1393@4530),
        Let ("c2@4468", FNeg Var Td@1394@4528,
        Let ("Ti@1387@4527", Int 2,
        Let ("Td@1388@4525", Get (Var v@4463, Var Ti@1387@4527),
        LetTuple (["xm_rot123@3169@7559"; "xm_color@3168@7558";
                   "xm_surfparams@3167@7557"; "xm_invert@3166@7556";
                   "xm_xyz@3165@7555"; "m_abc@3164@7554";
                   "xm_isrot@3163@7553"; "xm_surface@3162@7552";
                   "xm_shape@3161@7551"; "xm_tex@3160@7550";
                   "xm_ctbl@3170@7560"],
                  Var m@4464,
        Let ("Ti@2132@3171@7561", Int 2,
        Let ("Td@1389@4526",
             Get (Var m_abc@3164@7554, Var Ti@2132@3171@7561),
        Let ("Td@1390@4524", FMul (Var Td@1388@4525, Var Td@1389@4526),
        Let ("c3@4469", FNeg Var Td@1390@4524,
        Let ("Ti@1386@4523", Int 0,
        Let ("Tu@99@4470",
             Put (Var const@4465, Var Ti@1386@4523, Var aa@4466),
        Let ("Ti@1345@4478", Int 0,
        LetTuple (["xm_rot123@3128@7548"; "xm_color@3127@7547";
                   "xm_surfparams@3126@7546"; "xm_invert@3125@7545";
                   "xm_xyz@3124@7544"; "xm_abc@3123@7543";
                   "m_isrot@3122@7542"; "xm_surface@3121@7541";
                   "xm_shape@3120@7540"; "xm_tex@3119@7539";
                   "xm_ctbl@3129@7549"],
                  Var m@4464,
        Let ("Tu@98@4471",
             IfEq
              (Var m_isrot@3122@7542,
               Var Ti@1345@4478,
               Let ("Ti@1349@4522", Int 1,
               Let ("Tu@96@4518",
                    Put (Var const@4465, Var Ti@1349@4522, Var c1@4467),
               Let ("Ti@1348@4521", Int 2,
               Let ("Tu@95@4519",
                    Put (Var const@4465, Var Ti@1348@4521, Var c2@4468),
               Let ("Ti@1347@4520", Int 3,
               Put (Var const@4465, Var Ti@1347@4520, Var c3@4469)))))),
               Let ("Ti@1384@4506", Int 1,
               Let ("Ti@1374@4517", Int 2,
               Let ("Td@1375@4515", Get (Var v@4463, Var Ti@1374@4517),
               LetTuple (["m_rot123@3322@7536"; "xm_color@3321@7535";
                          "xm_surfparams@3320@7534"; "xm_invert@3319@7533";
                          "xm_xyz@3318@7532"; "xm_abc@3317@7531";
                          "xm_isrot@3316@7530"; "xm_surface@3315@7529";
                          "xm_shape@3314@7528"; "xm_tex@3313@7527";
                          "xm_ctbl@3323@7537"],
                         Var m@4464,
               Let ("Ti@2122@3324@7538", Int 1,
               Let ("Td@1376@4516",
                    Get (Var m_rot123@3322@7536, Var Ti@2122@3324@7538),
               Let ("Td@1380@4510",
                    FMul (Var Td@1375@4515, Var Td@1376@4516),
               Let ("Ti@1377@4514", Int 1,
               Let ("Td@1378@4512", Get (Var v@4463, Var Ti@1377@4514),
               LetTuple (["m_rot123@3336@7524"; "xm_color@3335@7523";
                          "xm_surfparams@3334@7522"; "xm_invert@3333@7521";
                          "xm_xyz@3332@7520"; "xm_abc@3331@7519";
                          "xm_isrot@3330@7518"; "xm_surface@3329@7517";
                          "xm_shape@3328@7516"; "xm_tex@3327@7515";
                          "xm_ctbl@3337@7525"],
                         Var m@4464,
               Let ("Ti@2121@3338@7526", Int 2,
               Let ("Td@1379@4513",
                    Get (Var m_rot123@3336@7524, Var Ti@2121@3338@7526),
               Let ("Td@1381@4511",
                    FMul (Var Td@1378@4512, Var Td@1379@4513),
               Let ("Td@1382@4509",
                    FAdd (Var Td@1380@4510, Var Td@1381@4511),
               Let ("Td@2545@2566@7514", Float 0.500000,
               Let ("Td@1383@4508",
                    FMul (Var Td@1382@4509, Var Td@2545@2566@7514),
               Let ("Td@1385@4507", FSub (Var c1@4467, Var Td@1383@4508),
               Let ("Tu@94@4480",
                    Put (Var const@4465, Var Ti@1384@4506, Var Td@1385@4507),
               Let ("Ti@1372@4494", Int 2,
               Let ("Ti@1362@4505", Int 2,
               Let ("Td@1363@4503", Get (Var v@4463, Var Ti@1362@4505),
               LetTuple (["m_rot123@3308@7511"; "xm_color@3307@7510";
                          "xm_surfparams@3306@7509"; "xm_invert@3305@7508";
                          "xm_xyz@3304@7507"; "xm_abc@3303@7506";
                          "xm_isrot@3302@7505"; "xm_surface@3301@7504";
                          "xm_shape@3300@7503"; "xm_tex@3299@7502";
                          "xm_ctbl@3309@7512"],
                         Var m@4464,
               Let ("Ti@2123@3310@7513", Int 0,
               Let ("Td@1364@4504",
                    Get (Var m_rot123@3308@7511, Var Ti@2123@3310@7513),
               Let ("Td@1368@4498",
                    FMul (Var Td@1363@4503, Var Td@1364@4504),
               Let ("Ti@1365@4502", Int 0,
               Let ("Td@1366@4500", Get (Var v@4463, Var Ti@1365@4502),
               LetTuple (["m_rot123@3336@7499"; "xm_color@3335@7498";
                          "xm_surfparams@3334@7497"; "xm_invert@3333@7496";
                          "xm_xyz@3332@7495"; "xm_abc@3331@7494";
                          "xm_isrot@3330@7493"; "xm_surface@3329@7492";
                          "xm_shape@3328@7491"; "xm_tex@3327@7490";
                          "xm_ctbl@3337@7500"],
                         Var m@4464,
               Let ("Ti@2121@3338@7501", Int 2,
               Let ("Td@1367@4501",
                    Get (Var m_rot123@3336@7499, Var Ti@2121@3338@7501),
               Let ("Td@1369@4499",
                    FMul (Var Td@1366@4500, Var Td@1367@4501),
               Let ("Td@1370@4497",
                    FAdd (Var Td@1368@4498, Var Td@1369@4499),
               Let ("Td@2545@2566@7489", Float 0.500000,
               Let ("Td@1371@4496",
                    FMul (Var Td@1370@4497, Var Td@2545@2566@7489),
               Let ("Td@1373@4495", FSub (Var c2@4468, Var Td@1371@4496),
               Let ("Tu@93@4481",
                    Put (Var const@4465, Var Ti@1372@4494, Var Td@1373@4495),
               Let ("Ti@1360@4482", Int 3,
               Let ("Ti@1350@4493", Int 1,
               Let ("Td@1351@4491", Get (Var v@4463, Var Ti@1350@4493),
               LetTuple (["m_rot123@3308@7486"; "xm_color@3307@7485";
                          "xm_surfparams@3306@7484"; "xm_invert@3305@7483";
                          "xm_xyz@3304@7482"; "xm_abc@3303@7481";
                          "xm_isrot@3302@7480"; "xm_surface@3301@7479";
                          "xm_shape@3300@7478"; "xm_tex@3299@7477";
                          "xm_ctbl@3309@7487"],
                         Var m@4464,
               Let ("Ti@2123@3310@7488", Int 0,
               Let ("Td@1352@4492",
                    Get (Var m_rot123@3308@7486, Var Ti@2123@3310@7488),
               Let ("Td@1356@4486",
                    FMul (Var Td@1351@4491, Var Td@1352@4492),
               Let ("Ti@1353@4490", Int 0,
               Let ("Td@1354@4488", Get (Var v@4463, Var Ti@1353@4490),
               LetTuple (["m_rot123@3322@7474"; "xm_color@3321@7473";
                          "xm_surfparams@3320@7472"; "xm_invert@3319@7471";
                          "xm_xyz@3318@7470"; "xm_abc@3317@7469";
                          "xm_isrot@3316@7468"; "xm_surface@3315@7467";
                          "xm_shape@3314@7466"; "xm_tex@3313@7465";
                          "xm_ctbl@3323@7475"],
                         Var m@4464,
               Let ("Ti@2122@3324@7476", Int 1,
               Let ("Td@1355@4489",
                    Get (Var m_rot123@3322@7474, Var Ti@2122@3324@7476),
               Let ("Td@1357@4487",
                    FMul (Var Td@1354@4488, Var Td@1355@4489),
               Let ("Td@1358@4485",
                    FAdd (Var Td@1356@4486, Var Td@1357@4487),
               Let ("Td@2545@2566@7464", Float 0.500000,
               Let ("Td@1359@4484",
                    FMul (Var Td@1358@4485, Var Td@2545@2566@7464),
               Let ("Td@1361@4483", FSub (Var c3@4469, Var Td@1359@4484),
               Put (Var const@4465, Var Ti@1360@4482, Var Td@1361@4483))))))))))))))))))))))))))))))))))))))))))))))))))))))),
        Let ("Tb@1340@4473", Int 0,
        Let ("Td@2546@2563@7463", Float 0.000000,
        Let ("Tb@1341@4474",
             IfEq (Var aa@4466, Var Td@2546@2563@7463, Int 1, Int 0),
        Let ("Tu@97@4472",
             IfEq
              (Var Tb@1341@4474,
               Var Tb@1340@4473,
               Let ("Ti@1343@4475", Int 4,
               Let ("Td@1342@4477", Float 1.000000,
               Let ("Td@1344@4476", FDiv (Var Td@1342@4477, Var aa@4466),
               Put (Var const@4465, Var Ti@1343@4475, Var Td@1344@4476)))),
               ()),
        Var const@4465)))))))))))))))))))))))))))))))))))))))),
LetRec ("iter_setup_dirvec_constants@4544", ["dirvec@4545"; "index@4546"],
        Let ("Ti@1332@4547", Int 0,
        IfLE
         (Var Ti@1332@4547,
          Var index@4546,
          Let ("Ta@8440", Static objects@2736,
          Let ("m@4548", Get (Var Ta@8440, Var index@4546),
          LetTuple (["dm_vec@3451@7461"; "m_const@3452@7462"],
                    Var dirvec@4545,
          LetTuple (["m_vec@3447@7459"; "xm_const@3448@7460"],
                    Var dirvec@4545,
          LetTuple (["xm_rot123@3089@7457"; "xm_color@3088@7456";
                     "xm_surfparams@3087@7455"; "xm_invert@3086@7454";
                     "xm_xyz@3085@7453"; "xm_abc@3084@7452";
                     "xm_isrot@3083@7451"; "xm_surface@3082@7450";
                     "m_shape@3081@7449"; "xm_tex@3080@7448";
                     "xm_ctbl@3090@7458"],
                    Var m@4548,
          Let ("Ti@1335@4555", Int 1,
          Let ("Tu@100@4552",
               IfEq
                (Var m_shape@3081@7449,
                 Var Ti@1335@4555,
                 Let ("Ta@1339@4559",
                      App
                       (Var setup_rect_table@4350,
                        [Var m_vec@3447@7459; Var m@4548]),
                 Put
                  (Var m_const@3452@7462, Var index@4546, Var Ta@1339@4559)),
                 Let ("Ti@1336@4556", Int 2,
                 IfEq
                  (Var m_shape@3081@7449,
                   Var Ti@1336@4556,
                   Let ("Ta@1338@4558",
                        App
                         (Var setup_surface_table@4419,
                          [Var m_vec@3447@7459; Var m@4548]),
                   Put
                    (Var m_const@3452@7462, Var index@4546, Var Ta@1338@4558)),
                   Let ("Ta@1337@4557",
                        App
                         (Var setup_second_table@4462,
                          [Var m_vec@3447@7459; Var m@4548]),
                   Put
                    (Var m_const@3452@7462, Var index@4546, Var Ta@1337@4557))))),
          Let ("Ti@1333@4554", Int 1,
          Let ("Ti@1334@4553", Sub (Var index@4546, Var Ti@1333@4554),
          App
           (Var iter_setup_dirvec_constants@4544,
            [Var dirvec@4545; Var Ti@1334@4553])))))))))),
          ())),
LetRec ("setup_startp_constants@4566", ["p@4567"; "index@4568"],
        Let ("Ti@1289@4569", Int 0,
        IfLE
         (Var Ti@1289@4569,
          Var index@4568,
          Let ("Ta@8439", Static objects@2736,
          Let ("obj@4570", Get (Var Ta@8439, Var index@4568),
          LetTuple (["xm_rot123@3350@7446"; "xm_color@3349@7445";
                     "xm_surfparams@3348@7444"; "xm_invert@3347@7443";
                     "xm_xyz@3346@7442"; "xm_abc@3345@7441";
                     "xm_isrot@3344@7440"; "xm_surface@3343@7439";
                     "xm_shape@3342@7438"; "xm_tex@3341@7437";
                     "m_ctbl@3351@7447"],
                    Var obj@4570,
          LetTuple (["xm_rot123@3089@7435"; "xm_color@3088@7434";
                     "xm_surfparams@3087@7433"; "xm_invert@3086@7432";
                     "xm_xyz@3085@7431"; "xm_abc@3084@7430";
                     "xm_isrot@3083@7429"; "xm_surface@3082@7428";
                     "m_shape@3081@7427"; "xm_tex@3080@7426";
                     "xm_ctbl@3090@7436"],
                    Var obj@4570,
          Let ("Ti@1326@4611", Int 0,
          Let ("Ti@1323@4615", Int 0,
          Let ("Td@1324@4613", Get (Var p@4567, Var Ti@1323@4615),
          LetTuple (["xm_rot123@3196@7423"; "xm_color@3195@7422";
                     "xm_surfparams@3194@7421"; "xm_invert@3193@7420";
                     "m_xyz@3192@7419"; "xm_abc@3191@7418";
                     "xm_isrot@3190@7417"; "xm_surface@3189@7416";
                     "xm_shape@3188@7415"; "xm_tex@3187@7414";
                     "xm_ctbl@3197@7424"],
                    Var obj@4570,
          Let ("Ti@2131@3198@7425", Int 0,
          Let ("Td@1325@4614",
               Get (Var m_xyz@3192@7419, Var Ti@2131@3198@7425),
          Let ("Td@1327@4612", FSub (Var Td@1324@4613, Var Td@1325@4614),
          Let ("Tu@104@4573",
               Put (Var m_ctbl@3351@7447, Var Ti@1326@4611, Var Td@1327@4612),
          Let ("Ti@1321@4606", Int 1,
          Let ("Ti@1318@4610", Int 1,
          Let ("Td@1319@4608", Get (Var p@4567, Var Ti@1318@4610),
          LetTuple (["xm_rot123@3210@7411"; "xm_color@3209@7410";
                     "xm_surfparams@3208@7409"; "xm_invert@3207@7408";
                     "m_xyz@3206@7407"; "xm_abc@3205@7406";
                     "xm_isrot@3204@7405"; "xm_surface@3203@7404";
                     "xm_shape@3202@7403"; "xm_tex@3201@7402";
                     "xm_ctbl@3211@7412"],
                    Var obj@4570,
          Let ("Ti@2130@3212@7413", Int 1,
          Let ("Td@1320@4609",
               Get (Var m_xyz@3206@7407, Var Ti@2130@3212@7413),
          Let ("Td@1322@4607", FSub (Var Td@1319@4608, Var Td@1320@4609),
          Let ("Tu@103@4574",
               Put (Var m_ctbl@3351@7447, Var Ti@1321@4606, Var Td@1322@4607),
          Let ("Ti@1316@4601", Int 2,
          Let ("Ti@1313@4605", Int 2,
          Let ("Td@1314@4603", Get (Var p@4567, Var Ti@1313@4605),
          LetTuple (["xm_rot123@3224@7399"; "xm_color@3223@7398";
                     "xm_surfparams@3222@7397"; "xm_invert@3221@7396";
                     "m_xyz@3220@7395"; "xm_abc@3219@7394";
                     "xm_isrot@3218@7393"; "xm_surface@3217@7392";
                     "xm_shape@3216@7391"; "xm_tex@3215@7390";
                     "xm_ctbl@3225@7400"],
                    Var obj@4570,
          Let ("Ti@2129@3226@7401", Int 2,
          Let ("Td@1315@4604",
               Get (Var m_xyz@3220@7395, Var Ti@2129@3226@7401),
          Let ("Td@1317@4602", FSub (Var Td@1314@4603, Var Td@1315@4604),
          Let ("Tu@102@4575",
               Put (Var m_ctbl@3351@7447, Var Ti@1316@4601, Var Td@1317@4602),
          Let ("Ti@1292@4579", Int 2,
          Let ("Tu@101@4576",
               IfEq
                (Var m_shape@3081@7427,
                 Var Ti@1292@4579,
                 Let ("Ti@1311@4592", Int 3,
                 LetTuple (["xm_rot123@3183@7388"; "xm_color@3182@7387";
                            "xm_surfparams@3181@7386"; "xm_invert@3180@7385";
                            "xm_xyz@3179@7384"; "m_abc@3178@7383";
                            "xm_isrot@3177@7382"; "xm_surface@3176@7381";
                            "xm_shape@3175@7380"; "xm_tex@3174@7379";
                            "xm_ctbl@3184@7389"],
                           Var obj@4570,
                 Let ("Ti@1304@4600", Int 0,
                 Let ("Td@1308@4595",
                      Get (Var m_ctbl@3351@7447, Var Ti@1304@4600),
                 Let ("Ti@1305@4599", Int 1,
                 Let ("Td@1309@4596",
                      Get (Var m_ctbl@3351@7447, Var Ti@1305@4599),
                 Let ("Ti@1306@4598", Int 2,
                 Let ("Td@1310@4597",
                      Get (Var m_ctbl@3351@7447, Var Ti@1306@4598),
                 Let ("Td@1312@4593",
                      App
                       (Var veciprod2@2927,
                        [Var Td@1309@4596; Var Td@1308@4595;
                         Var m_abc@3178@7383; Var Td@1310@4597]),
                 Put
                  (Var m_ctbl@3351@7447, Var Ti@1311@4592, Var Td@1312@4593)))))))))),
                 Let ("Ti@1293@4580", Int 2,
                 IfLE
                  (Var m_shape@3081@7427,
                   Var Ti@1293@4580,
                   (),
                   Let ("Ti@1298@4591", Int 0,
                   Let ("Td@1301@4586",
                        Get (Var m_ctbl@3351@7447, Var Ti@1298@4591),
                   Let ("Ti@1299@4590", Int 1,
                   Let ("Td@1302@4587",
                        Get (Var m_ctbl@3351@7447, Var Ti@1299@4590),
                   Let ("Ti@1300@4589", Int 2,
                   Let ("Td@1303@4588",
                        Get (Var m_ctbl@3351@7447, Var Ti@1300@4589),
                   Let ("cc0@4581",
                        App
                         (Var quadratic@3954,
                          [Var Td@1302@4587; Var Td@1301@4586; Var obj@4570;
                           Var Td@1303@4588]),
                   Let ("Ti@1296@4582", Int 3,
                   Let ("Ti@1294@4584", Int 3,
                   Let ("Td@1297@4583",
                        IfEq
                         (Var m_shape@3081@7427,
                          Var Ti@1294@4584,
                          Let ("Td@1295@4585", Float 1.000000,
                          FSub (Var cc0@4581, Var Td@1295@4585)),
                          Var cc0@4581),
                   Put
                    (Var m_ctbl@3351@7447,
                     Var Ti@1296@4582,
                     Var Td@1297@4583)))))))))))))),
          Let ("Ti@1290@4578", Int 1,
          Let ("Ti@1291@4577", Sub (Var index@4568, Var Ti@1290@4578),
          App
           (Var setup_startp_constants@4566, [Var p@4567; Var Ti@1291@4577]))))))))))))))))))))))))))))))))),
          ())),
LetRec ("setup_startp@4616", ["p@4617"],
        Let ("Ta@8438", Static startp_fast@2756,
        Let ("Tu@105@4618", App (Var veccpy@2807, [Var Ta@8438; Var p@4617]),
        Let ("Ti@1285@4622", Int 0,
        Let ("Ta@8437", Static n_objects@2735,
        Let ("Ti@1286@4620", Get (Var Ta@8437, Var Ti@1285@4622),
        Let ("Ti@1287@4621", Int 1,
        Let ("Ti@1288@4619", Sub (Var Ti@1286@4620, Var Ti@1287@4621),
        App (Var setup_startp_constants@4566, [Var p@4617; Var Ti@1288@4619])))))))),
LetRec ("is_rect_outside@4623", ["p1@4626"; "p0@4625"; "m@4624"; "p2@4627"],
        Let ("Tb@1281@4628", Int 0,
        Let ("Tb@1273@4632", Int 0,
        Let ("Td@1271@4640", FAbs Var p0@4625,
        LetTuple (["xm_rot123@3141@7376"; "xm_color@3140@7375";
                   "xm_surfparams@3139@7374"; "xm_invert@3138@7373";
                   "xm_xyz@3137@7372"; "m_abc@3136@7371";
                   "xm_isrot@3135@7370"; "xm_surface@3134@7369";
                   "xm_shape@3133@7368"; "xm_tex@3132@7367";
                   "xm_ctbl@3142@7377"],
                  Var m@4624,
        Let ("Ti@2134@3143@7378", Int 0,
        Let ("Td@1272@4641",
             Get (Var m_abc@3136@7371, Var Ti@2134@3143@7378),
        Let ("Tb@1274@4633",
             IfLE (Var Td@1272@4641, Var Td@1271@4640, Int 0, Int 1),
        Let ("Tb@1282@4629",
             IfEq
              (Var Tb@1274@4633,
               Var Tb@1273@4632,
               Int 0,
               Let ("Tb@1277@4634", Int 0,
               Let ("Td@1275@4638", FAbs Var p1@4626,
               LetTuple (["xm_rot123@3155@7364"; "xm_color@3154@7363";
                          "xm_surfparams@3153@7362"; "xm_invert@3152@7361";
                          "xm_xyz@3151@7360"; "m_abc@3150@7359";
                          "xm_isrot@3149@7358"; "xm_surface@3148@7357";
                          "xm_shape@3147@7356"; "xm_tex@3146@7355";
                          "xm_ctbl@3156@7365"],
                         Var m@4624,
               Let ("Ti@2133@3157@7366", Int 1,
               Let ("Td@1276@4639",
                    Get (Var m_abc@3150@7359, Var Ti@2133@3157@7366),
               Let ("Tb@1278@4635",
                    IfLE (Var Td@1276@4639, Var Td@1275@4638, Int 0, Int 1),
               IfEq
                (Var Tb@1278@4635,
                 Var Tb@1277@4634,
                 Int 0,
                 Let ("Td@1279@4636", FAbs Var p2@4627,
                 LetTuple (["xm_rot123@3169@7352"; "xm_color@3168@7351";
                            "xm_surfparams@3167@7350"; "xm_invert@3166@7349";
                            "xm_xyz@3165@7348"; "m_abc@3164@7347";
                            "xm_isrot@3163@7346"; "xm_surface@3162@7345";
                            "xm_shape@3161@7344"; "xm_tex@3160@7343";
                            "xm_ctbl@3170@7353"],
                           Var m@4624,
                 Let ("Ti@2132@3171@7354", Int 2,
                 Let ("Td@1280@4637",
                      Get (Var m_abc@3164@7347, Var Ti@2132@3171@7354),
                 IfLE (Var Td@1280@4637, Var Td@1279@4636, Int 0, Int 1))))))))))))),
        IfEq
         (Var Tb@1282@4629,
          Var Tb@1281@4628,
          Let ("Tb@1283@4630", Int 0,
          LetTuple (["xm_rot123@3115@7341"; "xm_color@3114@7340";
                     "xm_surfparams@3113@7339"; "m_invert@3112@7338";
                     "xm_xyz@3111@7337"; "xm_abc@3110@7336";
                     "xm_isrot@3109@7335"; "xm_surface@3108@7334";
                     "xm_shape@3107@7333"; "xm_tex@3106@7332";
                     "xm_ctbl@3116@7342"],
                    Var m@4624,
          IfEq (Var m_invert@3112@7338, Var Tb@1283@4630, Int 1, Int 0))),
          LetTuple (["xm_rot123@3115@7330"; "xm_color@3114@7329";
                     "xm_surfparams@3113@7328"; "m_invert@3112@7327";
                     "xm_xyz@3111@7326"; "xm_abc@3110@7325";
                     "xm_isrot@3109@7324"; "xm_surface@3108@7323";
                     "xm_shape@3107@7322"; "xm_tex@3106@7321";
                     "xm_ctbl@3116@7331"],
                    Var m@4624,
          Var m_invert@3112@7327)))))))))),
LetRec ("is_plane_outside@4642", ["p1@4645"; "p0@4644"; "m@4643"; "p2@4646"],
        LetTuple (["xm_rot123@3183@7319"; "xm_color@3182@7318";
                   "xm_surfparams@3181@7317"; "xm_invert@3180@7316";
                   "xm_xyz@3179@7315"; "m_abc@3178@7314";
                   "xm_isrot@3177@7313"; "xm_surface@3176@7312";
                   "xm_shape@3175@7311"; "xm_tex@3174@7310";
                   "xm_ctbl@3184@7320"],
                  Var m@4643,
        Let ("w@4647",
             App
              (Var veciprod2@2927,
               [Var p1@4645; Var p0@4644; Var m_abc@3178@7314; Var p2@4646]),
        Let ("Tb@1268@4648", Int 0,
        LetTuple (["xm_rot123@3115@7308"; "xm_color@3114@7307";
                   "xm_surfparams@3113@7306"; "m_invert@3112@7305";
                   "xm_xyz@3111@7304"; "xm_abc@3110@7303";
                   "xm_isrot@3109@7302"; "xm_surface@3108@7301";
                   "xm_shape@3107@7300"; "xm_tex@3106@7299";
                   "xm_ctbl@3116@7309"],
                  Var m@4643,
        Let ("Td@2547@2560@7298", Float 0.000000,
        Let ("Tb@1267@4651",
             IfLE (Var Td@2547@2560@7298, Var w@4647, Int 0, Int 1),
        Let ("Tb@2352@2768@7296", Int 0,
        Let ("Tb@1269@4649",
             IfEq
              (Var m_invert@3112@7305,
               Var Tb@2352@2768@7296,
               Var Tb@1267@4651,
               Let ("Tb@2353@2769@7297", Int 0,
               IfEq (Var Tb@1267@4651, Var Tb@2353@2769@7297, Int 1, Int 0))),
        IfEq (Var Tb@1269@4649, Var Tb@1268@4648, Int 1, Int 0))))))))),
LetRec ("is_second_outside@4653",
        ["p1@4656"; "p0@4655"; "m@4654"; "p2@4657"],
        Let ("w@4658",
             App
              (Var quadratic@3954,
               [Var p1@4656; Var p0@4655; Var m@4654; Var p2@4657]),
        Let ("Ti@1263@4664", Int 3,
        LetTuple (["xm_rot123@3089@7294"; "xm_color@3088@7293";
                   "xm_surfparams@3087@7292"; "xm_invert@3086@7291";
                   "xm_xyz@3085@7290"; "xm_abc@3084@7289";
                   "xm_isrot@3083@7288"; "xm_surface@3082@7287";
                   "m_shape@3081@7286"; "xm_tex@3080@7285";
                   "xm_ctbl@3090@7295"],
                  Var m@4654,
        Let ("w2@4659",
             IfEq
              (Var m_shape@3081@7286,
               Var Ti@1263@4664,
               Let ("Td@1265@4666", Float 1.000000,
               FSub (Var w@4658, Var Td@1265@4666)),
               Var w@4658),
        Let ("Tb@1261@4660", Int 0,
        LetTuple (["xm_rot123@3115@7283"; "xm_color@3114@7282";
                   "xm_surfparams@3113@7281"; "m_invert@3112@7280";
                   "xm_xyz@3111@7279"; "xm_abc@3110@7278";
                   "xm_isrot@3109@7277"; "xm_surface@3108@7276";
                   "xm_shape@3107@7275"; "xm_tex@3106@7274";
                   "xm_ctbl@3116@7284"],
                  Var m@4654,
        Let ("Td@2547@2560@7273", Float 0.000000,
        Let ("Tb@1260@4663",
             IfLE (Var Td@2547@2560@7273, Var w2@4659, Int 0, Int 1),
        Let ("Tb@2352@2768@7271", Int 0,
        Let ("Tb@1262@4661",
             IfEq
              (Var m_invert@3112@7280,
               Var Tb@2352@2768@7271,
               Var Tb@1260@4663,
               Let ("Tb@2353@2769@7272", Int 0,
               IfEq (Var Tb@1260@4663, Var Tb@2353@2769@7272, Int 1, Int 0))),
        IfEq (Var Tb@1262@4661, Var Tb@1261@4660, Int 1, Int 0))))))))))),
LetRec ("is_outside@4667", ["q1@4670"; "q0@4669"; "m@4668"; "q2@4671"],
        LetTuple (["xm_rot123@3196@7268"; "xm_color@3195@7267";
                   "xm_surfparams@3194@7266"; "xm_invert@3193@7265";
                   "m_xyz@3192@7264"; "xm_abc@3191@7263";
                   "xm_isrot@3190@7262"; "xm_surface@3189@7261";
                   "xm_shape@3188@7260"; "xm_tex@3187@7259";
                   "xm_ctbl@3197@7269"],
                  Var m@4668,
        Let ("Ti@2131@3198@7270", Int 0,
        Let ("Td@1258@4680",
             Get (Var m_xyz@3192@7264, Var Ti@2131@3198@7270),
        Let ("p0@4672", FSub (Var q0@4669, Var Td@1258@4680),
        LetTuple (["xm_rot123@3210@7256"; "xm_color@3209@7255";
                   "xm_surfparams@3208@7254"; "xm_invert@3207@7253";
                   "m_xyz@3206@7252"; "xm_abc@3205@7251";
                   "xm_isrot@3204@7250"; "xm_surface@3203@7249";
                   "xm_shape@3202@7248"; "xm_tex@3201@7247";
                   "xm_ctbl@3211@7257"],
                  Var m@4668,
        Let ("Ti@2130@3212@7258", Int 1,
        Let ("Td@1257@4679",
             Get (Var m_xyz@3206@7252, Var Ti@2130@3212@7258),
        Let ("p1@4673", FSub (Var q1@4670, Var Td@1257@4679),
        LetTuple (["xm_rot123@3224@7244"; "xm_color@3223@7243";
                   "xm_surfparams@3222@7242"; "xm_invert@3221@7241";
                   "m_xyz@3220@7240"; "xm_abc@3219@7239";
                   "xm_isrot@3218@7238"; "xm_surface@3217@7237";
                   "xm_shape@3216@7236"; "xm_tex@3215@7235";
                   "xm_ctbl@3225@7245"],
                  Var m@4668,
        Let ("Ti@2129@3226@7246", Int 2,
        Let ("Td@1256@4678",
             Get (Var m_xyz@3220@7240, Var Ti@2129@3226@7246),
        Let ("p2@4674", FSub (Var q2@4671, Var Td@1256@4678),
        LetTuple (["xm_rot123@3089@7233"; "xm_color@3088@7232";
                   "xm_surfparams@3087@7231"; "xm_invert@3086@7230";
                   "xm_xyz@3085@7229"; "xm_abc@3084@7228";
                   "xm_isrot@3083@7227"; "xm_surface@3082@7226";
                   "m_shape@3081@7225"; "xm_tex@3080@7224";
                   "xm_ctbl@3090@7234"],
                  Var m@4668,
        Let ("Ti@1254@4676", Int 1,
        IfEq
         (Var m_shape@3081@7225,
          Var Ti@1254@4676,
          App
           (Var is_rect_outside@4623,
            [Var p1@4673; Var p0@4672; Var m@4668; Var p2@4674]),
          Let ("Ti@1255@4677", Int 2,
          IfEq
           (Var m_shape@3081@7225,
            Var Ti@1255@4677,
            App
             (Var is_plane_outside@4642,
              [Var p1@4673; Var p0@4672; Var m@4668; Var p2@4674]),
            App
             (Var is_second_outside@4653,
              [Var p1@4673; Var p0@4672; Var m@4668; Var p2@4674])))))))))))))))))),
LetRec ("check_all_inside@4681",
        ["q1@4685"; "q0@4684"; "iand@4683"; "ofs@4682"; "q2@4686"],
        Let ("head@4687", Get (Var iand@4683, Var ofs@4682),
        Let ("Ti@1247@4694", Int 1,
        Let ("Ti@1248@4688", Int -1,
        IfEq
         (Var head@4687,
          Var Ti@1248@4688,
          Int 1,
          Let ("Tb@1250@4689", Int 0,
          Let ("Ta@8436", Static objects@2736,
          Let ("Tt@1249@4693", Get (Var Ta@8436, Var head@4687),
          Let ("Tb@1251@4690",
               App
                (Var is_outside@4667,
                 [Var q1@4685; Var q0@4684; Var Tt@1249@4693; Var q2@4686]),
          IfEq
           (Var Tb@1251@4690,
            Var Tb@1250@4689,
            Let ("Ti@1252@4692", Int 1,
            Let ("Ti@1253@4691", Add (Var ofs@4682, Var Ti@1252@4692),
            App
             (Var check_all_inside@4681,
              [Var q1@4685; Var q0@4684; Var iand@4683; Var Ti@1253@4691;
               Var q2@4686]))),
            Int 0))))))))),
LetRec ("shadow_check_and_group@4695", ["iand_ofs@4696"; "and_group@4697"],
        Let ("Ti@1213@4738", Int 1,
        Let ("Ti@1214@4698", Int -1,
        Let ("Ti@1215@4699", Get (Var and_group@4697, Var iand_ofs@4696),
        IfEq
         (Var Ti@1215@4699,
          Var Ti@1214@4698,
          Int 0,
          Let ("obj@4700", Get (Var and_group@4697, Var iand_ofs@4696),
          Let ("Ta@8435", Static intersection_point@2746,
          Let ("Tt@8434", Static light_dirvec@2762,
          Let ("t0@4701",
               App
                (Var solver_fast@4248,
                 [Var Tt@8434; Var obj@4700; Var Ta@8435]),
          Let ("Ti@1246@4737", Int 0,
          Let ("Ta@8433", Static solver_dist@2743,
          Let ("t0p@4702", Get (Var Ta@8433, Var Ti@1246@4737),
          Let ("Tb@1218@4703", Int 0,
          Let ("Ti@1216@4735", Int 0,
          Let ("Tb@1219@4704",
               IfEq
                (Var t0@4701,
                 Var Ti@1216@4735,
                 Int 0,
                 Let ("Td@1217@4736", Float -0.200000,
                 IfLE (Var Td@1217@4736, Var t0p@4702, Int 0, Int 1))),
          IfEq
           (Var Tb@1219@4704,
            Var Tb@1218@4703,
            Let ("Tb@1242@4730", Int 0,
            Let ("Ta@8432", Static objects@2736,
            Let ("Tt@1241@4734", Get (Var Ta@8432, Var obj@4700),
            LetTuple (["xm_rot123@3115@7222"; "xm_color@3114@7221";
                       "xm_surfparams@3113@7220"; "m_invert@3112@7219";
                       "xm_xyz@3111@7218"; "xm_abc@3110@7217";
                       "xm_isrot@3109@7216"; "xm_surface@3108@7215";
                       "xm_shape@3107@7214"; "xm_tex@3106@7213";
                       "xm_ctbl@3116@7223"],
                      Var Tt@1241@4734,
            IfEq
             (Var m_invert@3112@7219,
              Var Tb@1242@4730,
              Int 0,
              Let ("Ti@1244@4733", Int 1,
              Let ("Ti@1245@4732", Add (Var iand_ofs@4696, Var Ti@1244@4733),
              App
               (Var shadow_check_and_group@4695,
                [Var Ti@1245@4732; Var and_group@4697])))))))),
            Let ("Td@1240@4729", Float 0.010000,
            Let ("t@4705", FAdd (Var t0p@4702, Var Td@1240@4729),
            Let ("Ti@1235@4728", Int 0,
            Let ("Ta@8431", Static light@2739,
            Let ("Td@1236@4727", Get (Var Ta@8431, Var Ti@1235@4728),
            Let ("Td@1238@4724", FMul (Var Td@1236@4727, Var t@4705),
            Let ("Ti@1237@4726", Int 0,
            Let ("Ta@8430", Static intersection_point@2746,
            Let ("Td@1239@4725", Get (Var Ta@8430, Var Ti@1237@4726),
            Let ("q0@4706", FAdd (Var Td@1238@4724, Var Td@1239@4725),
            Let ("Ti@1230@4723", Int 1,
            Let ("Ta@8429", Static light@2739,
            Let ("Td@1231@4722", Get (Var Ta@8429, Var Ti@1230@4723),
            Let ("Td@1233@4719", FMul (Var Td@1231@4722, Var t@4705),
            Let ("Ti@1232@4721", Int 1,
            Let ("Ta@8428", Static intersection_point@2746,
            Let ("Td@1234@4720", Get (Var Ta@8428, Var Ti@1232@4721),
            Let ("q1@4707", FAdd (Var Td@1233@4719, Var Td@1234@4720),
            Let ("Ti@1225@4718", Int 2,
            Let ("Ta@8427", Static light@2739,
            Let ("Td@1226@4717", Get (Var Ta@8427, Var Ti@1225@4718),
            Let ("Td@1228@4714", FMul (Var Td@1226@4717, Var t@4705),
            Let ("Ti@1227@4716", Int 2,
            Let ("Ta@8426", Static intersection_point@2746,
            Let ("Td@1229@4715", Get (Var Ta@8426, Var Ti@1227@4716),
            Let ("q2@4708", FAdd (Var Td@1228@4714, Var Td@1229@4715),
            Let ("Tb@1221@4709", Int 0,
            Let ("Ti@1220@4713", Int 0,
            Let ("Tb@1222@4710",
                 App
                  (Var check_all_inside@4681,
                   [Var q1@4707; Var q0@4706; Var and_group@4697;
                    Var Ti@1220@4713; Var q2@4708]),
            IfEq
             (Var Tb@1222@4710,
              Var Tb@1221@4709,
              Let ("Ti@1223@4712", Int 1,
              Let ("Ti@1224@4711", Add (Var iand_ofs@4696, Var Ti@1223@4712),
              App
               (Var shadow_check_and_group@4695,
                [Var Ti@1224@4711; Var and_group@4697]))),
              Int 1))))))))))))))))))))))))))))))))))))))))))))),
LetRec ("shadow_check_one_or_group@4739", ["ofs@4740"; "or_group@4741"],
        Let ("head@4742", Get (Var or_group@4741, Var ofs@4740),
        Let ("Ti@1207@4750", Int 1,
        Let ("Ti@1208@4743", Int -1,
        IfEq
         (Var head@4742,
          Var Ti@1208@4743,
          Int 0,
          Let ("Ta@8425", Static and_net@2741,
          Let ("and_group@4744", Get (Var Ta@8425, Var head@4742),
          Let ("Ti@1212@4749", Int 0,
          Let ("shadow_p@4745",
               App
                (Var shadow_check_and_group@4695,
                 [Var Ti@1212@4749; Var and_group@4744]),
          Let ("Tb@1209@4746", Int 0,
          IfEq
           (Var shadow_p@4745,
            Var Tb@1209@4746,
            Let ("Ti@1210@4748", Int 1,
            Let ("Ti@1211@4747", Add (Var ofs@4740, Var Ti@1210@4748),
            App
             (Var shadow_check_one_or_group@4739,
              [Var Ti@1211@4747; Var or_group@4741]))),
            Int 1)))))))))),
LetRec ("shadow_check_one_or_matrix@4751", ["ofs@4752"; "or_matrix@4753"],
        Let ("head@4754", Get (Var or_matrix@4753, Var ofs@4752),
        Let ("Ti@1206@4778", Int 0,
        Let ("range_primitive@4755", Get (Var head@4754, Var Ti@1206@4778),
        Let ("Ti@1185@4777", Int 1,
        Let ("Ti@1186@4756", Int -1,
        IfEq
         (Var range_primitive@4755,
          Var Ti@1186@4756,
          Int 0,
          Let ("Tb@1197@4757", Int 0,
          Let ("Ti@1187@4766", Int 99,
          Let ("Tb@1198@4758",
               IfEq
                (Var range_primitive@4755,
                 Var Ti@1187@4766,
                 Int 1,
                 Let ("Ta@8424", Static intersection_point@2746,
                 Let ("Tt@8423", Static light_dirvec@2762,
                 Let ("t@4767",
                      App
                       (Var solver_fast@4248,
                        [Var Tt@8423; Var range_primitive@4755; Var Ta@8424]),
                 Let ("Ti@1188@4768", Int 0,
                 IfEq
                  (Var t@4767,
                   Var Ti@1188@4768,
                   Int 0,
                   Let ("Tb@1192@4769", Int 0,
                   Let ("Ti@1189@4776", Int 0,
                   Let ("Ta@8422", Static solver_dist@2743,
                   Let ("Td@1190@4774", Get (Var Ta@8422, Var Ti@1189@4776),
                   Let ("Td@1191@4775", Float -0.100000,
                   Let ("Tb@1193@4770",
                        IfLE
                         (Var Td@1191@4775, Var Td@1190@4774, Int 0, Int 1),
                   IfEq
                    (Var Tb@1193@4770,
                     Var Tb@1192@4769,
                     Int 0,
                     Let ("Tb@1195@4771", Int 0,
                     Let ("Ti@1194@4773", Int 1,
                     Let ("Tb@1196@4772",
                          App
                           (Var shadow_check_one_or_group@4739,
                            [Var Ti@1194@4773; Var head@4754]),
                     IfEq (Var Tb@1196@4772, Var Tb@1195@4771, Int 0, Int 1))))))))))))))))),
          IfEq
           (Var Tb@1198@4758,
            Var Tb@1197@4757,
            Let ("Ti@1204@4765", Int 1,
            Let ("Ti@1205@4764", Add (Var ofs@4752, Var Ti@1204@4765),
            App
             (Var shadow_check_one_or_matrix@4751,
              [Var Ti@1205@4764; Var or_matrix@4753]))),
            Let ("Tb@1200@4759", Int 0,
            Let ("Ti@1199@4763", Int 1,
            Let ("Tb@1201@4760",
                 App
                  (Var shadow_check_one_or_group@4739,
                   [Var Ti@1199@4763; Var head@4754]),
            IfEq
             (Var Tb@1201@4760,
              Var Tb@1200@4759,
              Let ("Ti@1202@4762", Int 1,
              Let ("Ti@1203@4761", Add (Var ofs@4752, Var Ti@1202@4762),
              App
               (Var shadow_check_one_or_matrix@4751,
                [Var Ti@1203@4761; Var or_matrix@4753]))),
              Int 1)))))))))))))),
LetRec ("solve_each_element@4779",
        ["and_group@4781"; "iand_ofs@4780"; "dirvec@4782"],
        Let ("iobj@4783", Get (Var and_group@4781, Var iand_ofs@4780),
        Let ("Ti@1145@4833", Int 1,
        Let ("Ti@1146@4784", Int -1,
        IfEq
         (Var iobj@4783,
          Var Ti@1146@4784,
          (),
          Let ("Ta@8421", Static startp@2755,
          Let ("t0@4785",
               App
                (Var solver@4062,
                 [Var dirvec@4782; Var iobj@4783; Var Ta@8421]),
          Let ("Ti@1147@4786", Int 0,
          IfEq
           (Var t0@4785,
            Var Ti@1147@4786,
            Let ("Tb@1149@4828", Int 0,
            Let ("Ta@8420", Static objects@2736,
            Let ("Tt@1148@4832", Get (Var Ta@8420, Var iobj@4783),
            LetTuple (["xm_rot123@3115@7211"; "xm_color@3114@7210";
                       "xm_surfparams@3113@7209"; "m_invert@3112@7208";
                       "xm_xyz@3111@7207"; "xm_abc@3110@7206";
                       "xm_isrot@3109@7205"; "xm_surface@3108@7204";
                       "xm_shape@3107@7203"; "xm_tex@3106@7202";
                       "xm_ctbl@3116@7212"],
                      Var Tt@1148@4832,
            IfEq
             (Var m_invert@3112@7208,
              Var Tb@1149@4828,
              (),
              Let ("Ti@1151@4831", Int 1,
              Let ("Ti@1152@4830", Add (Var iand_ofs@4780, Var Ti@1151@4831),
              App
               (Var solve_each_element@4779,
                [Var and_group@4781; Var Ti@1152@4830; Var dirvec@4782])))))))),
            Let ("Ti@1184@4827", Int 0,
            Let ("Ta@8419", Static solver_dist@2743,
            Let ("t0p@4787", Get (Var Ta@8419, Var Ti@1184@4827),
            Let ("Tb@1156@4791", Int 0,
            Let ("Td@1155@4826", Float 0.000000,
            Let ("Tb@1157@4792",
                 IfLE (Var t0p@4787, Var Td@1155@4826, Int 0, Int 1),
            Let ("Tu@109@4788",
                 IfEq
                  (Var Tb@1157@4792,
                   Var Tb@1156@4791,
                   (),
                   Let ("Tb@1160@4793", Int 0,
                   Let ("Ti@1158@4825", Int 0,
                   Let ("Ta@8418", Static tmin@2745,
                   Let ("Td@1159@4824", Get (Var Ta@8418, Var Ti@1158@4825),
                   Let ("Tb@1161@4794",
                        IfLE (Var Td@1159@4824, Var t0p@4787, Int 0, Int 1),
                   IfEq
                    (Var Tb@1161@4794,
                     Var Tb@1160@4793,
                     (),
                     Let ("Td@1183@4823", Float 0.010000,
                     Let ("t@4795", FAdd (Var t0p@4787, Var Td@1183@4823),
                     Let ("Ti@1178@4822", Int 0,
                     Let ("Td@1179@4821",
                          Get (Var dirvec@4782, Var Ti@1178@4822),
                     Let ("Td@1181@4818",
                          FMul (Var Td@1179@4821, Var t@4795),
                     Let ("Ti@1180@4820", Int 0,
                     Let ("Ta@8417", Static startp@2755,
                     Let ("Td@1182@4819",
                          Get (Var Ta@8417, Var Ti@1180@4820),
                     Let ("q0@4796",
                          FAdd (Var Td@1181@4818, Var Td@1182@4819),
                     Let ("Ti@1173@4817", Int 1,
                     Let ("Td@1174@4816",
                          Get (Var dirvec@4782, Var Ti@1173@4817),
                     Let ("Td@1176@4813",
                          FMul (Var Td@1174@4816, Var t@4795),
                     Let ("Ti@1175@4815", Int 1,
                     Let ("Ta@8416", Static startp@2755,
                     Let ("Td@1177@4814",
                          Get (Var Ta@8416, Var Ti@1175@4815),
                     Let ("q1@4797",
                          FAdd (Var Td@1176@4813, Var Td@1177@4814),
                     Let ("Ti@1168@4812", Int 2,
                     Let ("Td@1169@4811",
                          Get (Var dirvec@4782, Var Ti@1168@4812),
                     Let ("Td@1171@4808",
                          FMul (Var Td@1169@4811, Var t@4795),
                     Let ("Ti@1170@4810", Int 2,
                     Let ("Ta@8415", Static startp@2755,
                     Let ("Td@1172@4809",
                          Get (Var Ta@8415, Var Ti@1170@4810),
                     Let ("q2@4798",
                          FAdd (Var Td@1171@4808, Var Td@1172@4809),
                     Let ("Tb@1163@4799", Int 0,
                     Let ("Ti@1162@4807", Int 0,
                     Let ("Tb@1164@4800",
                          App
                           (Var check_all_inside@4681,
                            [Var q1@4797; Var q0@4796; Var and_group@4781;
                             Var Ti@1162@4807; Var q2@4798]),
                     IfEq
                      (Var Tb@1164@4800,
                       Var Tb@1163@4799,
                       (),
                       Let ("Ti@1167@4806", Int 0,
                       Let ("Ta@8414", Static tmin@2745,
                       Let ("Tu@108@4801",
                            Put (Var Ta@8414, Var Ti@1167@4806, Var t@4795),
                       Let ("Ta@8413", Static intersection_point@2746,
                       Let ("Tu@107@4802",
                            App
                             (Var vecset@2786,
                              [Var q1@4797; Var q0@4796; Var Ta@8413;
                               Var q2@4798]),
                       Let ("Ti@1166@4805", Int 0,
                       Let ("Ta@8412", Static intersected_object_id@2747,
                       Let ("Tu@106@4803",
                            Put
                             (Var Ta@8412, Var Ti@1166@4805, Var iobj@4783),
                       Let ("Ti@1165@4804", Int 0,
                       Let ("Ta@8411", Static intsec_rectside@2744,
                       Put (Var Ta@8411, Var Ti@1165@4804, Var t0@4785))))))))))))))))))))))))))))))))))))))))))))),
            Let ("Ti@1153@4790", Int 1,
            Let ("Ti@1154@4789", Add (Var iand_ofs@4780, Var Ti@1153@4790),
            App
             (Var solve_each_element@4779,
              [Var and_group@4781; Var Ti@1154@4789; Var dirvec@4782])))))))))))))))))),
LetRec ("solve_one_or_network@4834",
        ["or_group@4836"; "ofs@4835"; "dirvec@4837"],
        Let ("head@4838", Get (Var or_group@4836, Var ofs@4835),
        Let ("Ti@1140@4845", Int 1,
        Let ("Ti@1141@4839", Int -1,
        IfEq
         (Var head@4838,
          Var Ti@1141@4839,
          (),
          Let ("Ta@8410", Static and_net@2741,
          Let ("and_group@4840", Get (Var Ta@8410, Var head@4838),
          Let ("Ti@1144@4844", Int 0,
          Let ("Tu@110@4841",
               App
                (Var solve_each_element@4779,
                 [Var and_group@4840; Var Ti@1144@4844; Var dirvec@4837]),
          Let ("Ti@1142@4843", Int 1,
          Let ("Ti@1143@4842", Add (Var ofs@4835, Var Ti@1142@4843),
          App
           (Var solve_one_or_network@4834,
            [Var or_group@4836; Var Ti@1143@4842; Var dirvec@4837]))))))))))),
LetRec ("trace_or_matrix@4846",
        ["or_network@4848"; "ofs@4847"; "dirvec@4849"],
        Let ("head@4850", Get (Var or_network@4848, Var ofs@4847),
        Let ("Ti@1139@4868", Int 0,
        Let ("range_primitive@4851", Get (Var head@4850, Var Ti@1139@4868),
        Let ("Ti@1126@4867", Int 1,
        Let ("Ti@1127@4852", Int -1,
        IfEq
         (Var range_primitive@4851,
          Var Ti@1127@4852,
          (),
          Let ("Ti@1130@4856", Int 99,
          Let ("Tu@111@4853",
               IfEq
                (Var range_primitive@4851,
                 Var Ti@1130@4856,
                 Let ("Ti@1138@4866", Int 1,
                 App
                  (Var solve_one_or_network@4834,
                   [Var head@4850; Var Ti@1138@4866; Var dirvec@4849])),
                 Let ("Ta@8409", Static startp@2755,
                 Let ("t@4857",
                      App
                       (Var solver@4062,
                        [Var dirvec@4849; Var range_primitive@4851;
                         Var Ta@8409]),
                 Let ("Ti@1131@4858", Int 0,
                 IfEq
                  (Var t@4857,
                   Var Ti@1131@4858,
                   (),
                   Let ("Ti@1137@4865", Int 0,
                   Let ("Ta@8408", Static solver_dist@2743,
                   Let ("tp@4859", Get (Var Ta@8408, Var Ti@1137@4865),
                   Let ("Tb@1134@4860", Int 0,
                   Let ("Ti@1132@4864", Int 0,
                   Let ("Ta@8407", Static tmin@2745,
                   Let ("Td@1133@4863", Get (Var Ta@8407, Var Ti@1132@4864),
                   Let ("Tb@1135@4861",
                        IfLE (Var Td@1133@4863, Var tp@4859, Int 0, Int 1),
                   IfEq
                    (Var Tb@1135@4861,
                     Var Tb@1134@4860,
                     (),
                     Let ("Ti@1136@4862", Int 1,
                     App
                      (Var solve_one_or_network@4834,
                       [Var head@4850; Var Ti@1136@4862; Var dirvec@4849])))))))))))))))),
          Let ("Ti@1128@4855", Int 1,
          Let ("Ti@1129@4854", Add (Var ofs@4847, Var Ti@1128@4855),
          App
           (Var trace_or_matrix@4846,
            [Var or_network@4848; Var Ti@1129@4854; Var dirvec@4849]))))))))))),
LetRec ("judge_intersection@4869", ["dirvec@4870"],
        Let ("Ti@1124@4882", Int 0,
        Let ("Td@1125@4883", Float 1000000000.000000,
        Let ("Ta@8406", Static tmin@2745,
        Let ("Tu@113@4871",
             Put (Var Ta@8406, Var Ti@1124@4882, Var Td@1125@4883),
        Let ("Ti@1122@4879", Int 0,
        Let ("Ti@1121@4881", Int 0,
        Let ("Ta@8405", Static or_net@2742,
        Let ("Ta@1123@4880", Get (Var Ta@8405, Var Ti@1121@4881),
        Let ("Tu@112@4872",
             App
              (Var trace_or_matrix@4846,
               [Var Ta@1123@4880; Var Ti@1122@4879; Var dirvec@4870]),
        Let ("Ti@1120@4878", Int 0,
        Let ("Ta@8404", Static tmin@2745,
        Let ("t@4873", Get (Var Ta@8404, Var Ti@1120@4878),
        Let ("Tb@1117@4874", Int 0,
        Let ("Td@1116@4877", Float -0.100000,
        Let ("Tb@1118@4875",
             IfLE (Var t@4873, Var Td@1116@4877, Int 0, Int 1),
        IfEq
         (Var Tb@1118@4875,
          Var Tb@1117@4874,
          Int 0,
          Let ("Td@1119@4876", Float 100000000.000000,
          IfLE (Var Td@1119@4876, Var t@4873, Int 0, Int 1)))))))))))))))))),
LetRec ("solve_each_element_fast@4884",
        ["and_group@4886"; "iand_ofs@4885"; "dirvec@4887"],
        LetTuple (["m_vec@3447@7200"; "xm_const@3448@7201"], Var dirvec@4887,
        Let ("iobj@4889", Get (Var and_group@4886, Var iand_ofs@4885),
        Let ("Ti@1076@4940", Int 1,
        Let ("Ti@1077@4890", Int -1,
        IfEq
         (Var iobj@4889,
          Var Ti@1077@4890,
          (),
          Let ("t0@4891",
               App (Var solver_fast2@4333, [Var iobj@4889; Var dirvec@4887]),
          Let ("Ti@1078@4892", Int 0,
          IfEq
           (Var t0@4891,
            Var Ti@1078@4892,
            Let ("Tb@1080@4935", Int 0,
            Let ("Ta@8403", Static objects@2736,
            Let ("Tt@1079@4939", Get (Var Ta@8403, Var iobj@4889),
            LetTuple (["xm_rot123@3115@7198"; "xm_color@3114@7197";
                       "xm_surfparams@3113@7196"; "m_invert@3112@7195";
                       "xm_xyz@3111@7194"; "xm_abc@3110@7193";
                       "xm_isrot@3109@7192"; "xm_surface@3108@7191";
                       "xm_shape@3107@7190"; "xm_tex@3106@7189";
                       "xm_ctbl@3116@7199"],
                      Var Tt@1079@4939,
            IfEq
             (Var m_invert@3112@7195,
              Var Tb@1080@4935,
              (),
              Let ("Ti@1082@4938", Int 1,
              Let ("Ti@1083@4937", Add (Var iand_ofs@4885, Var Ti@1082@4938),
              App
               (Var solve_each_element_fast@4884,
                [Var and_group@4886; Var Ti@1083@4937; Var dirvec@4887])))))))),
            Let ("Ti@1115@4934", Int 0,
            Let ("Ta@8402", Static solver_dist@2743,
            Let ("t0p@4893", Get (Var Ta@8402, Var Ti@1115@4934),
            Let ("Tb@1087@4897", Int 0,
            Let ("Td@1086@4933", Float 0.000000,
            Let ("Tb@1088@4898",
                 IfLE (Var t0p@4893, Var Td@1086@4933, Int 0, Int 1),
            Let ("Tu@118@4894",
                 IfEq
                  (Var Tb@1088@4898,
                   Var Tb@1087@4897,
                   (),
                   Let ("Tb@1091@4899", Int 0,
                   Let ("Ti@1089@4932", Int 0,
                   Let ("Ta@8401", Static tmin@2745,
                   Let ("Td@1090@4931", Get (Var Ta@8401, Var Ti@1089@4932),
                   Let ("Tb@1092@4900",
                        IfLE (Var Td@1090@4931, Var t0p@4893, Int 0, Int 1),
                   IfEq
                    (Var Tb@1092@4900,
                     Var Tb@1091@4899,
                     (),
                     Let ("Td@1114@4930", Float 0.010000,
                     Let ("t@4901", FAdd (Var t0p@4893, Var Td@1114@4930),
                     Let ("Ti@1109@4929", Int 0,
                     Let ("Td@1110@4928",
                          Get (Var m_vec@3447@7200, Var Ti@1109@4929),
                     Let ("Td@1112@4925",
                          FMul (Var Td@1110@4928, Var t@4901),
                     Let ("Ti@1111@4927", Int 0,
                     Let ("Ta@8400", Static startp_fast@2756,
                     Let ("Td@1113@4926",
                          Get (Var Ta@8400, Var Ti@1111@4927),
                     Let ("q0@4902",
                          FAdd (Var Td@1112@4925, Var Td@1113@4926),
                     Let ("Ti@1104@4924", Int 1,
                     Let ("Td@1105@4923",
                          Get (Var m_vec@3447@7200, Var Ti@1104@4924),
                     Let ("Td@1107@4920",
                          FMul (Var Td@1105@4923, Var t@4901),
                     Let ("Ti@1106@4922", Int 1,
                     Let ("Ta@8399", Static startp_fast@2756,
                     Let ("Td@1108@4921",
                          Get (Var Ta@8399, Var Ti@1106@4922),
                     Let ("q1@4903",
                          FAdd (Var Td@1107@4920, Var Td@1108@4921),
                     Let ("Ti@1099@4919", Int 2,
                     Let ("Td@1100@4918",
                          Get (Var m_vec@3447@7200, Var Ti@1099@4919),
                     Let ("Td@1102@4915",
                          FMul (Var Td@1100@4918, Var t@4901),
                     Let ("Ti@1101@4917", Int 2,
                     Let ("Ta@8398", Static startp_fast@2756,
                     Let ("Td@1103@4916",
                          Get (Var Ta@8398, Var Ti@1101@4917),
                     Let ("q2@4904",
                          FAdd (Var Td@1102@4915, Var Td@1103@4916),
                     Let ("Tb@1094@4905", Int 0,
                     Let ("Ti@1093@4914", Int 0,
                     Let ("Tb@1095@4906",
                          App
                           (Var check_all_inside@4681,
                            [Var q1@4903; Var q0@4902; Var and_group@4886;
                             Var Ti@1093@4914; Var q2@4904]),
                     IfEq
                      (Var Tb@1095@4906,
                       Var Tb@1094@4905,
                       (),
                       Let ("Ti@1098@4913", Int 0,
                       Let ("Ta@8397", Static tmin@2745,
                       Let ("Tu@117@4907",
                            Put (Var Ta@8397, Var Ti@1098@4913, Var t@4901),
                       Let ("Ta@8396", Static intersection_point@2746,
                       Let ("Tu@116@4908",
                            App
                             (Var vecset@2786,
                              [Var q1@4903; Var q0@4902; Var Ta@8396;
                               Var q2@4904]),
                       Let ("Ti@1097@4912", Int 0,
                       Let ("Ta@8395", Static intersected_object_id@2747,
                       Let ("Tu@115@4909",
                            Put
                             (Var Ta@8395, Var Ti@1097@4912, Var iobj@4889),
                       Let ("Ti@1096@4911", Int 0,
                       Let ("Ta@8394", Static intsec_rectside@2744,
                       Let ("Tu@114@4910",
                            Put (Var Ta@8394, Var Ti@1096@4911, Var t0@4891),
                       ()))))))))))))))))))))))))))))))))))))))))))))),
            Let ("Ti@1084@4896", Int 1,
            Let ("Ti@1085@4895", Add (Var iand_ofs@4885, Var Ti@1084@4896),
            App
             (Var solve_each_element_fast@4884,
              [Var and_group@4886; Var Ti@1085@4895; Var dirvec@4887])))))))))))))))))),
LetRec ("solve_one_or_network_fast@4941",
        ["or_group@4943"; "ofs@4942"; "dirvec@4944"],
        Let ("head@4945", Get (Var or_group@4943, Var ofs@4942),
        Let ("Ti@1071@4952", Int 1,
        Let ("Ti@1072@4946", Int -1,
        IfEq
         (Var head@4945,
          Var Ti@1072@4946,
          (),
          Let ("Ta@8393", Static and_net@2741,
          Let ("and_group@4947", Get (Var Ta@8393, Var head@4945),
          Let ("Ti@1075@4951", Int 0,
          Let ("Tu@119@4948",
               App
                (Var solve_each_element_fast@4884,
                 [Var and_group@4947; Var Ti@1075@4951; Var dirvec@4944]),
          Let ("Ti@1073@4950", Int 1,
          Let ("Ti@1074@4949", Add (Var ofs@4942, Var Ti@1073@4950),
          App
           (Var solve_one_or_network_fast@4941,
            [Var or_group@4943; Var Ti@1074@4949; Var dirvec@4944]))))))))))),
LetRec ("trace_or_matrix_fast@4953",
        ["or_network@4955"; "ofs@4954"; "dirvec@4956"],
        Let ("head@4957", Get (Var or_network@4955, Var ofs@4954),
        Let ("Ti@1070@4975", Int 0,
        Let ("range_primitive@4958", Get (Var head@4957, Var Ti@1070@4975),
        Let ("Ti@1057@4974", Int 1,
        Let ("Ti@1058@4959", Int -1,
        IfEq
         (Var range_primitive@4958,
          Var Ti@1058@4959,
          (),
          Let ("Ti@1061@4963", Int 99,
          Let ("Tu@120@4960",
               IfEq
                (Var range_primitive@4958,
                 Var Ti@1061@4963,
                 Let ("Ti@1069@4973", Int 1,
                 App
                  (Var solve_one_or_network_fast@4941,
                   [Var head@4957; Var Ti@1069@4973; Var dirvec@4956])),
                 Let ("t@4964",
                      App
                       (Var solver_fast2@4333,
                        [Var range_primitive@4958; Var dirvec@4956]),
                 Let ("Ti@1062@4965", Int 0,
                 IfEq
                  (Var t@4964,
                   Var Ti@1062@4965,
                   (),
                   Let ("Ti@1068@4972", Int 0,
                   Let ("Ta@8392", Static solver_dist@2743,
                   Let ("tp@4966", Get (Var Ta@8392, Var Ti@1068@4972),
                   Let ("Tb@1065@4967", Int 0,
                   Let ("Ti@1063@4971", Int 0,
                   Let ("Ta@8391", Static tmin@2745,
                   Let ("Td@1064@4970", Get (Var Ta@8391, Var Ti@1063@4971),
                   Let ("Tb@1066@4968",
                        IfLE (Var Td@1064@4970, Var tp@4966, Int 0, Int 1),
                   IfEq
                    (Var Tb@1066@4968,
                     Var Tb@1065@4967,
                     (),
                     Let ("Ti@1067@4969", Int 1,
                     App
                      (Var solve_one_or_network_fast@4941,
                       [Var head@4957; Var Ti@1067@4969; Var dirvec@4956]))))))))))))))),
          Let ("Ti@1059@4962", Int 1,
          Let ("Ti@1060@4961", Add (Var ofs@4954, Var Ti@1059@4962),
          App
           (Var trace_or_matrix_fast@4953,
            [Var or_network@4955; Var Ti@1060@4961; Var dirvec@4956]))))))))))),
LetRec ("judge_intersection_fast@4976", ["dirvec@4977"],
        Let ("Ti@1055@4989", Int 0,
        Let ("Td@1056@4990", Float 1000000000.000000,
        Let ("Ta@8390", Static tmin@2745,
        Let ("Tu@122@4978",
             Put (Var Ta@8390, Var Ti@1055@4989, Var Td@1056@4990),
        Let ("Ti@1053@4986", Int 0,
        Let ("Ti@1052@4988", Int 0,
        Let ("Ta@8389", Static or_net@2742,
        Let ("Ta@1054@4987", Get (Var Ta@8389, Var Ti@1052@4988),
        Let ("Tu@121@4979",
             App
              (Var trace_or_matrix_fast@4953,
               [Var Ta@1054@4987; Var Ti@1053@4986; Var dirvec@4977]),
        Let ("Ti@1051@4985", Int 0,
        Let ("Ta@8388", Static tmin@2745,
        Let ("t@4980", Get (Var Ta@8388, Var Ti@1051@4985),
        Let ("Tb@1048@4981", Int 0,
        Let ("Td@1047@4984", Float -0.100000,
        Let ("Tb@1049@4982",
             IfLE (Var t@4980, Var Td@1047@4984, Int 0, Int 1),
        IfEq
         (Var Tb@1049@4982,
          Var Tb@1048@4981,
          Int 0,
          Let ("Td@1050@4983", Float 100000000.000000,
          IfLE (Var Td@1050@4983, Var t@4980, Int 0, Int 1)))))))))))))))))),
LetRec ("get_nvector_rect@4991", ["dirvec@4992"],
        Let ("Ti@1046@5002", Int 0,
        Let ("Ta@8387", Static intsec_rectside@2744,
        Let ("rectside@4993", Get (Var Ta@8387, Var Ti@1046@5002),
        Let ("Td@2338@2806@7188", Float 0.000000,
        Let ("Ta@8386", Static nvector@2748,
        Let ("Tu@123@4994",
             App (Var vecfill@2796, [Var Ta@8386; Var Td@2338@2806@7188]),
        Let ("Ti@1039@5001", Int 1,
        Let ("Ti@1044@4995", Sub (Var rectside@4993, Var Ti@1039@5001),
        Let ("Ti@1040@5000", Int 1,
        Let ("Ti@1041@4999", Sub (Var rectside@4993, Var Ti@1040@5000),
        Let ("Td@1042@4998", Get (Var dirvec@4992, Var Ti@1041@4999),
        Let ("Td@1043@4997", App (Var sgn@2770, [Var Td@1042@4998]),
        Let ("Td@1045@4996", FNeg Var Td@1043@4997,
        Let ("Ta@8385", Static nvector@2748,
        Put (Var Ta@8385, Var Ti@1044@4995, Var Td@1045@4996))))))))))))))),
LetRec ("get_nvector_plane@5003", ["m@5004"],
        Let ("Ti@1037@5013", Int 0,
        LetTuple (["xm_rot123@3141@7185"; "xm_color@3140@7184";
                   "xm_surfparams@3139@7183"; "xm_invert@3138@7182";
                   "xm_xyz@3137@7181"; "m_abc@3136@7180";
                   "xm_isrot@3135@7179"; "xm_surface@3134@7178";
                   "xm_shape@3133@7177"; "xm_tex@3132@7176";
                   "xm_ctbl@3142@7186"],
                  Var m@5004,
        Let ("Ti@2134@3143@7187", Int 0,
        Let ("Td@1036@5015",
             Get (Var m_abc@3136@7180, Var Ti@2134@3143@7187),
        Let ("Td@1038@5014", FNeg Var Td@1036@5015,
        Let ("Ta@8384", Static nvector@2748,
        Let ("Tu@125@5005",
             Put (Var Ta@8384, Var Ti@1037@5013, Var Td@1038@5014),
        Let ("Ti@1034@5010", Int 1,
        LetTuple (["xm_rot123@3155@7173"; "xm_color@3154@7172";
                   "xm_surfparams@3153@7171"; "xm_invert@3152@7170";
                   "xm_xyz@3151@7169"; "m_abc@3150@7168";
                   "xm_isrot@3149@7167"; "xm_surface@3148@7166";
                   "xm_shape@3147@7165"; "xm_tex@3146@7164";
                   "xm_ctbl@3156@7174"],
                  Var m@5004,
        Let ("Ti@2133@3157@7175", Int 1,
        Let ("Td@1033@5012",
             Get (Var m_abc@3150@7168, Var Ti@2133@3157@7175),
        Let ("Td@1035@5011", FNeg Var Td@1033@5012,
        Let ("Ta@8383", Static nvector@2748,
        Let ("Tu@124@5006",
             Put (Var Ta@8383, Var Ti@1034@5010, Var Td@1035@5011),
        Let ("Ti@1031@5007", Int 2,
        LetTuple (["xm_rot123@3169@7161"; "xm_color@3168@7160";
                   "xm_surfparams@3167@7159"; "xm_invert@3166@7158";
                   "xm_xyz@3165@7157"; "m_abc@3164@7156";
                   "xm_isrot@3163@7155"; "xm_surface@3162@7154";
                   "xm_shape@3161@7153"; "xm_tex@3160@7152";
                   "xm_ctbl@3170@7162"],
                  Var m@5004,
        Let ("Ti@2132@3171@7163", Int 2,
        Let ("Td@1030@5009",
             Get (Var m_abc@3164@7156, Var Ti@2132@3171@7163),
        Let ("Td@1032@5008", FNeg Var Td@1030@5009,
        Let ("Ta@8382", Static nvector@2748,
        Put (Var Ta@8382, Var Ti@1031@5007, Var Td@1032@5008))))))))))))))))))))),
LetRec ("get_nvector_second@5016", ["m@5017"],
        Let ("Ti@1027@5070", Int 0,
        Let ("Ta@8381", Static intersection_point@2746,
        Let ("Td@1028@5068", Get (Var Ta@8381, Var Ti@1027@5070),
        LetTuple (["xm_rot123@3196@7149"; "xm_color@3195@7148";
                   "xm_surfparams@3194@7147"; "xm_invert@3193@7146";
                   "m_xyz@3192@7145"; "xm_abc@3191@7144";
                   "xm_isrot@3190@7143"; "xm_surface@3189@7142";
                   "xm_shape@3188@7141"; "xm_tex@3187@7140";
                   "xm_ctbl@3197@7150"],
                  Var m@5017,
        Let ("Ti@2131@3198@7151", Int 0,
        Let ("Td@1029@5069",
             Get (Var m_xyz@3192@7145, Var Ti@2131@3198@7151),
        Let ("p0@5018", FSub (Var Td@1028@5068, Var Td@1029@5069),
        Let ("Ti@1024@5067", Int 1,
        Let ("Ta@8380", Static intersection_point@2746,
        Let ("Td@1025@5065", Get (Var Ta@8380, Var Ti@1024@5067),
        LetTuple (["xm_rot123@3210@7137"; "xm_color@3209@7136";
                   "xm_surfparams@3208@7135"; "xm_invert@3207@7134";
                   "m_xyz@3206@7133"; "xm_abc@3205@7132";
                   "xm_isrot@3204@7131"; "xm_surface@3203@7130";
                   "xm_shape@3202@7129"; "xm_tex@3201@7128";
                   "xm_ctbl@3211@7138"],
                  Var m@5017,
        Let ("Ti@2130@3212@7139", Int 1,
        Let ("Td@1026@5066",
             Get (Var m_xyz@3206@7133, Var Ti@2130@3212@7139),
        Let ("p1@5019", FSub (Var Td@1025@5065, Var Td@1026@5066),
        Let ("Ti@1021@5064", Int 2,
        Let ("Ta@8379", Static intersection_point@2746,
        Let ("Td@1022@5062", Get (Var Ta@8379, Var Ti@1021@5064),
        LetTuple (["xm_rot123@3224@7125"; "xm_color@3223@7124";
                   "xm_surfparams@3222@7123"; "xm_invert@3221@7122";
                   "m_xyz@3220@7121"; "xm_abc@3219@7120";
                   "xm_isrot@3218@7119"; "xm_surface@3217@7118";
                   "xm_shape@3216@7117"; "xm_tex@3215@7116";
                   "xm_ctbl@3225@7126"],
                  Var m@5017,
        Let ("Ti@2129@3226@7127", Int 2,
        Let ("Td@1023@5063",
             Get (Var m_xyz@3220@7121, Var Ti@2129@3226@7127),
        Let ("p2@5020", FSub (Var Td@1022@5062, Var Td@1023@5063),
        LetTuple (["xm_rot123@3141@7113"; "xm_color@3140@7112";
                   "xm_surfparams@3139@7111"; "xm_invert@3138@7110";
                   "xm_xyz@3137@7109"; "m_abc@3136@7108";
                   "xm_isrot@3135@7107"; "xm_surface@3134@7106";
                   "xm_shape@3133@7105"; "xm_tex@3132@7104";
                   "xm_ctbl@3142@7114"],
                  Var m@5017,
        Let ("Ti@2134@3143@7115", Int 0,
        Let ("Td@1020@5061",
             Get (Var m_abc@3136@7108, Var Ti@2134@3143@7115),
        Let ("d0@5021", FMul (Var p0@5018, Var Td@1020@5061),
        LetTuple (["xm_rot123@3155@7101"; "xm_color@3154@7100";
                   "xm_surfparams@3153@7099"; "xm_invert@3152@7098";
                   "xm_xyz@3151@7097"; "m_abc@3150@7096";
                   "xm_isrot@3149@7095"; "xm_surface@3148@7094";
                   "xm_shape@3147@7093"; "xm_tex@3146@7092";
                   "xm_ctbl@3156@7102"],
                  Var m@5017,
        Let ("Ti@2133@3157@7103", Int 1,
        Let ("Td@1019@5060",
             Get (Var m_abc@3150@7096, Var Ti@2133@3157@7103),
        Let ("d1@5022", FMul (Var p1@5019, Var Td@1019@5060),
        LetTuple (["xm_rot123@3169@7089"; "xm_color@3168@7088";
                   "xm_surfparams@3167@7087"; "xm_invert@3166@7086";
                   "xm_xyz@3165@7085"; "m_abc@3164@7084";
                   "xm_isrot@3163@7083"; "xm_surface@3162@7082";
                   "xm_shape@3161@7081"; "xm_tex@3160@7080";
                   "xm_ctbl@3170@7090"],
                  Var m@5017,
        Let ("Ti@2132@3171@7091", Int 2,
        Let ("Td@1018@5059",
             Get (Var m_abc@3164@7084, Var Ti@2132@3171@7091),
        Let ("d2@5023", FMul (Var p2@5020, Var Td@1018@5059),
        Let ("Ti@989@5026", Int 0,
        LetTuple (["xm_rot123@3128@7078"; "xm_color@3127@7077";
                   "xm_surfparams@3126@7076"; "xm_invert@3125@7075";
                   "xm_xyz@3124@7074"; "xm_abc@3123@7073";
                   "m_isrot@3122@7072"; "xm_surface@3121@7071";
                   "xm_shape@3120@7070"; "xm_tex@3119@7069";
                   "xm_ctbl@3129@7079"],
                  Var m@5017,
        Let ("Tu@130@5024",
             IfEq
              (Var m_isrot@3122@7072,
               Var Ti@989@5026,
               Let ("Ti@1017@5058", Int 0,
               Let ("Ta@8378", Static nvector@2748,
               Let ("Tu@127@5054",
                    Put (Var Ta@8378, Var Ti@1017@5058, Var d0@5021),
               Let ("Ti@1016@5057", Int 1,
               Let ("Ta@8377", Static nvector@2748,
               Let ("Tu@126@5055",
                    Put (Var Ta@8377, Var Ti@1016@5057, Var d1@5022),
               Let ("Ti@1015@5056", Int 2,
               Let ("Ta@8376", Static nvector@2748,
               Put (Var Ta@8376, Var Ti@1015@5056, Var d2@5023))))))))),
               Let ("Ti@1013@5046", Int 0,
               LetTuple (["m_rot123@3336@7066"; "xm_color@3335@7065";
                          "xm_surfparams@3334@7064"; "xm_invert@3333@7063";
                          "xm_xyz@3332@7062"; "xm_abc@3331@7061";
                          "xm_isrot@3330@7060"; "xm_surface@3329@7059";
                          "xm_shape@3328@7058"; "xm_tex@3327@7057";
                          "xm_ctbl@3337@7067"],
                         Var m@5017,
               Let ("Ti@2121@3338@7068", Int 2,
               Let ("Td@1007@5053",
                    Get (Var m_rot123@3336@7066, Var Ti@2121@3338@7068),
               Let ("Td@1009@5050", FMul (Var p1@5019, Var Td@1007@5053),
               LetTuple (["m_rot123@3322@7054"; "xm_color@3321@7053";
                          "xm_surfparams@3320@7052"; "xm_invert@3319@7051";
                          "xm_xyz@3318@7050"; "xm_abc@3317@7049";
                          "xm_isrot@3316@7048"; "xm_surface@3315@7047";
                          "xm_shape@3314@7046"; "xm_tex@3313@7045";
                          "xm_ctbl@3323@7055"],
                         Var m@5017,
               Let ("Ti@2122@3324@7056", Int 1,
               Let ("Td@1008@5052",
                    Get (Var m_rot123@3322@7054, Var Ti@2122@3324@7056),
               Let ("Td@1010@5051", FMul (Var p2@5020, Var Td@1008@5052),
               Let ("Td@1011@5049",
                    FAdd (Var Td@1009@5050, Var Td@1010@5051),
               Let ("Td@2545@2566@7044", Float 0.500000,
               Let ("Td@1012@5048",
                    FMul (Var Td@1011@5049, Var Td@2545@2566@7044),
               Let ("Td@1014@5047", FAdd (Var d0@5021, Var Td@1012@5048),
               Let ("Ta@8375", Static nvector@2748,
               Let ("Tu@129@5028",
                    Put (Var Ta@8375, Var Ti@1013@5046, Var Td@1014@5047),
               Let ("Ti@1005@5038", Int 1,
               LetTuple (["m_rot123@3336@7041"; "xm_color@3335@7040";
                          "xm_surfparams@3334@7039"; "xm_invert@3333@7038";
                          "xm_xyz@3332@7037"; "xm_abc@3331@7036";
                          "xm_isrot@3330@7035"; "xm_surface@3329@7034";
                          "xm_shape@3328@7033"; "xm_tex@3327@7032";
                          "xm_ctbl@3337@7042"],
                         Var m@5017,
               Let ("Ti@2121@3338@7043", Int 2,
               Let ("Td@999@5045",
                    Get (Var m_rot123@3336@7041, Var Ti@2121@3338@7043),
               Let ("Td@1001@5042", FMul (Var p0@5018, Var Td@999@5045),
               LetTuple (["m_rot123@3308@7029"; "xm_color@3307@7028";
                          "xm_surfparams@3306@7027"; "xm_invert@3305@7026";
                          "xm_xyz@3304@7025"; "xm_abc@3303@7024";
                          "xm_isrot@3302@7023"; "xm_surface@3301@7022";
                          "xm_shape@3300@7021"; "xm_tex@3299@7020";
                          "xm_ctbl@3309@7030"],
                         Var m@5017,
               Let ("Ti@2123@3310@7031", Int 0,
               Let ("Td@1000@5044",
                    Get (Var m_rot123@3308@7029, Var Ti@2123@3310@7031),
               Let ("Td@1002@5043", FMul (Var p2@5020, Var Td@1000@5044),
               Let ("Td@1003@5041",
                    FAdd (Var Td@1001@5042, Var Td@1002@5043),
               Let ("Td@2545@2566@7019", Float 0.500000,
               Let ("Td@1004@5040",
                    FMul (Var Td@1003@5041, Var Td@2545@2566@7019),
               Let ("Td@1006@5039", FAdd (Var d1@5022, Var Td@1004@5040),
               Let ("Ta@8374", Static nvector@2748,
               Let ("Tu@128@5029",
                    Put (Var Ta@8374, Var Ti@1005@5038, Var Td@1006@5039),
               Let ("Ti@997@5030", Int 2,
               LetTuple (["m_rot123@3322@7016"; "xm_color@3321@7015";
                          "xm_surfparams@3320@7014"; "xm_invert@3319@7013";
                          "xm_xyz@3318@7012"; "xm_abc@3317@7011";
                          "xm_isrot@3316@7010"; "xm_surface@3315@7009";
                          "xm_shape@3314@7008"; "xm_tex@3313@7007";
                          "xm_ctbl@3323@7017"],
                         Var m@5017,
               Let ("Ti@2122@3324@7018", Int 1,
               Let ("Td@991@5037",
                    Get (Var m_rot123@3322@7016, Var Ti@2122@3324@7018),
               Let ("Td@993@5034", FMul (Var p0@5018, Var Td@991@5037),
               LetTuple (["m_rot123@3308@7004"; "xm_color@3307@7003";
                          "xm_surfparams@3306@7002"; "xm_invert@3305@7001";
                          "xm_xyz@3304@7000"; "xm_abc@3303@6999";
                          "xm_isrot@3302@6998"; "xm_surface@3301@6997";
                          "xm_shape@3300@6996"; "xm_tex@3299@6995";
                          "xm_ctbl@3309@7005"],
                         Var m@5017,
               Let ("Ti@2123@3310@7006", Int 0,
               Let ("Td@992@5036",
                    Get (Var m_rot123@3308@7004, Var Ti@2123@3310@7006),
               Let ("Td@994@5035", FMul (Var p1@5019, Var Td@992@5036),
               Let ("Td@995@5033", FAdd (Var Td@993@5034, Var Td@994@5035),
               Let ("Td@2545@2566@6994", Float 0.500000,
               Let ("Td@996@5032",
                    FMul (Var Td@995@5033, Var Td@2545@2566@6994),
               Let ("Td@998@5031", FAdd (Var d2@5023, Var Td@996@5032),
               Let ("Ta@8373", Static nvector@2748,
               Put (Var Ta@8373, Var Ti@997@5030, Var Td@998@5031)))))))))))))))))))))))))))))))))))))))))))))),
        LetTuple (["xm_rot123@3115@6992"; "xm_color@3114@6991";
                   "xm_surfparams@3113@6990"; "m_invert@3112@6989";
                   "xm_xyz@3111@6988"; "xm_abc@3110@6987";
                   "xm_isrot@3109@6986"; "xm_surface@3108@6985";
                   "xm_shape@3107@6984"; "xm_tex@3106@6983";
                   "xm_ctbl@3116@6993"],
                  Var m@5017,
        Let ("Ta@8372", Static nvector@2748,
        App (Var vecunit_sgn@2873, [Var Ta@8372; Var m_invert@3112@6989]))))))))))))))))))))))))))))))))))))))),
LetRec ("utexture@5077", ["m@5078"; "p@5079"],
        LetTuple (["xm_rot123@3076@6970"; "xm_color@3075@6969";
                   "xm_surfparams@3074@6968"; "xm_invert@3073@6967";
                   "xm_xyz@3072@6966"; "xm_abc@3071@6965";
                   "xm_isrot@3070@6964"; "xm_surface@3069@6963";
                   "xm_shape@3068@6962"; "m_tex@3067@6961";
                   "xm_ctbl@3077@6971"],
                  Var m@5078,
        Let ("Ti@984@5232", Int 0,
        LetTuple (["xm_rot123@3266@6958"; "m_color@3265@6957";
                   "xm_surfparams@3264@6956"; "xm_invert@3263@6955";
                   "xm_xyz@3262@6954"; "xm_abc@3261@6953";
                   "xm_isrot@3260@6952"; "m_surface@3259@6951";
                   "xm_shape@3258@6950"; "xm_tex@3257@6949";
                   "xm_ctbl@3267@6959"],
                  Var m@5078,
        Let ("Ti@2126@3268@6960", Int 0,
        Let ("Td@985@5233",
             Get (Var m_color@3265@6957, Var Ti@2126@3268@6960),
        Let ("Ta@8371", Static texture_color@2749,
        Let ("Tu@135@5081",
             Put (Var Ta@8371, Var Ti@984@5232, Var Td@985@5233),
        Let ("Ti@982@5230", Int 1,
        LetTuple (["xm_rot123@3280@6946"; "m_color@3279@6945";
                   "xm_surfparams@3278@6944"; "xm_invert@3277@6943";
                   "xm_xyz@3276@6942"; "xm_abc@3275@6941";
                   "xm_isrot@3274@6940"; "m_surface@3273@6939";
                   "xm_shape@3272@6938"; "xm_tex@3271@6937";
                   "xm_ctbl@3281@6947"],
                  Var m@5078,
        Let ("Ti@2125@3282@6948", Int 1,
        Let ("Td@983@5231",
             Get (Var m_color@3279@6945, Var Ti@2125@3282@6948),
        Let ("Ta@8370", Static texture_color@2749,
        Let ("Tu@134@5082",
             Put (Var Ta@8370, Var Ti@982@5230, Var Td@983@5231),
        Let ("Ti@980@5228", Int 2,
        LetTuple (["xm_rot123@3294@6934"; "m_color@3293@6933";
                   "xm_surfparams@3292@6932"; "xm_invert@3291@6931";
                   "xm_xyz@3290@6930"; "xm_abc@3289@6929";
                   "xm_isrot@3288@6928"; "m_surface@3287@6927";
                   "xm_shape@3286@6926"; "xm_tex@3285@6925";
                   "xm_ctbl@3295@6935"],
                  Var m@5078,
        Let ("Ti@2124@3296@6936", Int 2,
        Let ("Td@981@5229",
             Get (Var m_color@3293@6933, Var Ti@2124@3296@6936),
        Let ("Ta@8369", Static texture_color@2749,
        Let ("Tu@133@5083",
             Put (Var Ta@8369, Var Ti@980@5228, Var Td@981@5229),
        Let ("Ti@862@5084", Int 1,
        IfEq
         (Var m_tex@3067@6961,
          Var Ti@862@5084,
          Let ("Ti@977@5227", Int 0,
          Let ("Td@978@5225", Get (Var p@5079, Var Ti@977@5227),
          LetTuple (["xm_rot123@3196@6922"; "xm_color@3195@6921";
                     "xm_surfparams@3194@6920"; "xm_invert@3193@6919";
                     "m_xyz@3192@6918"; "xm_abc@3191@6917";
                     "xm_isrot@3190@6916"; "xm_surface@3189@6915";
                     "xm_shape@3188@6914"; "xm_tex@3187@6913";
                     "xm_ctbl@3197@6923"],
                    Var m@5078,
          Let ("Ti@2131@3198@6924", Int 0,
          Let ("Td@979@5226",
               Get (Var m_xyz@3192@6918, Var Ti@2131@3198@6924),
          Let ("w1@5199", FSub (Var Td@978@5225, Var Td@979@5226),
          Let ("Td@973@5224", Float 0.050000,
          Let ("Td@974@5223", FMul (Var w1@5199, Var Td@973@5224),
          Let ("Td@2542@2575@6910", Float 0.500000,
          Let ("Td@2543@2574@6911",
               FSub (Var Td@974@5223, Var Td@2542@2575@6910),
          Let ("Ti@2544@2573@6912", FtoI Var Td@2543@2574@6911,
          Let ("Td@975@5221", ItoF Var Ti@2544@2573@6912,
          Let ("Td@976@5222", Float 20.000000,
          Let ("d1@5218", FMul (Var Td@975@5221, Var Td@976@5222),
          Let ("Td@971@5219", FSub (Var w1@5199, Var d1@5218),
          Let ("Td@972@5220", Float 10.000000,
          Let ("flag1@5200",
               IfLE (Var Td@972@5220, Var Td@971@5219, Int 0, Int 1),
          Let ("Ti@968@5217", Int 2,
          Let ("Td@969@5215", Get (Var p@5079, Var Ti@968@5217),
          LetTuple (["xm_rot123@3224@6907"; "xm_color@3223@6906";
                     "xm_surfparams@3222@6905"; "xm_invert@3221@6904";
                     "m_xyz@3220@6903"; "xm_abc@3219@6902";
                     "xm_isrot@3218@6901"; "xm_surface@3217@6900";
                     "xm_shape@3216@6899"; "xm_tex@3215@6898";
                     "xm_ctbl@3225@6908"],
                    Var m@5078,
          Let ("Ti@2129@3226@6909", Int 2,
          Let ("Td@970@5216",
               Get (Var m_xyz@3220@6903, Var Ti@2129@3226@6909),
          Let ("w3@5201", FSub (Var Td@969@5215, Var Td@970@5216),
          Let ("Td@964@5214", Float 0.050000,
          Let ("Td@965@5213", FMul (Var w3@5201, Var Td@964@5214),
          Let ("Td@2542@2575@6895", Float 0.500000,
          Let ("Td@2543@2574@6896",
               FSub (Var Td@965@5213, Var Td@2542@2575@6895),
          Let ("Ti@2544@2573@6897", FtoI Var Td@2543@2574@6896,
          Let ("Td@966@5211", ItoF Var Ti@2544@2573@6897,
          Let ("Td@967@5212", Float 20.000000,
          Let ("d2@5208", FMul (Var Td@966@5211, Var Td@967@5212),
          Let ("Td@962@5209", FSub (Var w3@5201, Var d2@5208),
          Let ("Td@963@5210", Float 10.000000,
          Let ("flag2@5202",
               IfLE (Var Td@963@5210, Var Td@962@5209, Int 0, Int 1),
          Let ("Ti@960@5203", Int 1,
          Let ("Tb@957@5205", Int 0,
          Let ("Td@961@5204",
               IfEq
                (Var flag1@5200,
                 Var Tb@957@5205,
                 Let ("Tb@959@5207", Int 0,
                 IfEq
                  (Var flag2@5202,
                   Var Tb@959@5207,
                   Float 255.000000,
                   Float 0.000000)),
                 Let ("Tb@958@5206", Int 0,
                 IfEq
                  (Var flag2@5202,
                   Var Tb@958@5206,
                   Float 0.000000,
                   Float 255.000000))),
          Let ("Ta@8368", Static texture_color@2749,
          Put (Var Ta@8368, Var Ti@960@5203, Var Td@961@5204))))))))))))))))))))))))))))))))))))))),
          Let ("Ti@863@5085", Int 2,
          IfEq
           (Var m_tex@3067@6961,
            Var Ti@863@5085,
            Let ("Ti@952@5198", Int 1,
            Let ("Td@953@5196", Get (Var p@5079, Var Ti@952@5198),
            Let ("Td@954@5197", Float 0.250000,
            Let ("Td@955@5195", FMul (Var Td@953@5196, Var Td@954@5197),
            Let ("Td@956@5194", App (Var sin@2642, [Var Td@955@5195]),
            Let ("w2@5184", FMul (Var Td@956@5194, Var Td@956@5194),
            Let ("Ti@950@5191", Int 0,
            Let ("Td@949@5193", Float 255.000000,
            Let ("Td@951@5192", FMul (Var Td@949@5193, Var w2@5184),
            Let ("Ta@8367", Static texture_color@2749,
            Let ("Tu@131@5185",
                 Put (Var Ta@8367, Var Ti@950@5191, Var Td@951@5192),
            Let ("Ti@947@5186", Int 1,
            Let ("Td@945@5188", Float 255.000000,
            Let ("Td@944@5190", Float 1.000000,
            Let ("Td@946@5189", FSub (Var Td@944@5190, Var w2@5184),
            Let ("Td@948@5187", FMul (Var Td@945@5188, Var Td@946@5189),
            Let ("Ta@8366", Static texture_color@2749,
            Put (Var Ta@8366, Var Ti@947@5186, Var Td@948@5187)))))))))))))))))),
            Let ("Ti@864@5086", Int 3,
            IfEq
             (Var m_tex@3067@6961,
              Var Ti@864@5086,
              Let ("Ti@941@5183", Int 0,
              Let ("Td@942@5181", Get (Var p@5079, Var Ti@941@5183),
              LetTuple (["xm_rot123@3196@6892"; "xm_color@3195@6891";
                         "xm_surfparams@3194@6890"; "xm_invert@3193@6889";
                         "m_xyz@3192@6888"; "xm_abc@3191@6887";
                         "xm_isrot@3190@6886"; "xm_surface@3189@6885";
                         "xm_shape@3188@6884"; "xm_tex@3187@6883";
                         "xm_ctbl@3197@6893"],
                        Var m@5078,
              Let ("Ti@2131@3198@6894", Int 0,
              Let ("Td@943@5182",
                   Get (Var m_xyz@3192@6888, Var Ti@2131@3198@6894),
              Let ("w1@5155", FSub (Var Td@942@5181, Var Td@943@5182),
              Let ("Ti@938@5180", Int 2,
              Let ("Td@939@5178", Get (Var p@5079, Var Ti@938@5180),
              LetTuple (["xm_rot123@3224@6880"; "xm_color@3223@6879";
                         "xm_surfparams@3222@6878"; "xm_invert@3221@6877";
                         "m_xyz@3220@6876"; "xm_abc@3219@6875";
                         "xm_isrot@3218@6874"; "xm_surface@3217@6873";
                         "xm_shape@3216@6872"; "xm_tex@3215@6871";
                         "xm_ctbl@3225@6881"],
                        Var m@5078,
              Let ("Ti@2129@3226@6882", Int 2,
              Let ("Td@940@5179",
                   Get (Var m_xyz@3220@6876, Var Ti@2129@3226@6882),
              Let ("w3@5156", FSub (Var Td@939@5178, Var Td@940@5179),
              Let ("Td@933@5176", FMul (Var w1@5155, Var w1@5155),
              Let ("Td@934@5177", FMul (Var w3@5156, Var w3@5156),
              Let ("Td@935@5175", FAdd (Var Td@933@5176, Var Td@934@5177),
              Let ("Td@936@5173", Sqrt Var Td@935@5175,
              Let ("Td@937@5174", Float 10.000000,
              Let ("w2@5157", FDiv (Var Td@936@5173, Var Td@937@5174),
              Let ("Td@2542@2575@6868", Float 0.500000,
              Let ("Td@2543@2574@6869",
                   FSub (Var w2@5157, Var Td@2542@2575@6868),
              Let ("Ti@2544@2573@6870", FtoI Var Td@2543@2574@6869,
              Let ("Td@930@5172", ItoF Var Ti@2544@2573@6870,
              Let ("Td@931@5170", FSub (Var w2@5157, Var Td@930@5172),
              Let ("Td@932@5171", Float 3.141593,
              Let ("w4@5158", FMul (Var Td@931@5170, Var Td@932@5171),
              Let ("Td@929@5169", App (Var cos@2665, [Var w4@5158]),
              Let ("cws@5159", FMul (Var Td@929@5169, Var Td@929@5169),
              Let ("Ti@927@5166", Int 1,
              Let ("Td@926@5168", Float 255.000000,
              Let ("Td@928@5167", FMul (Var cws@5159, Var Td@926@5168),
              Let ("Ta@8365", Static texture_color@2749,
              Let ("Tu@132@5160",
                   Put (Var Ta@8365, Var Ti@927@5166, Var Td@928@5167),
              Let ("Ti@924@5161", Int 2,
              Let ("Td@921@5165", Float 1.000000,
              Let ("Td@922@5163", FSub (Var Td@921@5165, Var cws@5159),
              Let ("Td@923@5164", Float 255.000000,
              Let ("Td@925@5162", FMul (Var Td@922@5163, Var Td@923@5164),
              Let ("Ta@8364", Static texture_color@2749,
              Put (Var Ta@8364, Var Ti@924@5161, Var Td@925@5162))))))))))))))))))))))))))))))))))))))),
              Let ("Ti@865@5087", Int 4,
              IfEq
               (Var m_tex@3067@6961,
                Var Ti@865@5087,
                Let ("Ti@915@5154", Int 0,
                Let ("Td@916@5152", Get (Var p@5079, Var Ti@915@5154),
                LetTuple (["xm_rot123@3196@6865"; "xm_color@3195@6864";
                           "xm_surfparams@3194@6863"; "xm_invert@3193@6862";
                           "m_xyz@3192@6861"; "xm_abc@3191@6860";
                           "xm_isrot@3190@6859"; "xm_surface@3189@6858";
                           "xm_shape@3188@6857"; "xm_tex@3187@6856";
                           "xm_ctbl@3197@6866"],
                          Var m@5078,
                Let ("Ti@2131@3198@6867", Int 0,
                Let ("Td@917@5153",
                     Get (Var m_xyz@3192@6861, Var Ti@2131@3198@6867),
                Let ("Td@919@5149", FSub (Var Td@916@5152, Var Td@917@5153),
                LetTuple (["xm_rot123@3141@6853"; "xm_color@3140@6852";
                           "xm_surfparams@3139@6851"; "xm_invert@3138@6850";
                           "xm_xyz@3137@6849"; "m_abc@3136@6848";
                           "xm_isrot@3135@6847"; "xm_surface@3134@6846";
                           "xm_shape@3133@6845"; "xm_tex@3132@6844";
                           "xm_ctbl@3142@6854"],
                          Var m@5078,
                Let ("Ti@2134@3143@6855", Int 0,
                Let ("Td@918@5151",
                     Get (Var m_abc@3136@6848, Var Ti@2134@3143@6855),
                Let ("Td@920@5150", Sqrt Var Td@918@5151,
                Let ("w1@5088", FMul (Var Td@919@5149, Var Td@920@5150),
                Let ("Ti@909@5148", Int 2,
                Let ("Td@910@5146", Get (Var p@5079, Var Ti@909@5148),
                LetTuple (["xm_rot123@3224@6841"; "xm_color@3223@6840";
                           "xm_surfparams@3222@6839"; "xm_invert@3221@6838";
                           "m_xyz@3220@6837"; "xm_abc@3219@6836";
                           "xm_isrot@3218@6835"; "xm_surface@3217@6834";
                           "xm_shape@3216@6833"; "xm_tex@3215@6832";
                           "xm_ctbl@3225@6842"],
                          Var m@5078,
                Let ("Ti@2129@3226@6843", Int 2,
                Let ("Td@911@5147",
                     Get (Var m_xyz@3220@6837, Var Ti@2129@3226@6843),
                Let ("Td@913@5143", FSub (Var Td@910@5146, Var Td@911@5147),
                LetTuple (["xm_rot123@3169@6829"; "xm_color@3168@6828";
                           "xm_surfparams@3167@6827"; "xm_invert@3166@6826";
                           "xm_xyz@3165@6825"; "m_abc@3164@6824";
                           "xm_isrot@3163@6823"; "xm_surface@3162@6822";
                           "xm_shape@3161@6821"; "xm_tex@3160@6820";
                           "xm_ctbl@3170@6830"],
                          Var m@5078,
                Let ("Ti@2132@3171@6831", Int 2,
                Let ("Td@912@5145",
                     Get (Var m_abc@3164@6824, Var Ti@2132@3171@6831),
                Let ("Td@914@5144", Sqrt Var Td@912@5145,
                Let ("w3@5089", FMul (Var Td@913@5143, Var Td@914@5144),
                Let ("Td@907@5141", FMul (Var w1@5088, Var w1@5088),
                Let ("Td@908@5142", FMul (Var w3@5089, Var w3@5089),
                Let ("w4@5090", FAdd (Var Td@907@5141, Var Td@908@5142),
                Let ("Tb@900@5131", Int 0,
                Let ("Td@898@5139", FAbs Var w1@5088,
                Let ("Td@899@5140", Float 0.000100,
                Let ("Tb@901@5132",
                     IfLE (Var Td@899@5140, Var Td@898@5139, Int 0, Int 1),
                Let ("w7@5091",
                     IfEq
                      (Var Tb@901@5132,
                       Var Tb@900@5131,
                       Let ("Td@906@5138", FDiv (Var w3@5089, Var w1@5088),
                       Let ("w5@5133", FAbs Var Td@906@5138,
                       Let ("Td@902@5136",
                            App (Var atan@2712, [Var w5@5133]),
                       Let ("Td@903@5137", Float 30.000000,
                       Let ("Td@904@5134",
                            FMul (Var Td@902@5136, Var Td@903@5137),
                       Let ("Td@905@5135", Float 3.141593,
                       FDiv (Var Td@904@5134, Var Td@905@5135))))))),
                       Float 15.000000),
                Let ("Td@2542@2575@6817", Float 0.500000,
                Let ("Td@2543@2574@6818",
                     FSub (Var w7@5091, Var Td@2542@2575@6817),
                Let ("Ti@2544@2573@6819", FtoI Var Td@2543@2574@6818,
                Let ("Td@897@5130", ItoF Var Ti@2544@2573@6819,
                Let ("w9@5092", FSub (Var w7@5091, Var Td@897@5130),
                Let ("Ti@891@5129", Int 1,
                Let ("Td@892@5127", Get (Var p@5079, Var Ti@891@5129),
                LetTuple (["xm_rot123@3210@6814"; "xm_color@3209@6813";
                           "xm_surfparams@3208@6812"; "xm_invert@3207@6811";
                           "m_xyz@3206@6810"; "xm_abc@3205@6809";
                           "xm_isrot@3204@6808"; "xm_surface@3203@6807";
                           "xm_shape@3202@6806"; "xm_tex@3201@6805";
                           "xm_ctbl@3211@6815"],
                          Var m@5078,
                Let ("Ti@2130@3212@6816", Int 1,
                Let ("Td@893@5128",
                     Get (Var m_xyz@3206@6810, Var Ti@2130@3212@6816),
                Let ("Td@895@5124", FSub (Var Td@892@5127, Var Td@893@5128),
                LetTuple (["xm_rot123@3155@6802"; "xm_color@3154@6801";
                           "xm_surfparams@3153@6800"; "xm_invert@3152@6799";
                           "xm_xyz@3151@6798"; "m_abc@3150@6797";
                           "xm_isrot@3149@6796"; "xm_surface@3148@6795";
                           "xm_shape@3147@6794"; "xm_tex@3146@6793";
                           "xm_ctbl@3156@6803"],
                          Var m@5078,
                Let ("Ti@2133@3157@6804", Int 1,
                Let ("Td@894@5126",
                     Get (Var m_abc@3150@6797, Var Ti@2133@3157@6804),
                Let ("Td@896@5125", Sqrt Var Td@894@5126,
                Let ("w2@5093", FMul (Var Td@895@5124, Var Td@896@5125),
                Let ("Tb@884@5114", Int 0,
                Let ("Td@882@5122", FAbs Var w4@5090,
                Let ("Td@883@5123", Float 0.000100,
                Let ("Tb@885@5115",
                     IfLE (Var Td@883@5123, Var Td@882@5122, Int 0, Int 1),
                Let ("w8@5094",
                     IfEq
                      (Var Tb@885@5115,
                       Var Tb@884@5114,
                       Let ("Td@890@5121", FDiv (Var w2@5093, Var w4@5090),
                       Let ("w6@5116", FAbs Var Td@890@5121,
                       Let ("Td@886@5119",
                            App (Var atan@2712, [Var w6@5116]),
                       Let ("Td@887@5120", Float 30.000000,
                       Let ("Td@888@5117",
                            FMul (Var Td@886@5119, Var Td@887@5120),
                       Let ("Td@889@5118", Float 3.141593,
                       FDiv (Var Td@888@5117, Var Td@889@5118))))))),
                       Float 15.000000),
                Let ("Td@2542@2575@6790", Float 0.500000,
                Let ("Td@2543@2574@6791",
                     FSub (Var w8@5094, Var Td@2542@2575@6790),
                Let ("Ti@2544@2573@6792", FtoI Var Td@2543@2574@6791,
                Let ("Td@881@5113", ItoF Var Ti@2544@2573@6792,
                Let ("w10@5095", FSub (Var w8@5094, Var Td@881@5113),
                Let ("Td@875@5109", Float 0.150000,
                Let ("Td@873@5112", Float 0.500000,
                Let ("Td@874@5111", FSub (Var Td@873@5112, Var w9@5092),
                Let ("Td@876@5110", FMul (Var Td@874@5111, Var Td@874@5111),
                Let ("Td@879@5105", FSub (Var Td@875@5109, Var Td@876@5110),
                Let ("Td@877@5108", Float 0.500000,
                Let ("Td@878@5107", FSub (Var Td@877@5108, Var w10@5095),
                Let ("Td@880@5106", FMul (Var Td@878@5107, Var Td@878@5107),
                Let ("w11@5096", FSub (Var Td@879@5105, Var Td@880@5106),
                Let ("Tb@871@5103", Int 0,
                Let ("Td@2547@2560@6789", Float 0.000000,
                Let ("Tb@872@5104",
                     IfLE (Var Td@2547@2560@6789, Var w11@5096, Int 0, Int 1),
                Let ("w12@5097",
                     IfEq
                      (Var Tb@872@5104,
                       Var Tb@871@5103,
                       Var w11@5096,
                       Float 0.000000),
                Let ("Ti@869@5098", Int 2,
                Let ("Td@866@5102", Float 255.000000,
                Let ("Td@867@5100", FMul (Var Td@866@5102, Var w12@5097),
                Let ("Td@868@5101", Float 0.300000,
                Let ("Td@870@5099", FDiv (Var Td@867@5100, Var Td@868@5101),
                Let ("Ta@8363", Static texture_color@2749,
                Put (Var Ta@8363, Var Ti@869@5098, Var Td@870@5099)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))),
                ()))))))))))))))))))))))))))),
LetRec ("add_light@5234",
        ["hilight@5236"; "bright@5235"; "hilight_scale@5237"],
        Let ("Tb@860@5258", Int 0,
        Let ("Td@2548@2557@6788", Float 0.000000,
        Let ("Tb@861@5259",
             IfLE (Var bright@5235, Var Td@2548@2557@6788, Int 0, Int 1),
        Let ("Tu@138@5238",
             IfEq
              (Var Tb@861@5259,
               Var Tb@860@5258,
               (),
               Let ("Ta@8362", Static texture_color@2749,
               Let ("Ta@8361", Static rgb@2751,
               App
                (Var vecaccum@2942,
                 [Var bright@5235; Var Ta@8361; Var Ta@8362])))),
        Let ("Tb@844@5239", Int 0,
        Let ("Td@2548@2557@6787", Float 0.000000,
        Let ("Tb@845@5240",
             IfLE (Var hilight@5236, Var Td@2548@2557@6787, Int 0, Int 1),
        IfEq
         (Var Tb@845@5240,
          Var Tb@844@5239,
          (),
          Let ("Td@858@5257", FMul (Var hilight@5236, Var hilight@5236),
          Let ("Td@859@5256", FMul (Var Td@858@5257, Var Td@858@5257),
          Let ("ihl@5241", FMul (Var Td@859@5256, Var hilight_scale@5237),
          Let ("Ti@856@5252", Int 0,
          Let ("Ti@854@5255", Int 0,
          Let ("Ta@8360", Static rgb@2751,
          Let ("Td@855@5254", Get (Var Ta@8360, Var Ti@854@5255),
          Let ("Td@857@5253", FAdd (Var Td@855@5254, Var ihl@5241),
          Let ("Ta@8359", Static rgb@2751,
          Let ("Tu@137@5242",
               Put (Var Ta@8359, Var Ti@856@5252, Var Td@857@5253),
          Let ("Ti@852@5248", Int 1,
          Let ("Ti@850@5251", Int 1,
          Let ("Ta@8358", Static rgb@2751,
          Let ("Td@851@5250", Get (Var Ta@8358, Var Ti@850@5251),
          Let ("Td@853@5249", FAdd (Var Td@851@5250, Var ihl@5241),
          Let ("Ta@8357", Static rgb@2751,
          Let ("Tu@136@5243",
               Put (Var Ta@8357, Var Ti@852@5248, Var Td@853@5249),
          Let ("Ti@848@5244", Int 2,
          Let ("Ti@846@5247", Int 2,
          Let ("Ta@8356", Static rgb@2751,
          Let ("Td@847@5246", Get (Var Ta@8356, Var Ti@846@5247),
          Let ("Td@849@5245", FAdd (Var Td@847@5246, Var ihl@5241),
          Let ("Ta@8355", Static rgb@2751,
          Put (Var Ta@8355, Var Ti@848@5244, Var Td@849@5245)))))))))))))))))))))))))))))))),
LetRec ("trace_reflections@5260",
        ["hilight_scale@5263"; "diffuse@5262"; "index@5261"; "dirvec@5264"],
        Let ("Ti@823@5265", Int 0,
        IfLE
         (Var Ti@823@5265,
          Var index@5261,
          Let ("Ta@8354", Static reflections@2763,
          Let ("rinfo@5266", Get (Var Ta@8354, Var index@5261),
          LetTuple (["m_dvec@3461@6785"; "xm_sid@3460@6784";
                     "xm_br@3462@6786"],
                    Var rinfo@5266,
          Let ("Tb@826@5271", Int 0,
          Let ("Tb@827@5272",
               App (Var judge_intersection_fast@4976, [Var m_dvec@3461@6785]),
          Let ("Tu@139@5268",
               IfEq
                (Var Tb@827@5272,
                 Var Tb@826@5271,
                 (),
                 Let ("Ti@838@5293", Int 0,
                 Let ("Ta@8353", Static intersected_object_id@2747,
                 Let ("Ti@839@5291", Get (Var Ta@8353, Var Ti@838@5293),
                 Let ("Ti@840@5292", Int 4,
                 Let ("Ti@842@5288", Mul (Var Ti@839@5291, Var Ti@840@5292),
                 Let ("Ti@841@5290", Int 0,
                 Let ("Ta@8352", Static intsec_rectside@2744,
                 Let ("Ti@843@5289", Get (Var Ta@8352, Var Ti@841@5290),
                 Let ("surface_id@5273",
                      Add (Var Ti@842@5288, Var Ti@843@5289),
                 LetTuple (["xm_dvec@3456@6782"; "m_sid@3455@6781";
                            "xm_br@3457@6783"],
                           Var rinfo@5266,
                 IfEq
                  (Var surface_id@5273,
                   Var m_sid@3455@6781,
                   Let ("Tb@832@5275", Int 0,
                   Let ("Ti@830@5285", Int 0,
                   Let ("Ti@829@5287", Int 0,
                   Let ("Ta@8351", Static or_net@2742,
                   Let ("Ta@831@5286", Get (Var Ta@8351, Var Ti@829@5287),
                   Let ("Tb@833@5276",
                        App
                         (Var shadow_check_one_or_matrix@4751,
                          [Var Ti@830@5285; Var Ta@831@5286]),
                   IfEq
                    (Var Tb@833@5276,
                     Var Tb@832@5275,
                     LetTuple (["m_vec@3447@6779"; "xm_const@3448@6780"],
                               Var m_dvec@3461@6785,
                     Let ("Ta@8350", Static nvector@2748,
                     Let ("p@5277",
                          App
                           (Var veciprod@2908,
                            [Var Ta@8350; Var m_vec@3447@6779]),
                     LetTuple (["xm_dvec@3466@6777"; "xm_sid@3465@6776";
                                "m_br@3467@6778"],
                               Var rinfo@5266,
                     Let ("Td@836@5283",
                          FMul (Var m_br@3467@6778, Var diffuse@5262),
                     Let ("bright@5279", FMul (Var Td@836@5283, Var p@5277),
                     LetTuple (["m_vec@3447@6774"; "xm_const@3448@6775"],
                               Var m_dvec@3461@6785,
                     Let ("Td@835@5281",
                          App
                           (Var veciprod@2908,
                            [Var dirvec@5264; Var m_vec@3447@6774]),
                     Let ("hilight@5280",
                          FMul (Var m_br@3467@6778, Var Td@835@5281),
                     App
                      (Var add_light@5234,
                       [Var hilight@5280; Var bright@5279;
                        Var hilight_scale@5263])))))))))),
                     ()))))))),
                   ())))))))))))),
          Let ("Ti@824@5270", Int 1,
          Let ("Ti@825@5269", Sub (Var index@5261, Var Ti@824@5270),
          App
           (Var trace_reflections@5260,
            [Var hilight_scale@5263; Var diffuse@5262; Var Ti@825@5269;
             Var dirvec@5264]))))))))),
          ())),
LetRec ("trace_ray@5294",
        ["pixel@5298"; "dirvec@5297"; "energy@5296"; "nref@5295"; "dist@5299"],
        Let ("Ti@744@5300", Int 4,
        IfLE
         (Var nref@5295,
          Var Ti@744@5300,
          LetTuple (["xm_gid@3380@6772"; "xm_r20p@3379@6771";
                     "xm_engy@3378@6770"; "xm_cdif@3377@6769";
                     "m_sids@3376@6768"; "xm_isect_ps@3375@6767";
                     "xm_rgb@3374@6766"; "xm_nvectors@3381@6773"],
                    Var pixel@5298,
          Let ("Tb@745@5302", Int 0,
          Let ("Tb@746@5303",
               App (Var judge_intersection@4869, [Var dirvec@5297]),
          IfEq
           (Var Tb@746@5303,
            Var Tb@745@5302,
            Let ("Ti@821@5413", Int 1,
            Let ("Ti@822@5412", Int -1,
            Let ("Tu@158@5386",
                 Put (Var m_sids@3376@6768, Var nref@5295, Var Ti@822@5412),
            Let ("Ti@800@5387", Int 0,
            IfEq
             (Var nref@5295,
              Var Ti@800@5387,
              (),
              Let ("Ta@8349", Static light@2739,
              Let ("Td@820@5411",
                   App (Var veciprod@2908, [Var dirvec@5297; Var Ta@8349]),
              Let ("hl@5388", FNeg Var Td@820@5411,
              Let ("Tb@801@5389", Int 0,
              Let ("Td@2548@2557@6765", Float 0.000000,
              Let ("Tb@802@5390",
                   IfLE (Var hl@5388, Var Td@2548@2557@6765, Int 0, Int 1),
              IfEq
               (Var Tb@802@5390,
                Var Tb@801@5389,
                (),
                Let ("Td@815@5410", FMul (Var hl@5388, Var hl@5388),
                Let ("Td@816@5409", FMul (Var Td@815@5410, Var hl@5388),
                Let ("Td@818@5406", FMul (Var Td@816@5409, Var energy@5296),
                Let ("Ti@817@5408", Int 0,
                Let ("Ta@8348", Static beam@2740,
                Let ("Td@819@5407", Get (Var Ta@8348, Var Ti@817@5408),
                Let ("ihl@5391", FMul (Var Td@818@5406, Var Td@819@5407),
                Let ("Ti@813@5402", Int 0,
                Let ("Ti@811@5405", Int 0,
                Let ("Ta@8347", Static rgb@2751,
                Let ("Td@812@5404", Get (Var Ta@8347, Var Ti@811@5405),
                Let ("Td@814@5403", FAdd (Var Td@812@5404, Var ihl@5391),
                Let ("Ta@8346", Static rgb@2751,
                Let ("Tu@157@5392",
                     Put (Var Ta@8346, Var Ti@813@5402, Var Td@814@5403),
                Let ("Ti@809@5398", Int 1,
                Let ("Ti@807@5401", Int 1,
                Let ("Ta@8345", Static rgb@2751,
                Let ("Td@808@5400", Get (Var Ta@8345, Var Ti@807@5401),
                Let ("Td@810@5399", FAdd (Var Td@808@5400, Var ihl@5391),
                Let ("Ta@8344", Static rgb@2751,
                Let ("Tu@156@5393",
                     Put (Var Ta@8344, Var Ti@809@5398, Var Td@810@5399),
                Let ("Ti@805@5394", Int 2,
                Let ("Ti@803@5397", Int 2,
                Let ("Ta@8343", Static rgb@2751,
                Let ("Td@804@5396", Get (Var Ta@8343, Var Ti@803@5397),
                Let ("Td@806@5395", FAdd (Var Td@804@5396, Var ihl@5391),
                Let ("Ta@8342", Static rgb@2751,
                Put (Var Ta@8342, Var Ti@805@5394, Var Td@806@5395)))))))))))))))))))))))))))))))))))))))),
            Let ("Ti@799@5385", Int 0,
            Let ("Ta@8341", Static intersected_object_id@2747,
            Let ("obj_id@5304", Get (Var Ta@8341, Var Ti@799@5385),
            Let ("Ta@8340", Static objects@2736,
            Let ("obj@5305", Get (Var Ta@8340, Var obj_id@5304),
            LetTuple (["xm_rot123@3102@6763"; "xm_color@3101@6762";
                       "xm_surfparams@3100@6761"; "xm_invert@3099@6760";
                       "xm_xyz@3098@6759"; "xm_abc@3097@6758";
                       "xm_isrot@3096@6757"; "m_surface@3095@6756";
                       "xm_shape@3094@6755"; "xm_tex@3093@6754";
                       "xm_ctbl@3103@6764"],
                      Var obj@5305,
            LetTuple (["xm_rot123@3238@6751"; "xm_color@3237@6750";
                       "m_surfparams@3236@6749"; "xm_invert@3235@6748";
                       "xm_xyz@3234@6747"; "xm_abc@3233@6746";
                       "xm_isrot@3232@6745"; "xm_surface@3231@6744";
                       "xm_shape@3230@6743"; "xm_tex@3229@6742";
                       "xm_ctbl@3239@6752"],
                      Var obj@5305,
            Let ("Ti@2128@3240@6753", Int 0,
            Let ("Td@798@5384",
                 Get (Var m_surfparams@3236@6749, Var Ti@2128@3240@6753),
            Let ("diffuse@5307", FMul (Var Td@798@5384, Var energy@5296),
            LetTuple (["xm_rot123@3089@6981@8586"; "xm_color@3088@6980@8585";
                       "xm_surfparams@3087@6979@8584";
                       "xm_invert@3086@6978@8583"; "xm_xyz@3085@6977@8582";
                       "xm_abc@3084@6976@8581"; "xm_isrot@3083@6975@8580";
                       "xm_surface@3082@6974@8579"; "m_shape@3081@6973@8578";
                       "xm_tex@3080@6972@8577"; "xm_ctbl@3090@6982@8587"],
                      Var obj@5305,
            Let ("Ti@986@5075@8588", Int 1,
            Let ("Tu@155@5308",
                 IfEq
                  (Var m_shape@3081@6973@8578,
                   Var Ti@986@5075@8588,
                   App (Var get_nvector_rect@4991, [Var dirvec@5297]),
                   Let ("Ti@987@5076@8589", Int 2,
                   IfEq
                    (Var m_shape@3081@6973@8578,
                     Var Ti@987@5076@8589,
                     App (Var get_nvector_plane@5003, [Var obj@5305]),
                     App (Var get_nvector_second@5016, [Var obj@5305])))),
            Let ("Ta@8339", Static intersection_point@2746,
            Let ("Ta@8338", Static startp@2755,
            Let ("Tu@154@5309",
                 App (Var veccpy@2807, [Var Ta@8338; Var Ta@8339]),
            Let ("Ta@8337", Static intersection_point@2746,
            Let ("Tu@153@5310",
                 App (Var utexture@5077, [Var obj@5305; Var Ta@8337]),
            Let ("Ti@793@5383", Int 4,
            Let ("Ti@795@5380", Mul (Var obj_id@5304, Var Ti@793@5383),
            Let ("Ti@794@5382", Int 0,
            Let ("Ta@8336", Static intsec_rectside@2744,
            Let ("Ti@796@5381", Get (Var Ta@8336, Var Ti@794@5382),
            Let ("Ti@797@5379", Add (Var Ti@795@5380, Var Ti@796@5381),
            Let ("Tu@152@5311",
                 Put (Var m_sids@3376@6768, Var nref@5295, Var Ti@797@5379),
            LetTuple (["xm_gid@3370@6740"; "xm_r20p@3369@6739";
                       "xm_engy@3368@6738"; "xm_cdif@3367@6737";
                       "xm_sids@3366@6736"; "m_isect_ps@3365@6735";
                       "xm_rgb@3364@6734"; "xm_nvectors@3371@6741"],
                      Var pixel@5298,
            Let ("Ta@792@5378",
                 Get (Var m_isect_ps@3365@6735, Var nref@5295),
            Let ("Ta@8335", Static intersection_point@2746,
            Let ("Tu@151@5313",
                 App (Var veccpy@2807, [Var Ta@792@5378; Var Ta@8335]),
            LetTuple (["xm_gid@3390@6732"; "xm_r20p@3389@6731";
                       "xm_engy@3388@6730"; "m_cdif@3387@6729";
                       "xm_sids@3386@6728"; "xm_isect_ps@3385@6727";
                       "xm_rgb@3384@6726"; "xm_nvectors@3391@6733"],
                      Var pixel@5298,
            Let ("Tb@781@5359", Int 0,
            LetTuple (["xm_rot123@3238@6723"; "xm_color@3237@6722";
                       "m_surfparams@3236@6721"; "xm_invert@3235@6720";
                       "xm_xyz@3234@6719"; "xm_abc@3233@6718";
                       "xm_isrot@3232@6717"; "xm_surface@3231@6716";
                       "xm_shape@3230@6715"; "xm_tex@3229@6714";
                       "xm_ctbl@3239@6724"],
                      Var obj@5305,
            Let ("Ti@2128@3240@6725", Int 0,
            Let ("Td@779@5376",
                 Get (Var m_surfparams@3236@6721, Var Ti@2128@3240@6725),
            Let ("Td@780@5377", Float 0.500000,
            Let ("Tb@782@5360",
                 IfLE (Var Td@780@5377, Var Td@779@5376, Int 0, Int 1),
            Let ("Tu@150@5315",
                 IfEq
                  (Var Tb@782@5360,
                   Var Tb@781@5359,
                   Let ("Tb@791@5375", Int 1,
                   Let ("Tu@143@5362",
                        Put
                         (Var m_cdif@3387@6729,
                          Var nref@5295,
                          Var Tb@791@5375),
                   LetTuple (["xm_gid@3400@6712"; "xm_r20p@3399@6711";
                              "m_engy@3398@6710"; "xm_cdif@3397@6709";
                              "xm_sids@3396@6708"; "xm_isect_ps@3395@6707";
                              "xm_rgb@3394@6706"; "xm_nvectors@3401@6713"],
                             Var pixel@5298,
                   Let ("Ta@790@5374",
                        Get (Var m_engy@3398@6710, Var nref@5295),
                   Let ("Ta@8334", Static texture_color@2749,
                   Let ("Tu@142@5364",
                        App (Var veccpy@2807, [Var Ta@790@5374; Var Ta@8334]),
                   Let ("Ta@788@5369",
                        Get (Var m_engy@3398@6710, Var nref@5295),
                   Let ("Td@785@5372", Float 1.000000,
                   Let ("Td@786@5373", Float 256.000000,
                   Let ("Td@787@5371", Float 0.003906,
                   Let ("Td@789@5370",
                        FMul (Var Td@787@5371, Var diffuse@5307),
                   Let ("Tu@141@5365",
                        App
                         (Var vecscale@3015,
                          [Var Ta@788@5369; Var Td@789@5370]),
                   LetTuple (["xm_gid@3443@6704"; "xm_r20p@3442@6703";
                              "xm_engy@3441@6702"; "xm_cdif@3440@6701";
                              "xm_sids@3439@6700"; "xm_isect_ps@3438@6699";
                              "xm_rgb@3437@6698"; "m_nvectors@3444@6705"],
                             Var pixel@5298,
                   Let ("Ta@784@5368",
                        Get (Var m_nvectors@3444@6705, Var nref@5295),
                   Let ("Ta@8333", Static nvector@2748,
                   Let ("Tu@140@5367",
                        App (Var veccpy@2807, [Var Ta@784@5368; Var Ta@8333]),
                   ())))))))))))))))),
                   Let ("Tb@783@5361", Int 0,
                   Put (Var m_cdif@3387@6729, Var nref@5295, Var Tb@783@5361))),
            Let ("Td@777@5357", Float -2.000000,
            Let ("Ta@8332", Static nvector@2748,
            Let ("Td@778@5358",
                 App (Var veciprod@2908, [Var dirvec@5297; Var Ta@8332]),
            Let ("w@5316", FMul (Var Td@777@5357, Var Td@778@5358),
            Let ("Ta@8331", Static nvector@2748,
            Let ("Tu@149@5317",
                 App
                  (Var vecaccum@2942,
                   [Var w@5316; Var dirvec@5297; Var Ta@8331]),
            LetTuple (["xm_rot123@3252@6695"; "xm_color@3251@6694";
                       "m_surfparams@3250@6693"; "xm_invert@3249@6692";
                       "xm_xyz@3248@6691"; "xm_abc@3247@6690";
                       "xm_isrot@3246@6689"; "xm_surface@3245@6688";
                       "xm_shape@3244@6687"; "xm_tex@3243@6686";
                       "xm_ctbl@3253@6696"],
                      Var obj@5305,
            Let ("Ti@2127@3254@6697", Int 1,
            Let ("Td@776@5356",
                 Get (Var m_surfparams@3250@6693, Var Ti@2127@3254@6697),
            Let ("hilight_scale@5318",
                 FMul (Var energy@5296, Var Td@776@5356),
            Let ("Tb@771@5346", Int 0,
            Let ("Ti@769@5353", Int 0,
            Let ("Ti@768@5355", Int 0,
            Let ("Ta@8330", Static or_net@2742,
            Let ("Ta@770@5354", Get (Var Ta@8330, Var Ti@768@5355),
            Let ("Tb@772@5347",
                 App
                  (Var shadow_check_one_or_matrix@4751,
                   [Var Ti@769@5353; Var Ta@770@5354]),
            Let ("Tu@148@5319",
                 IfEq
                  (Var Tb@772@5347,
                   Var Tb@771@5346,
                   Let ("Ta@8329", Static light@2739,
                   Let ("Ta@8328", Static nvector@2748,
                   Let ("Td@774@5352",
                        App (Var veciprod@2908, [Var Ta@8328; Var Ta@8329]),
                   Let ("Td@775@5351", FNeg Var Td@774@5352,
                   Let ("bright@5348",
                        FMul (Var Td@775@5351, Var diffuse@5307),
                   Let ("Ta@8327", Static light@2739,
                   Let ("Td@773@5350",
                        App
                         (Var veciprod@2908, [Var dirvec@5297; Var Ta@8327]),
                   Let ("hilight@5349", FNeg Var Td@773@5350,
                   App
                    (Var add_light@5234,
                     [Var hilight@5349; Var bright@5348;
                      Var hilight_scale@5318]))))))))),
                   ()),
            Let ("Ta@8326", Static intersection_point@2746,
            Let ("Tu@147@5320", App (Var setup_startp@4616, [Var Ta@8326]),
            Let ("Ti@764@5345", Int 0,
            Let ("Ta@8325", Static n_reflections@2764,
            Let ("Ti@765@5343", Get (Var Ta@8325, Var Ti@764@5345),
            Let ("Ti@766@5344", Int 1,
            Let ("Ti@767@5342", Sub (Var Ti@765@5343, Var Ti@766@5344),
            Let ("Tu@146@5321",
                 App
                  (Var trace_reflections@5260,
                   [Var hilight_scale@5318; Var diffuse@5307;
                    Var Ti@767@5342; Var dirvec@5297]),
            Let ("Tb@748@5322", Int 0,
            Let ("Td@747@5341", Float 0.100000,
            Let ("Tb@749@5323",
                 IfLE (Var energy@5296, Var Td@747@5341, Int 0, Int 1),
            IfEq
             (Var Tb@749@5323,
              Var Tb@748@5322,
              (),
              Let ("Ti@759@5336", Int 4,
              Let ("Tu@145@5324",
                   IfLE
                    (Var Ti@759@5336,
                     Var nref@5295,
                     (),
                     Let ("Ti@760@5340", Int 1,
                     Let ("Ti@762@5337",
                          Add (Var nref@5295, Var Ti@760@5340),
                     Let ("Ti@761@5339", Int 1,
                     Let ("Ti@763@5338", Int -1,
                     Put
                      (Var m_sids@3376@6768,
                       Var Ti@762@5337,
                       Var Ti@763@5338)))))),
              Let ("Ti@750@5326", Int 2,
              Let ("Tu@144@5325",
                   IfEq
                    (Var m_surface@3095@6756,
                     Var Ti@750@5326,
                     Let ("Td@756@5334", Float 1.000000,
                     LetTuple (["xm_rot123@3238@6683"; "xm_color@3237@6682";
                                "m_surfparams@3236@6681";
                                "xm_invert@3235@6680"; "xm_xyz@3234@6679";
                                "xm_abc@3233@6678"; "xm_isrot@3232@6677";
                                "xm_surface@3231@6676"; "xm_shape@3230@6675";
                                "xm_tex@3229@6674"; "xm_ctbl@3239@6684"],
                               Var obj@5305,
                     Let ("Ti@2128@3240@6685", Int 0,
                     Let ("Td@757@5335",
                          Get
                           (Var m_surfparams@3236@6681,
                            Var Ti@2128@3240@6685),
                     Let ("Td@758@5333",
                          FSub (Var Td@756@5334, Var Td@757@5335),
                     Let ("energy2@5327",
                          FMul (Var energy@5296, Var Td@758@5333),
                     Let ("Ti@751@5332", Int 1,
                     Let ("Ti@754@5328",
                          Add (Var nref@5295, Var Ti@751@5332),
                     Let ("Ti@752@5331", Int 0,
                     Let ("Ta@8324", Static tmin@2745,
                     Let ("Td@753@5330", Get (Var Ta@8324, Var Ti@752@5331),
                     Let ("Td@755@5329",
                          FAdd (Var dist@5299, Var Td@753@5330),
                     App
                      (Var trace_ray@5294,
                       [Var pixel@5298; Var dirvec@5297; Var energy2@5327;
                        Var Ti@754@5328; Var Td@755@5329]))))))))))))),
                     ()),
              ())))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))),
          ())),
LetRec ("trace_diffuse_ray@5414", ["dirvec@5415"; "energy@5416"],
        Let ("Tb@728@5417", Int 0,
        Let ("Tb@729@5418",
             App (Var judge_intersection_fast@4976, [Var dirvec@5415]),
        IfEq
         (Var Tb@729@5418,
          Var Tb@728@5417,
          (),
          Let ("Ti@742@5437", Int 0,
          Let ("Ta@8323", Static intersected_object_id@2747,
          Let ("Ti@743@5436", Get (Var Ta@8323, Var Ti@742@5437),
          Let ("Ta@8322", Static objects@2736,
          Let ("obj@5419", Get (Var Ta@8322, Var Ti@743@5436),
          LetTuple (["m_vec@3447@6672"; "xm_const@3448@6673"],
                    Var dirvec@5415,
          LetTuple (["xm_rot123@3089@6981@8573"; "xm_color@3088@6980@8572";
                     "xm_surfparams@3087@6979@8571";
                     "xm_invert@3086@6978@8570"; "xm_xyz@3085@6977@8569";
                     "xm_abc@3084@6976@8568"; "xm_isrot@3083@6975@8567";
                     "xm_surface@3082@6974@8566"; "m_shape@3081@6973@8565";
                     "xm_tex@3080@6972@8564"; "xm_ctbl@3090@6982@8574"],
                    Var obj@5419,
          Let ("Ti@986@5075@8575", Int 1,
          Let ("Tu@160@5420",
               IfEq
                (Var m_shape@3081@6973@8565,
                 Var Ti@986@5075@8575,
                 App (Var get_nvector_rect@4991, [Var m_vec@3447@6672]),
                 Let ("Ti@987@5076@8576", Int 2,
                 IfEq
                  (Var m_shape@3081@6973@8565,
                   Var Ti@987@5076@8576,
                   App (Var get_nvector_plane@5003, [Var obj@5419]),
                   App (Var get_nvector_second@5016, [Var obj@5419])))),
          Let ("Ta@8321", Static intersection_point@2746,
          Let ("Tu@159@5421",
               App (Var utexture@5077, [Var obj@5419; Var Ta@8321]),
          Let ("Tb@733@5422", Int 0,
          Let ("Ti@731@5432", Int 0,
          Let ("Ti@730@5434", Int 0,
          Let ("Ta@8320", Static or_net@2742,
          Let ("Ta@732@5433", Get (Var Ta@8320, Var Ti@730@5434),
          Let ("Tb@734@5423",
               App
                (Var shadow_check_one_or_matrix@4751,
                 [Var Ti@731@5432; Var Ta@732@5433]),
          IfEq
           (Var Tb@734@5423,
            Var Tb@733@5422,
            Let ("Ta@8319", Static light@2739,
            Let ("Ta@8318", Static nvector@2748,
            Let ("Td@740@5431",
                 App (Var veciprod@2908, [Var Ta@8318; Var Ta@8319]),
            Let ("br@5424", FNeg Var Td@740@5431,
            Let ("Tb@738@5429", Int 0,
            Let ("Td@2548@2557@6671", Float 0.000000,
            Let ("Tb@739@5430",
                 IfLE (Var br@5424, Var Td@2548@2557@6671, Int 0, Int 1),
            Let ("bright@5425",
                 IfEq
                  (Var Tb@739@5430,
                   Var Tb@738@5429,
                   Float 0.000000,
                   Var br@5424),
            Let ("Td@735@5427", FMul (Var energy@5416, Var bright@5425),
            LetTuple (["xm_rot123@3238@6668"; "xm_color@3237@6667";
                       "m_surfparams@3236@6666"; "xm_invert@3235@6665";
                       "xm_xyz@3234@6664"; "xm_abc@3233@6663";
                       "xm_isrot@3232@6662"; "xm_surface@3231@6661";
                       "xm_shape@3230@6660"; "xm_tex@3229@6659";
                       "xm_ctbl@3239@6669"],
                      Var obj@5419,
            Let ("Ti@2128@3240@6670", Int 0,
            Let ("Td@736@5428",
                 Get (Var m_surfparams@3236@6666, Var Ti@2128@3240@6670),
            Let ("Td@737@5426", FMul (Var Td@735@5427, Var Td@736@5428),
            Let ("Ta@8317", Static texture_color@2749,
            Let ("Ta@8316", Static diffuse_ray@2750,
            App
             (Var vecaccum@2942, [Var Td@737@5426; Var Ta@8316; Var Ta@8317])))))))))))))))),
            ()))))))))))))))))))))),
LetRec ("iter_trace_diffuse_rays@5438",
        ["org@5441"; "nvector@5440"; "dirvec_group@5439"; "index@5442"],
        Let ("Ti@713@5443", Int 0,
        IfLE
         (Var Ti@713@5443,
          Var index@5442,
          Let ("Tt@726@5459", Get (Var dirvec_group@5439, Var index@5442),
          LetTuple (["m_vec@3447@6657"; "xm_const@3448@6658"],
                    Var Tt@726@5459,
          Let ("p@5444",
               App
                (Var veciprod@2908, [Var m_vec@3447@6657; Var nvector@5440]),
          Let ("Tb@716@5448", Int 0,
          Let ("Td@2547@2560@6656", Float 0.000000,
          Let ("Tb@717@5449",
               IfLE (Var Td@2547@2560@6656, Var p@5444, Int 0, Int 1),
          Let ("Tu@161@5445",
               IfEq
                (Var Tb@717@5449,
                 Var Tb@716@5448,
                 Let ("Tt@724@5455",
                      Get (Var dirvec_group@5439, Var index@5442),
                 Let ("Td@723@5457", Float 150.000000,
                 Let ("Td@725@5456", FDiv (Var p@5444, Var Td@723@5457),
                 App
                  (Var trace_diffuse_ray@5414,
                   [Var Tt@724@5455; Var Td@725@5456])))),
                 Let ("Ti@718@5454", Int 1,
                 Let ("Ti@719@5453", Add (Var index@5442, Var Ti@718@5454),
                 Let ("Tt@721@5450",
                      Get (Var dirvec_group@5439, Var Ti@719@5453),
                 Let ("Td@720@5452", Float -150.000000,
                 Let ("Td@722@5451", FDiv (Var p@5444, Var Td@720@5452),
                 App
                  (Var trace_diffuse_ray@5414,
                   [Var Tt@721@5450; Var Td@722@5451]))))))),
          Let ("Ti@714@5447", Int 2,
          Let ("Ti@715@5446", Sub (Var index@5442, Var Ti@714@5447),
          App
           (Var iter_trace_diffuse_rays@5438,
            [Var org@5441; Var nvector@5440; Var dirvec_group@5439;
             Var Ti@715@5446])))))))))),
          ())),
LetRec ("trace_diffuse_ray_80percent@5466",
        ["nvector@5468"; "group_id@5467"; "org@5469"],
        Let ("Ti@709@5486", Int 0,
        Let ("Tu@166@5470",
             IfEq
              (Var group_id@5467,
               Var Ti@709@5486,
               (),
               Let ("Ti@710@5488", Int 0,
               Let ("Ta@8315", Static dirvecs@2761,
               Let ("Ta@711@5487", Get (Var Ta@8315, Var Ti@710@5488),
               Let ("Tu@162@5464@6654",
                    App (Var setup_startp@4616, [Var org@5469]),
               Let ("Ti@712@5465@6655", Int 118,
               App
                (Var iter_trace_diffuse_rays@5438,
                 [Var org@5469; Var nvector@5468; Var Ta@711@5487;
                  Var Ti@712@5465@6655]))))))),
        Let ("Ti@706@5483", Int 1,
        Let ("Tu@165@5471",
             IfEq
              (Var group_id@5467,
               Var Ti@706@5483,
               (),
               Let ("Ti@707@5485", Int 1,
               Let ("Ta@8314", Static dirvecs@2761,
               Let ("Ta@708@5484", Get (Var Ta@8314, Var Ti@707@5485),
               Let ("Tu@162@5464@6652",
                    App (Var setup_startp@4616, [Var org@5469]),
               Let ("Ti@712@5465@6653", Int 118,
               App
                (Var iter_trace_diffuse_rays@5438,
                 [Var org@5469; Var nvector@5468; Var Ta@708@5484;
                  Var Ti@712@5465@6653]))))))),
        Let ("Ti@703@5480", Int 2,
        Let ("Tu@164@5472",
             IfEq
              (Var group_id@5467,
               Var Ti@703@5480,
               (),
               Let ("Ti@704@5482", Int 2,
               Let ("Ta@8313", Static dirvecs@2761,
               Let ("Ta@705@5481", Get (Var Ta@8313, Var Ti@704@5482),
               Let ("Tu@162@5464@6650",
                    App (Var setup_startp@4616, [Var org@5469]),
               Let ("Ti@712@5465@6651", Int 118,
               App
                (Var iter_trace_diffuse_rays@5438,
                 [Var org@5469; Var nvector@5468; Var Ta@705@5481;
                  Var Ti@712@5465@6651]))))))),
        Let ("Ti@700@5477", Int 3,
        Let ("Tu@163@5473",
             IfEq
              (Var group_id@5467,
               Var Ti@700@5477,
               (),
               Let ("Ti@701@5479", Int 3,
               Let ("Ta@8312", Static dirvecs@2761,
               Let ("Ta@702@5478", Get (Var Ta@8312, Var Ti@701@5479),
               Let ("Tu@162@5464@6648",
                    App (Var setup_startp@4616, [Var org@5469]),
               Let ("Ti@712@5465@6649", Int 118,
               App
                (Var iter_trace_diffuse_rays@5438,
                 [Var org@5469; Var nvector@5468; Var Ta@702@5478;
                  Var Ti@712@5465@6649]))))))),
        Let ("Ti@697@5474", Int 4,
        IfEq
         (Var group_id@5467,
          Var Ti@697@5474,
          (),
          Let ("Ti@698@5476", Int 4,
          Let ("Ta@8311", Static dirvecs@2761,
          Let ("Ta@699@5475", Get (Var Ta@8311, Var Ti@698@5476),
          Let ("Tu@162@5464@6646",
               App (Var setup_startp@4616, [Var org@5469]),
          Let ("Ti@712@5465@6647", Int 118,
          App
           (Var iter_trace_diffuse_rays@5438,
            [Var org@5469; Var nvector@5468; Var Ta@699@5475;
             Var Ti@712@5465@6647])))))))))))))))),
LetRec ("calc_diffuse_using_1point@5489", ["pixel@5490"; "nref@5491"],
        LetTuple (["xm_gid@3410@6644"; "m_r20p@3409@6643";
                   "xm_engy@3408@6642"; "xm_cdif@3407@6641";
                   "xm_sids@3406@6640"; "xm_isect_ps@3405@6639";
                   "xm_rgb@3404@6638"; "xm_nvectors@3411@6645"],
                  Var pixel@5490,
        LetTuple (["xm_gid@3443@6636"; "xm_r20p@3442@6635";
                   "xm_engy@3441@6634"; "xm_cdif@3440@6633";
                   "xm_sids@3439@6632"; "xm_isect_ps@3438@6631";
                   "xm_rgb@3437@6630"; "m_nvectors@3444@6637"],
                  Var pixel@5490,
        LetTuple (["xm_gid@3370@6628"; "xm_r20p@3369@6627";
                   "xm_engy@3368@6626"; "xm_cdif@3367@6625";
                   "xm_sids@3366@6624"; "m_isect_ps@3365@6623";
                   "xm_rgb@3364@6622"; "xm_nvectors@3371@6629"],
                  Var pixel@5490,
        LetTuple (["xm_gid@3400@6620"; "xm_r20p@3399@6619";
                   "m_engy@3398@6618"; "xm_cdif@3397@6617";
                   "xm_sids@3396@6616"; "xm_isect_ps@3395@6615";
                   "xm_rgb@3394@6614"; "xm_nvectors@3401@6621"],
                  Var pixel@5490,
        Let ("Ta@696@5502", Get (Var m_r20p@3409@6643, Var nref@5491),
        Let ("Ta@8310", Static diffuse_ray@2750,
        Let ("Tu@168@5496",
             App (Var veccpy@2807, [Var Ta@8310; Var Ta@696@5502]),
        LetTuple (["m_gid@3420@6611"; "xm_r20p@3419@6610";
                   "xm_engy@3418@6609"; "xm_cdif@3417@6608";
                   "xm_sids@3416@6607"; "xm_isect_ps@3415@6606";
                   "xm_rgb@3414@6605"; "xm_nvectors@3421@6612"],
                  Var pixel@5490,
        Let ("Ti@2120@3422@6613", Int 0,
        Let ("Ti@693@5499", Get (Var m_gid@3420@6611, Var Ti@2120@3422@6613),
        Let ("Ta@694@5500", Get (Var m_nvectors@3444@6637, Var nref@5491),
        Let ("Ta@695@5501", Get (Var m_isect_ps@3365@6623, Var nref@5491),
        Let ("Tu@167@5497",
             App
              (Var trace_diffuse_ray_80percent@5466,
               [Var Ta@694@5500; Var Ti@693@5499; Var Ta@695@5501]),
        Let ("Ta@692@5498", Get (Var m_engy@3398@6618, Var nref@5491),
        Let ("Ta@8309", Static diffuse_ray@2750,
        Let ("Ta@8308", Static rgb@2751,
        App (Var vecaccumv@3032, [Var Ta@692@5498; Var Ta@8308; Var Ta@8309]))))))))))))))))),
LetRec ("calc_diffuse_using_5points@5503",
        ["next@5507"; "cur@5506"; "prev@5505"; "x@5504"; "nref@5508"],
        Let ("Tt@691@5535", Get (Var prev@5505, Var x@5504),
        LetTuple (["xm_gid@3410@6603"; "m_r20p@3409@6602";
                   "xm_engy@3408@6601"; "xm_cdif@3407@6600";
                   "xm_sids@3406@6599"; "xm_isect_ps@3405@6598";
                   "xm_rgb@3404@6597"; "xm_nvectors@3411@6604"],
                  Var Tt@691@5535,
        Let ("Ti@688@5534", Int 1,
        Let ("Ti@689@5533", Sub (Var x@5504, Var Ti@688@5534),
        Let ("Tt@690@5532", Get (Var cur@5506, Var Ti@689@5533),
        LetTuple (["xm_gid@3410@6595"; "m_r20p@3409@6594";
                   "xm_engy@3408@6593"; "xm_cdif@3407@6592";
                   "xm_sids@3406@6591"; "xm_isect_ps@3405@6590";
                   "xm_rgb@3404@6589"; "xm_nvectors@3411@6596"],
                  Var Tt@690@5532,
        Let ("Tt@687@5531", Get (Var cur@5506, Var x@5504),
        LetTuple (["xm_gid@3410@6587"; "m_r20p@3409@6586";
                   "xm_engy@3408@6585"; "xm_cdif@3407@6584";
                   "xm_sids@3406@6583"; "xm_isect_ps@3405@6582";
                   "xm_rgb@3404@6581"; "xm_nvectors@3411@6588"],
                  Var Tt@687@5531,
        Let ("Ti@684@5530", Int 1,
        Let ("Ti@685@5529", Add (Var x@5504, Var Ti@684@5530),
        Let ("Tt@686@5528", Get (Var cur@5506, Var Ti@685@5529),
        LetTuple (["xm_gid@3410@6579"; "m_r20p@3409@6578";
                   "xm_engy@3408@6577"; "xm_cdif@3407@6576";
                   "xm_sids@3406@6575"; "xm_isect_ps@3405@6574";
                   "xm_rgb@3404@6573"; "xm_nvectors@3411@6580"],
                  Var Tt@686@5528,
        Let ("Tt@683@5527", Get (Var next@5507, Var x@5504),
        LetTuple (["xm_gid@3410@6571"; "m_r20p@3409@6570";
                   "xm_engy@3408@6569"; "xm_cdif@3407@6568";
                   "xm_sids@3406@6567"; "xm_isect_ps@3405@6566";
                   "xm_rgb@3404@6565"; "xm_nvectors@3411@6572"],
                  Var Tt@683@5527,
        Let ("Ta@682@5526", Get (Var m_r20p@3409@6602, Var nref@5508),
        Let ("Ta@8307", Static diffuse_ray@2750,
        Let ("Tu@173@5514",
             App (Var veccpy@2807, [Var Ta@8307; Var Ta@682@5526]),
        Let ("Ta@681@5525", Get (Var m_r20p@3409@6594, Var nref@5508),
        Let ("Ta@8306", Static diffuse_ray@2750,
        Let ("Tu@172@5515",
             App (Var vecadd@2969, [Var Ta@8306; Var Ta@681@5525]),
        Let ("Ta@680@5524", Get (Var m_r20p@3409@6586, Var nref@5508),
        Let ("Ta@8305", Static diffuse_ray@2750,
        Let ("Tu@171@5516",
             App (Var vecadd@2969, [Var Ta@8305; Var Ta@680@5524]),
        Let ("Ta@679@5523", Get (Var m_r20p@3409@6578, Var nref@5508),
        Let ("Ta@8304", Static diffuse_ray@2750,
        Let ("Tu@170@5517",
             App (Var vecadd@2969, [Var Ta@8304; Var Ta@679@5523]),
        Let ("Ta@678@5522", Get (Var m_r20p@3409@6570, Var nref@5508),
        Let ("Ta@8303", Static diffuse_ray@2750,
        Let ("Tu@169@5518",
             App (Var vecadd@2969, [Var Ta@8303; Var Ta@678@5522]),
        Let ("Tt@677@5521", Get (Var cur@5506, Var x@5504),
        LetTuple (["xm_gid@3400@6563"; "xm_r20p@3399@6562";
                   "m_engy@3398@6561"; "xm_cdif@3397@6560";
                   "xm_sids@3396@6559"; "xm_isect_ps@3395@6558";
                   "xm_rgb@3394@6557"; "xm_nvectors@3401@6564"],
                  Var Tt@677@5521,
        Let ("Ta@676@5520", Get (Var m_engy@3398@6561, Var nref@5508),
        Let ("Ta@8302", Static diffuse_ray@2750,
        Let ("Ta@8301", Static rgb@2751,
        App (Var vecaccumv@3032, [Var Ta@676@5520; Var Ta@8301; Var Ta@8302]))))))))))))))))))))))))))))))))))),
LetRec ("do_without_neighbors@5536", ["pixel@5537"; "nref@5538"],
        Let ("Ti@669@5539", Int 4,
        IfLE
         (Var nref@5538,
          Var Ti@669@5539,
          LetTuple (["xm_gid@3380@6555"; "xm_r20p@3379@6554";
                     "xm_engy@3378@6553"; "xm_cdif@3377@6552";
                     "m_sids@3376@6551"; "xm_isect_ps@3375@6550";
                     "xm_rgb@3374@6549"; "xm_nvectors@3381@6556"],
                    Var pixel@5537,
          Let ("Ti@670@5541", Int 0,
          Let ("Ti@671@5542", Get (Var m_sids@3376@6551, Var nref@5538),
          IfLE
           (Var Ti@670@5541,
            Var Ti@671@5542,
            LetTuple (["xm_gid@3390@6547"; "xm_r20p@3389@6546";
                       "xm_engy@3388@6545"; "m_cdif@3387@6544";
                       "xm_sids@3386@6543"; "xm_isect_ps@3385@6542";
                       "xm_rgb@3384@6541"; "xm_nvectors@3391@6548"],
                      Var pixel@5537,
            Let ("Tb@674@5547", Int 0,
            Let ("Tb@675@5548", Get (Var m_cdif@3387@6544, Var nref@5538),
            Let ("Tu@174@5544",
                 IfEq
                  (Var Tb@675@5548,
                   Var Tb@674@5547,
                   (),
                   App
                    (Var calc_diffuse_using_1point@5489,
                     [Var pixel@5537; Var nref@5538])),
            Let ("Ti@672@5546", Int 1,
            Let ("Ti@673@5545", Add (Var nref@5538, Var Ti@672@5546),
            App
             (Var do_without_neighbors@5536,
              [Var pixel@5537; Var Ti@673@5545]))))))),
            ())))),
          ())),
LetRec ("neighbors_exist@5549", ["y@5551"; "x@5550"; "next@5552"],
        Let ("Ti@660@5562", Int 1,
        Let ("Ta@8300", Static image_size@2752,
        Let ("Ti@661@5553", Get (Var Ta@8300, Var Ti@660@5562),
        Let ("Ti@659@5561", Int 1,
        Let ("Ti@662@5554", Add (Var y@5551, Var Ti@659@5561),
        IfLE
         (Var Ti@661@5553,
          Var Ti@662@5554,
          Int 0,
          Let ("Ti@663@5555", Int 0,
          IfLE
           (Var y@5551,
            Var Ti@663@5555,
            Int 0,
            Let ("Ti@665@5560", Int 0,
            Let ("Ta@8299", Static image_size@2752,
            Let ("Ti@666@5556", Get (Var Ta@8299, Var Ti@665@5560),
            Let ("Ti@664@5559", Int 1,
            Let ("Ti@667@5557", Add (Var x@5550, Var Ti@664@5559),
            IfLE
             (Var Ti@666@5556,
              Var Ti@667@5557,
              Int 0,
              Let ("Ti@668@5558", Int 0,
              IfLE (Var x@5550, Var Ti@668@5558, Int 0, Int 1)))))))))))))))),
LetRec ("neighbors_are_available@5567",
        ["next@5571"; "cur@5570"; "prev@5569"; "x@5568"; "nref@5572"],
        Let ("Tt@658@5586", Get (Var cur@5570, Var x@5568),
        LetTuple (["xm_gid@3380@8562"; "xm_r20p@3379@8561";
                   "xm_engy@3378@8560"; "xm_cdif@3377@8559";
                   "m_sids@3376@8558"; "xm_isect_ps@3375@8557";
                   "xm_rgb@3374@8556"; "xm_nvectors@3381@8563"],
                  Var Tt@658@5586,
        Let ("sid_center@5573", Get (Var m_sids@3376@8558, Var nref@5572),
        Let ("Tt@646@5585", Get (Var prev@5569, Var x@5568),
        LetTuple (["xm_gid@3380@8554"; "xm_r20p@3379@8553";
                   "xm_engy@3378@8552"; "xm_cdif@3377@8551";
                   "m_sids@3376@8550"; "xm_isect_ps@3375@8549";
                   "xm_rgb@3374@8548"; "xm_nvectors@3381@8555"],
                  Var Tt@646@5585,
        Let ("Ti@647@5574", Get (Var m_sids@3376@8550, Var nref@5572),
        IfEq
         (Var Ti@647@5574,
          Var sid_center@5573,
          Let ("Tt@648@5584", Get (Var next@5571, Var x@5568),
          LetTuple (["xm_gid@3380@8546"; "xm_r20p@3379@8545";
                     "xm_engy@3378@8544"; "xm_cdif@3377@8543";
                     "m_sids@3376@8542"; "xm_isect_ps@3375@8541";
                     "xm_rgb@3374@8540"; "xm_nvectors@3381@8547"],
                    Var Tt@648@5584,
          Let ("Ti@649@5575", Get (Var m_sids@3376@8542, Var nref@5572),
          IfEq
           (Var Ti@649@5575,
            Var sid_center@5573,
            Let ("Ti@650@5583", Int 1,
            Let ("Ti@651@5582", Sub (Var x@5568, Var Ti@650@5583),
            Let ("Tt@652@5581", Get (Var cur@5570, Var Ti@651@5582),
            LetTuple (["xm_gid@3380@8538"; "xm_r20p@3379@8537";
                       "xm_engy@3378@8536"; "xm_cdif@3377@8535";
                       "m_sids@3376@8534"; "xm_isect_ps@3375@8533";
                       "xm_rgb@3374@8532"; "xm_nvectors@3381@8539"],
                      Var Tt@652@5581,
            Let ("Ti@653@5576", Get (Var m_sids@3376@8534, Var nref@5572),
            IfEq
             (Var Ti@653@5576,
              Var sid_center@5573,
              Let ("Ti@654@5580", Int 1,
              Let ("Ti@655@5579", Add (Var x@5568, Var Ti@654@5580),
              Let ("Tt@656@5578", Get (Var cur@5570, Var Ti@655@5579),
              LetTuple (["xm_gid@3380@8530"; "xm_r20p@3379@8529";
                         "xm_engy@3378@8528"; "xm_cdif@3377@8527";
                         "m_sids@3376@8526"; "xm_isect_ps@3375@8525";
                         "xm_rgb@3374@8524"; "xm_nvectors@3381@8531"],
                        Var Tt@656@5578,
              Let ("Ti@657@5577", Get (Var m_sids@3376@8526, Var nref@5572),
              IfEq (Var Ti@657@5577, Var sid_center@5573, Int 1, Int 0)))))),
              Int 0)))))),
            Int 0)))),
          Int 0))))))),
LetRec ("try_exploit_neighbors@5587",
        ["next@5592"; "cur@5591"; "prev@5590"; "y@5589"; "x@5588";
         "nref@5593"],
        Let ("pixel@5594", Get (Var cur@5591, Var x@5588),
        Let ("Ti@636@5595", Int 4,
        IfLE
         (Var nref@5593,
          Var Ti@636@5595,
          Let ("Ti@637@5596", Int 0,
          LetTuple (["xm_gid@3380@8522"; "xm_r20p@3379@8521";
                     "xm_engy@3378@8520"; "xm_cdif@3377@8519";
                     "m_sids@3376@8518"; "xm_isect_ps@3375@8517";
                     "xm_rgb@3374@8516"; "xm_nvectors@3381@8523"],
                    Var pixel@5594,
          Let ("Ti@638@5597", Get (Var m_sids@3376@8518, Var nref@5593),
          IfLE
           (Var Ti@637@5596,
            Var Ti@638@5597,
            Let ("Tb@639@5598", Int 0,
            Let ("Tb@640@5599",
                 App
                  (Var neighbors_are_available@5567,
                   [Var next@5592; Var cur@5591; Var prev@5590; Var x@5588;
                    Var nref@5593]),
            IfEq
             (Var Tb@640@5599,
              Var Tb@639@5598,
              Let ("Tt@645@5606", Get (Var cur@5591, Var x@5588),
              App
               (Var do_without_neighbors@5536,
                [Var Tt@645@5606; Var nref@5593])),
              LetTuple (["xm_gid@3390@6525"; "xm_r20p@3389@6524";
                         "xm_engy@3388@6523"; "m_cdif@3387@6522";
                         "xm_sids@3386@6521"; "xm_isect_ps@3385@6520";
                         "xm_rgb@3384@6519"; "xm_nvectors@3391@6526"],
                        Var pixel@5594,
              Let ("Tb@643@5604", Int 0,
              Let ("Tb@644@5605", Get (Var m_cdif@3387@6522, Var nref@5593),
              Let ("Tu@175@5601",
                   IfEq
                    (Var Tb@644@5605,
                     Var Tb@643@5604,
                     (),
                     App
                      (Var calc_diffuse_using_5points@5503,
                       [Var next@5592; Var cur@5591; Var prev@5590;
                        Var x@5588; Var nref@5593])),
              Let ("Ti@641@5603", Int 1,
              Let ("Ti@642@5602", Add (Var nref@5593, Var Ti@641@5603),
              App
               (Var try_exploit_neighbors@5587,
                [Var next@5592; Var cur@5591; Var prev@5590; Var y@5589;
                 Var x@5588; Var Ti@642@5602])))))))))),
            ())))),
          ()))),
LetRec ("write_ppm_header@5607", ["Tu@176@5608"],
        Let ("Ti@635@5629", Int 80,
        Let ("Tu@184@5609", Print Var Ti@635@5629,
        Let ("Ti@632@5627", Int 48,
        Let ("Ti@633@5628", Int 3,
        Let ("Ti@634@5626", Int 51,
        Let ("Tu@183@5610", Print Var Ti@634@5626,
        Let ("Ti@631@5625", Int 10,
        Let ("Tu@182@5611", Print Var Ti@631@5625,
        Let ("Ti@629@5624", Int 0,
        Let ("Ta@8298", Static image_size@2752,
        Let ("Ti@630@5623", Get (Var Ta@8298, Var Ti@629@5624),
        Let ("Tu@181@5612", App (Var print_int@2578, [Var Ti@630@5623]),
        Let ("Ti@628@5622", Int 32,
        Let ("Tu@180@5613", Print Var Ti@628@5622,
        Let ("Ti@626@5621", Int 1,
        Let ("Ta@8297", Static image_size@2752,
        Let ("Ti@627@5620", Get (Var Ta@8297, Var Ti@626@5621),
        Let ("Tu@179@5614", App (Var print_int@2578, [Var Ti@627@5620]),
        Let ("Ti@625@5619", Int 32,
        Let ("Tu@178@5615", Print Var Ti@625@5619,
        Let ("Ti@624@5618", Int 255,
        Let ("Tu@177@5616", App (Var print_int@2578, [Var Ti@624@5618]),
        Let ("Ti@623@5617", Int 10,
        Print Var Ti@623@5617))))))))))))))))))))))),
LetRec ("write_rgb_element@5630", ["x@5631"],
        Let ("ix@5632", FtoI Var x@5631,
        Let ("Ti@621@5634", Int 255,
        Let ("elem@5633",
             IfLE
              (Var ix@5632,
               Var Ti@621@5634,
               Let ("Ti@622@5635", Int 0,
               IfLE (Var Ti@622@5635, Var ix@5632, Var ix@5632, Int 0)),
               Int 255),
        App (Var print_int@2578, [Var elem@5633])))),
LetRec ("write_rgb@5636", ["Tu@185@5637"],
        Let ("Ti@619@5651", Int 0,
        Let ("Ta@8296", Static rgb@2751,
        Let ("Td@620@5650", Get (Var Ta@8296, Var Ti@619@5651),
        Let ("Tu@190@5638",
             App (Var write_rgb_element@5630, [Var Td@620@5650]),
        Let ("Ti@618@5649", Int 32,
        Let ("Tu@189@5639", Print Var Ti@618@5649,
        Let ("Ti@616@5648", Int 1,
        Let ("Ta@8295", Static rgb@2751,
        Let ("Td@617@5647", Get (Var Ta@8295, Var Ti@616@5648),
        Let ("Tu@188@5640",
             App (Var write_rgb_element@5630, [Var Td@617@5647]),
        Let ("Ti@615@5646", Int 32,
        Let ("Tu@187@5641", Print Var Ti@615@5646,
        Let ("Ti@613@5645", Int 2,
        Let ("Ta@8294", Static rgb@2751,
        Let ("Td@614@5644", Get (Var Ta@8294, Var Ti@613@5645),
        Let ("Tu@186@5642",
             App (Var write_rgb_element@5630, [Var Td@614@5644]),
        Let ("Ti@612@5643", Int 10,
        Print Var Ti@612@5643))))))))))))))))),
LetRec ("pretrace_diffuse_rays@5652", ["pixel@5653"; "nref@5654"],
        Let ("Ti@598@5655", Int 4,
        IfLE
         (Var nref@5654,
          Var Ti@598@5655,
          LetTuple (["xm_gid@3380@8514"; "xm_r20p@3379@8513";
                     "xm_engy@3378@8512"; "xm_cdif@3377@8511";
                     "m_sids@3376@8510"; "xm_isect_ps@3375@8509";
                     "xm_rgb@3374@8508"; "xm_nvectors@3381@8515"],
                    Var pixel@5653,
          Let ("sid@5656", Get (Var m_sids@3376@8510, Var nref@5654),
          Let ("Ti@599@5657", Int 0,
          IfLE
           (Var Ti@599@5657,
            Var sid@5656,
            LetTuple (["xm_gid@3390@6516"; "xm_r20p@3389@6515";
                       "xm_engy@3388@6514"; "m_cdif@3387@6513";
                       "xm_sids@3386@6512"; "xm_isect_ps@3385@6511";
                       "xm_rgb@3384@6510"; "xm_nvectors@3391@6517"],
                      Var pixel@5653,
            Let ("Tb@606@5662", Int 0,
            Let ("Tb@607@5663", Get (Var m_cdif@3387@6513, Var nref@5654),
            Let ("Tu@193@5659",
                 IfEq
                  (Var Tb@607@5663,
                   Var Tb@606@5662,
                   (),
                   LetTuple (["m_gid@3420@6507"; "xm_r20p@3419@6506";
                              "xm_engy@3418@6505"; "xm_cdif@3417@6504";
                              "xm_sids@3416@6503"; "xm_isect_ps@3415@6502";
                              "xm_rgb@3414@6501"; "xm_nvectors@3421@6508"],
                             Var pixel@5653,
                   Let ("Ti@2120@3422@6509", Int 0,
                   Let ("group_id@5664",
                        Get (Var m_gid@3420@6507, Var Ti@2120@3422@6509),
                   Let ("Td@2338@2806@6500", Float 0.000000,
                   Let ("Ta@8293", Static diffuse_ray@2750,
                   Let ("Tu@192@5665",
                        App
                         (Var vecfill@2796,
                          [Var Ta@8293; Var Td@2338@2806@6500]),
                   LetTuple (["xm_gid@3443@6498"; "xm_r20p@3442@6497";
                              "xm_engy@3441@6496"; "xm_cdif@3440@6495";
                              "xm_sids@3439@6494"; "xm_isect_ps@3438@6493";
                              "xm_rgb@3437@6492"; "m_nvectors@3444@6499"],
                             Var pixel@5653,
                   LetTuple (["xm_gid@3370@6490"; "xm_r20p@3369@6489";
                              "xm_engy@3368@6488"; "xm_cdif@3367@6487";
                              "xm_sids@3366@6486"; "m_isect_ps@3365@6485";
                              "xm_rgb@3364@6484"; "xm_nvectors@3371@6491"],
                             Var pixel@5653,
                   Let ("Ta@8292", Static dirvecs@2761,
                   Let ("Ta@609@5671", Get (Var Ta@8292, Var group_id@5664),
                   Let ("Ta@610@5672",
                        Get (Var m_nvectors@3444@6499, Var nref@5654),
                   Let ("Ta@611@5673",
                        Get (Var m_isect_ps@3365@6485, Var nref@5654),
                   Let ("Tu@162@5464@6482",
                        App (Var setup_startp@4616, [Var Ta@611@5673]),
                   Let ("Ti@712@5465@6483", Int 118,
                   Let ("Tu@191@5668",
                        App
                         (Var iter_trace_diffuse_rays@5438,
                          [Var Ta@611@5673; Var Ta@610@5672; Var Ta@609@5671;
                           Var Ti@712@5465@6483]),
                   LetTuple (["xm_gid@3410@6480"; "m_r20p@3409@6479";
                              "xm_engy@3408@6478"; "xm_cdif@3407@6477";
                              "xm_sids@3406@6476"; "xm_isect_ps@3405@6475";
                              "xm_rgb@3404@6474"; "xm_nvectors@3411@6481"],
                             Var pixel@5653,
                   Let ("Ta@608@5670",
                        Get (Var m_r20p@3409@6479, Var nref@5654),
                   Let ("Ta@8291", Static diffuse_ray@2750,
                   App (Var veccpy@2807, [Var Ta@608@5670; Var Ta@8291])))))))))))))))))))),
            Let ("Ti@600@5661", Int 1,
            Let ("Ti@601@5660", Add (Var nref@5654, Var Ti@600@5661),
            App
             (Var pretrace_diffuse_rays@5652,
              [Var pixel@5653; Var Ti@601@5660]))))))),
            ())))),
          ())),
LetRec ("pretrace_pixels@5674",
        ["lc1@5679"; "lc0@5678"; "group_id@5677"; "x@5676"; "line@5675";
         "lc2@5680"],
        Let ("Ti@562@5681", Int 0,
        IfLE
         (Var Ti@562@5681,
          Var x@5676,
          Let ("Ti@592@5727", Int 0,
          Let ("Ta@8290", Static scan_pitch@2754,
          Let ("Td@596@5722", Get (Var Ta@8290, Var Ti@592@5727),
          Let ("Ti@593@5726", Int 0,
          Let ("Ta@8289", Static image_center@2753,
          Let ("Ti@594@5725", Get (Var Ta@8289, Var Ti@593@5726),
          Let ("Ti@595@5724", Sub (Var x@5676, Var Ti@594@5725),
          Let ("Td@597@5723", ItoF Var Ti@595@5724,
          Let ("xdisp@5682", FMul (Var Td@596@5722, Var Td@597@5723),
          Let ("Ti@590@5717", Int 0,
          Let ("Ti@587@5721", Int 0,
          Let ("Ta@8288", Static screenx_dir@2757,
          Let ("Td@588@5720", Get (Var Ta@8288, Var Ti@587@5721),
          Let ("Td@589@5719", FMul (Var xdisp@5682, Var Td@588@5720),
          Let ("Td@591@5718", FAdd (Var Td@589@5719, Var lc0@5678),
          Let ("Ta@8287", Static ptrace_dirvec@2760,
          Let ("Tu@203@5683",
               Put (Var Ta@8287, Var Ti@590@5717, Var Td@591@5718),
          Let ("Ti@585@5712", Int 1,
          Let ("Ti@582@5716", Int 1,
          Let ("Ta@8286", Static screenx_dir@2757,
          Let ("Td@583@5715", Get (Var Ta@8286, Var Ti@582@5716),
          Let ("Td@584@5714", FMul (Var xdisp@5682, Var Td@583@5715),
          Let ("Td@586@5713", FAdd (Var Td@584@5714, Var lc1@5679),
          Let ("Ta@8285", Static ptrace_dirvec@2760,
          Let ("Tu@202@5684",
               Put (Var Ta@8285, Var Ti@585@5712, Var Td@586@5713),
          Let ("Ti@580@5707", Int 2,
          Let ("Ti@577@5711", Int 2,
          Let ("Ta@8284", Static screenx_dir@2757,
          Let ("Td@578@5710", Get (Var Ta@8284, Var Ti@577@5711),
          Let ("Td@579@5709", FMul (Var xdisp@5682, Var Td@578@5710),
          Let ("Td@581@5708", FAdd (Var Td@579@5709, Var lc2@5680),
          Let ("Ta@8283", Static ptrace_dirvec@2760,
          Let ("Tu@201@5685",
               Put (Var Ta@8283, Var Ti@580@5707, Var Td@581@5708),
          Let ("Tb@576@5706", Int 0,
          Let ("Ta@8282", Static ptrace_dirvec@2760,
          Let ("Tu@200@5686",
               App (Var vecunit_sgn@2873, [Var Ta@8282; Var Tb@576@5706]),
          Let ("Td@2338@2806@6473", Float 0.000000,
          Let ("Ta@8281", Static rgb@2751,
          Let ("Tu@199@5687",
               App (Var vecfill@2796, [Var Ta@8281; Var Td@2338@2806@6473]),
          Let ("Ta@8280", Static viewpoint@2738,
          Let ("Ta@8279", Static startp@2755,
          Let ("Tu@198@5688",
               App (Var veccpy@2807, [Var Ta@8279; Var Ta@8280]),
          Let ("Ti@572@5702", Int 0,
          Let ("Td@573@5703", Float 1.000000,
          Let ("Tt@574@5704", Get (Var line@5675, Var x@5676),
          Let ("Td@575@5705", Float 0.000000,
          Let ("Ta@8278", Static ptrace_dirvec@2760,
          Let ("Tu@197@5689",
               App
                (Var trace_ray@5294,
                 [Var Tt@574@5704; Var Ta@8278; Var Td@573@5703;
                  Var Ti@572@5702; Var Td@575@5705]),
          Let ("Tt@570@5701", Get (Var line@5675, Var x@5676),
          LetTuple (["xm_gid@3360@6471"; "xm_r20p@3359@6470";
                     "xm_engy@3358@6469"; "xm_cdif@3357@6468";
                     "xm_sids@3356@6467"; "xm_isect_ps@3355@6466";
                     "m_rgb@3354@6465"; "xm_nvectors@3361@6472"],
                    Var Tt@570@5701,
          Let ("Ta@8277", Static rgb@2751,
          Let ("Tu@196@5690",
               App (Var veccpy@2807, [Var m_rgb@3354@6465; Var Ta@8277]),
          Let ("Tt@569@5699", Get (Var line@5675, Var x@5676),
          LetTuple (["m_gid@3432@6462"; "xm_r20p@3431@6461";
                     "xm_engy@3430@6460"; "xm_cdif@3429@6459";
                     "xm_sids@3428@6458"; "xm_isect_ps@3427@6457";
                     "xm_rgb@3426@6456"; "xm_nvectors@3433@6463"],
                    Var Tt@569@5699,
          Let ("Ti@2119@3434@6464", Int 0,
          Let ("Tu@195@5691",
               Put
                (Var m_gid@3432@6462,
                 Var Ti@2119@3434@6464,
                 Var group_id@5677),
          Let ("Tt@567@5697", Get (Var line@5675, Var x@5676),
          Let ("Ti@568@5698", Int 0,
          Let ("Tu@194@5692",
               App
                (Var pretrace_diffuse_rays@5652,
                 [Var Tt@567@5697; Var Ti@568@5698]),
          Let ("Ti@563@5696", Int 1,
          Let ("Ti@565@5693", Sub (Var x@5676, Var Ti@563@5696),
          Let ("Ti@564@5695", Int 1,
          Let ("sum@2783@6453", Add (Var group_id@5677, Var Ti@564@5695),
          Let ("Ti@2345@2784@6454", Int 5,
          Let ("Ti@566@5694",
               IfLE
                (Var Ti@2345@2784@6454,
                 Var sum@2783@6453,
                 Let ("Ti@2346@2785@6455", Int 5,
                 Sub (Var sum@2783@6453, Var Ti@2346@2785@6455)),
                 Var sum@2783@6453),
          App
           (Var pretrace_pixels@5674,
            [Var lc1@5679; Var lc0@5678; Var Ti@566@5694; Var Ti@565@5693;
             Var line@5675; Var lc2@5680])))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))),
          ())),
LetRec ("pretrace_line@5728", ["y@5730"; "line@5729"; "group_id@5731"],
        Let ("Ti@556@5760", Int 0,
        Let ("Ta@8276", Static scan_pitch@2754,
        Let ("Td@560@5755", Get (Var Ta@8276, Var Ti@556@5760),
        Let ("Ti@557@5759", Int 1,
        Let ("Ta@8275", Static image_center@2753,
        Let ("Ti@558@5758", Get (Var Ta@8275, Var Ti@557@5759),
        Let ("Ti@559@5757", Sub (Var y@5730, Var Ti@558@5758),
        Let ("Td@561@5756", ItoF Var Ti@559@5757,
        Let ("ydisp@5732", FMul (Var Td@560@5755, Var Td@561@5756),
        Let ("Ti@551@5754", Int 0,
        Let ("Ta@8274", Static screeny_dir@2758,
        Let ("Td@552@5753", Get (Var Ta@8274, Var Ti@551@5754),
        Let ("Td@554@5750", FMul (Var ydisp@5732, Var Td@552@5753),
        Let ("Ti@553@5752", Int 0,
        Let ("Ta@8273", Static screenz_dir@2759,
        Let ("Td@555@5751", Get (Var Ta@8273, Var Ti@553@5752),
        Let ("lc0@5733", FAdd (Var Td@554@5750, Var Td@555@5751),
        Let ("Ti@546@5749", Int 1,
        Let ("Ta@8272", Static screeny_dir@2758,
        Let ("Td@547@5748", Get (Var Ta@8272, Var Ti@546@5749),
        Let ("Td@549@5745", FMul (Var ydisp@5732, Var Td@547@5748),
        Let ("Ti@548@5747", Int 1,
        Let ("Ta@8271", Static screenz_dir@2759,
        Let ("Td@550@5746", Get (Var Ta@8271, Var Ti@548@5747),
        Let ("lc1@5734", FAdd (Var Td@549@5745, Var Td@550@5746),
        Let ("Ti@541@5744", Int 2,
        Let ("Ta@8270", Static screeny_dir@2758,
        Let ("Td@542@5743", Get (Var Ta@8270, Var Ti@541@5744),
        Let ("Td@544@5740", FMul (Var ydisp@5732, Var Td@542@5743),
        Let ("Ti@543@5742", Int 2,
        Let ("Ta@8269", Static screenz_dir@2759,
        Let ("Td@545@5741", Get (Var Ta@8269, Var Ti@543@5742),
        Let ("lc2@5735", FAdd (Var Td@544@5740, Var Td@545@5741),
        Let ("Ti@537@5739", Int 0,
        Let ("Ta@8268", Static image_size@2752,
        Let ("Ti@538@5737", Get (Var Ta@8268, Var Ti@537@5739),
        Let ("Ti@539@5738", Int 1,
        Let ("Ti@540@5736", Sub (Var Ti@538@5737, Var Ti@539@5738),
        App
         (Var pretrace_pixels@5674,
          [Var lc1@5734; Var lc0@5733; Var group_id@5731; Var Ti@540@5736;
           Var line@5729; Var lc2@5735]))))))))))))))))))))))))))))))))))))))),
LetRec ("scan_pixel@5761",
        ["cur@5765"; "prev@5764"; "y@5763"; "x@5762"; "next@5766"],
        Let ("Ti@525@5781", Int 0,
        Let ("Ta@8267", Static image_size@2752,
        Let ("Ti@526@5767", Get (Var Ta@8267, Var Ti@525@5781),
        IfLE
         (Var Ti@526@5767,
          Var x@5762,
          (),
          Let ("Tt@535@5780", Get (Var cur@5765, Var x@5762),
          LetTuple (["xm_gid@3360@6451"; "xm_r20p@3359@6450";
                     "xm_engy@3358@6449"; "xm_cdif@3357@6448";
                     "xm_sids@3356@6447"; "xm_isect_ps@3355@6446";
                     "m_rgb@3354@6445"; "xm_nvectors@3361@6452"],
                    Var Tt@535@5780,
          Let ("Ta@8266", Static rgb@2751,
          Let ("Tu@206@5768",
               App (Var veccpy@2807, [Var Ta@8266; Var m_rgb@3354@6445]),
          Let ("Tb@530@5774", Int 0,
          Let ("Tb@531@5775",
               App
                (Var neighbors_exist@5549,
                 [Var y@5763; Var x@5762; Var next@5766]),
          Let ("Tu@205@5769",
               IfEq
                (Var Tb@531@5775,
                 Var Tb@530@5774,
                 Let ("Tt@533@5777", Get (Var cur@5765, Var x@5762),
                 Let ("Ti@534@5778", Int 0,
                 App
                  (Var do_without_neighbors@5536,
                   [Var Tt@533@5777; Var Ti@534@5778]))),
                 Let ("Ti@532@5776", Int 0,
                 App
                  (Var try_exploit_neighbors@5587,
                   [Var next@5766; Var cur@5765; Var prev@5764; Var y@5763;
                    Var x@5762; Var Ti@532@5776]))),
          Let ("Tu@529@5773", (),
          Let ("Tu@204@5770", App (Var write_rgb@5636, [Var Tu@529@5773]),
          Let ("Ti@527@5772", Int 1,
          Let ("Ti@528@5771", Add (Var x@5762, Var Ti@527@5772),
          App
           (Var scan_pixel@5761,
            [Var cur@5765; Var prev@5764; Var y@5763; Var Ti@528@5771;
             Var next@5766])))))))))))))))),
LetRec ("scan_line@5782",
        ["next@5786"; "cur@5785"; "prev@5784"; "y@5783"; "group_id@5787"],
        Let ("Ti@512@5803", Int 1,
        Let ("Ta@8265", Static image_size@2752,
        Let ("Ti@513@5788", Get (Var Ta@8265, Var Ti@512@5803),
        IfLE
         (Var Ti@513@5788,
          Var y@5783,
          (),
          Let ("Ti@519@5802", Int 1,
          Let ("Ta@8264", Static image_size@2752,
          Let ("Ti@520@5800", Get (Var Ta@8264, Var Ti@519@5802),
          Let ("Ti@521@5801", Int 1,
          Let ("Ti@522@5797", Sub (Var Ti@520@5800, Var Ti@521@5801),
          Let ("Tu@209@5789",
               IfLE
                (Var Ti@522@5797,
                 Var y@5783,
                 (),
                 Let ("Ti@523@5799", Int 1,
                 Let ("Ti@524@5798", Add (Var y@5783, Var Ti@523@5799),
                 App
                  (Var pretrace_line@5728,
                   [Var Ti@524@5798; Var next@5786; Var group_id@5787])))),
          Let ("Ti@518@5796", Int 0,
          Let ("Tu@208@5790",
               App
                (Var scan_pixel@5761,
                 [Var cur@5785; Var prev@5784; Var y@5783; Var Ti@518@5796;
                  Var next@5786]),
          Let ("Ti@514@5795", Int 1,
          Let ("Ti@516@5792", Add (Var y@5783, Var Ti@514@5795),
          Let ("Ti@515@5794", Int 2,
          Let ("sum@2783@6442", Add (Var group_id@5787, Var Ti@515@5794),
          Let ("Ti@2345@2784@6443", Int 5,
          Let ("Ti@517@5793",
               IfLE
                (Var Ti@2345@2784@6443,
                 Var sum@2783@6442,
                 Let ("Ti@2346@2785@6444", Int 5,
                 Sub (Var sum@2783@6442, Var Ti@2346@2785@6444)),
                 Var sum@2783@6442),
          Let ("Tu@207@5791",
               App
                (Var scan_line@5782,
                 [Var prev@5784; Var next@5786; Var cur@5785;
                  Var Ti@516@5792; Var Ti@517@5793]),
          ()))))))))))))))))))),
LetRec ("create_float5x3array@5804", ["Tu@210@5805"],
        Let ("Ti@510@5829", Int 3,
        Let ("Td@511@5830", Float 0.000000,
        Let ("vec@5806",
             ExtFunApp
              (Var create_float_array, [Var Ti@510@5829; Var Td@511@5830]),
        Let ("Ti@509@5828", Int 5,
        Let ("array@5807",
             ExtFunApp (Var create_array, [Var Ti@509@5828; Var vec@5806]),
        Let ("Ti@507@5824", Int 1,
        Let ("Ti@505@5826", Int 3,
        Let ("Td@506@5827", Float 0.000000,
        Let ("Ta@508@5825",
             ExtFunApp
              (Var create_float_array, [Var Ti@505@5826; Var Td@506@5827]),
        Let ("Tu@214@5808",
             Put (Var array@5807, Var Ti@507@5824, Var Ta@508@5825),
        Let ("Ti@503@5820", Int 2,
        Let ("Ti@501@5822", Int 3,
        Let ("Td@502@5823", Float 0.000000,
        Let ("Ta@504@5821",
             ExtFunApp
              (Var create_float_array, [Var Ti@501@5822; Var Td@502@5823]),
        Let ("Tu@213@5809",
             Put (Var array@5807, Var Ti@503@5820, Var Ta@504@5821),
        Let ("Ti@499@5816", Int 3,
        Let ("Ti@497@5818", Int 3,
        Let ("Td@498@5819", Float 0.000000,
        Let ("Ta@500@5817",
             ExtFunApp
              (Var create_float_array, [Var Ti@497@5818; Var Td@498@5819]),
        Let ("Tu@212@5810",
             Put (Var array@5807, Var Ti@499@5816, Var Ta@500@5817),
        Let ("Ti@495@5812", Int 4,
        Let ("Ti@493@5814", Int 3,
        Let ("Td@494@5815", Float 0.000000,
        Let ("Ta@496@5813",
             ExtFunApp
              (Var create_float_array, [Var Ti@493@5814; Var Td@494@5815]),
        Let ("Tu@211@5811",
             Put (Var array@5807, Var Ti@495@5812, Var Ta@496@5813),
        Var array@5807))))))))))))))))))))))))),
LetRec ("create_pixel@5831", ["Tu@215@5832"],
        Let ("Ti@491@5851", Int 3,
        Let ("Td@492@5852", Float 0.000000,
        Let ("m_rgb@5833",
             ExtFunApp
              (Var create_float_array, [Var Ti@491@5851; Var Td@492@5852]),
        Let ("Tu@490@5850", (),
        Let ("m_isect_ps@5834",
             App (Var create_float5x3array@5804, [Var Tu@490@5850]),
        Let ("Ti@488@5848", Int 5,
        Let ("Ti@489@5849", Int 0,
        Let ("m_sids@5835",
             ExtFunApp (Var create_array, [Var Ti@488@5848; Var Ti@489@5849]),
        Let ("Ti@486@5846", Int 5,
        Let ("Tb@487@5847", Int 0,
        Let ("m_cdif@5836",
             ExtFunApp (Var create_array, [Var Ti@486@5846; Var Tb@487@5847]),
        Let ("Tu@485@5845", (),
        Let ("m_engy@5837",
             App (Var create_float5x3array@5804, [Var Tu@485@5845]),
        Let ("Tu@484@5844", (),
        Let ("m_r20p@5838",
             App (Var create_float5x3array@5804, [Var Tu@484@5844]),
        Let ("Ti@482@5842", Int 1,
        Let ("Ti@483@5843", Int 0,
        Let ("m_gid@5839",
             ExtFunApp (Var create_array, [Var Ti@482@5842; Var Ti@483@5843]),
        Let ("Tu@481@5841", (),
        Let ("m_nvectors@5840",
             App (Var create_float5x3array@5804, [Var Tu@481@5841]),
        Tuple
         [Var m_gid@5839; Var m_r20p@5838; Var m_engy@5837; Var m_cdif@5836;
          Var m_sids@5835; Var m_isect_ps@5834; Var m_rgb@5833;
          Var m_nvectors@5840])))))))))))))))))))),
LetRec ("init_line_elements@5853", ["line@5854"; "n@5855"],
        Let ("Ti@476@5856", Int 0,
        IfLE
         (Var Ti@476@5856,
          Var n@5855,
          Let ("Tu@479@5861", (),
          Let ("Tt@480@5860", App (Var create_pixel@5831, [Var Tu@479@5861]),
          Let ("Tu@216@5857",
               Put (Var line@5854, Var n@5855, Var Tt@480@5860),
          Let ("Ti@477@5859", Int 1,
          Let ("Ti@478@5858", Sub (Var n@5855, Var Ti@477@5859),
          App (Var init_line_elements@5853, [Var line@5854; Var Ti@478@5858])))))),
          Var line@5854)),
LetRec ("create_pixelline@5862", ["Tu@217@5863"],
        Let ("Ti@472@5872", Int 0,
        Let ("Ta@8263", Static image_size@2752,
        Let ("Ti@474@5869", Get (Var Ta@8263, Var Ti@472@5872),
        Let ("Tu@473@5871", (),
        Let ("Tt@475@5870", App (Var create_pixel@5831, [Var Tu@473@5871]),
        Let ("line@5864",
             ExtFunApp (Var create_array, [Var Ti@474@5869; Var Tt@475@5870]),
        Let ("Ti@468@5868", Int 0,
        Let ("Ta@8262", Static image_size@2752,
        Let ("Ti@469@5866", Get (Var Ta@8262, Var Ti@468@5868),
        Let ("Ti@470@5867", Int 2,
        Let ("Ti@471@5865", Sub (Var Ti@469@5866, Var Ti@470@5867),
        App (Var init_line_elements@5853, [Var line@5864; Var Ti@471@5865])))))))))))),
LetRec ("adjust_position@5877", ["h@5878"; "ratio@5879"],
        Let ("Td@463@5887", FMul (Var h@5878, Var h@5878),
        Let ("Td@464@5888", Float 0.100000,
        Let ("Td@465@5886", FAdd (Var Td@463@5887, Var Td@464@5888),
        Let ("l@5880", Sqrt Var Td@465@5886,
        Let ("Td@462@5885", Float 1.000000,
        Let ("tan_h@5881", FDiv (Var Td@462@5885, Var l@5880),
        Let ("theta_h@5882", App (Var atan@2712, [Var tan_h@5881]),
        Let ("Td@461@5884", FMul (Var theta_h@5882, Var ratio@5879),
        Let ("Td@466@5875@6440", App (Var sin@2642, [Var Td@461@5884]),
        Let ("Td@467@5876@6441", App (Var cos@2665, [Var Td@461@5884]),
        Let ("tan_m@5883", FDiv (Var Td@466@5875@6440, Var Td@467@5876@6441),
        FMul (Var tan_m@5883, Var l@5880)))))))))))),
LetRec ("calc_dirvec@5889",
        ["group_id@5895"; "ry@5894"; "rx@5893"; "y@5892"; "x@5891";
         "icount@5890"; "index@5896"],
        Let ("Ti@420@5897", Int 5,
        IfLE
         (Var Ti@420@5897,
          Var icount@5890,
          Let ("Td@456@5947", FMul (Var x@5891, Var x@5891),
          Let ("Td@457@5948", FMul (Var y@5892, Var y@5892),
          Let ("Td@458@5945", FAdd (Var Td@456@5947, Var Td@457@5948),
          Let ("Td@459@5946", Float 1.000000,
          Let ("Td@460@5944", FAdd (Var Td@458@5945, Var Td@459@5946),
          Let ("l@5902", Sqrt Var Td@460@5944,
          Let ("vx@5903", FDiv (Var x@5891, Var l@5902),
          Let ("vy@5904", FDiv (Var y@5892, Var l@5902),
          Let ("Td@455@5943", Float 1.000000,
          Let ("vz@5905", FDiv (Var Td@455@5943, Var l@5902),
          Let ("Ta@8261", Static dirvecs@2761,
          Let ("dgroup@5906", Get (Var Ta@8261, Var group_id@5895),
          Let ("Tt@453@5942", Get (Var dgroup@5906, Var index@5896),
          LetTuple (["m_vec@3447@6438"; "xm_const@3448@6439"],
                    Var Tt@453@5942,
          Let ("Tu@222@5907",
               App
                (Var vecset@2786,
                 [Var vy@5904; Var vx@5903; Var m_vec@3447@6438; Var vz@5905]),
          Let ("Ti@448@5940", Int 40,
          Let ("Ti@449@5939", Add (Var index@5896, Var Ti@448@5940),
          Let ("Tt@450@5938", Get (Var dgroup@5906, Var Ti@449@5939),
          LetTuple (["m_vec@3447@6436"; "xm_const@3448@6437"],
                    Var Tt@450@5938,
          Let ("Td@452@5937", FNeg Var vy@5904,
          Let ("Tu@221@5908",
               App
                (Var vecset@2786,
                 [Var vz@5905; Var vx@5903; Var m_vec@3447@6436;
                  Var Td@452@5937]),
          Let ("Ti@442@5935", Int 80,
          Let ("Ti@443@5934", Add (Var index@5896, Var Ti@442@5935),
          Let ("Tt@444@5933", Get (Var dgroup@5906, Var Ti@443@5934),
          LetTuple (["m_vec@3447@6434"; "xm_const@3448@6435"],
                    Var Tt@444@5933,
          Let ("Td@446@5931", FNeg Var vx@5903,
          Let ("Td@447@5932", FNeg Var vy@5904,
          Let ("Tu@220@5909",
               App
                (Var vecset@2786,
                 [Var Td@446@5931; Var vz@5905; Var m_vec@3447@6434;
                  Var Td@447@5932]),
          Let ("Ti@435@5929", Int 1,
          Let ("Ti@436@5928", Add (Var index@5896, Var Ti@435@5929),
          Let ("Tt@437@5927", Get (Var dgroup@5906, Var Ti@436@5928),
          LetTuple (["m_vec@3447@6432"; "xm_const@3448@6433"],
                    Var Tt@437@5927,
          Let ("Td@439@5924", FNeg Var vx@5903,
          Let ("Td@440@5925", FNeg Var vy@5904,
          Let ("Td@441@5926", FNeg Var vz@5905,
          Let ("Tu@219@5910",
               App
                (Var vecset@2786,
                 [Var Td@440@5925; Var Td@439@5924; Var m_vec@3447@6432;
                  Var Td@441@5926]),
          Let ("Ti@429@5922", Int 41,
          Let ("Ti@430@5921", Add (Var index@5896, Var Ti@429@5922),
          Let ("Tt@431@5920", Get (Var dgroup@5906, Var Ti@430@5921),
          LetTuple (["m_vec@3447@6430"; "xm_const@3448@6431"],
                    Var Tt@431@5920,
          Let ("Td@433@5918", FNeg Var vx@5903,
          Let ("Td@434@5919", FNeg Var vz@5905,
          Let ("Tu@218@5911",
               App
                (Var vecset@2786,
                 [Var Td@434@5919; Var Td@433@5918; Var m_vec@3447@6430;
                  Var vy@5904]),
          Let ("Ti@424@5916", Int 81,
          Let ("Ti@425@5915", Add (Var index@5896, Var Ti@424@5916),
          Let ("Tt@426@5914", Get (Var dgroup@5906, Var Ti@425@5915),
          LetTuple (["m_vec@3447@6428"; "xm_const@3448@6429"],
                    Var Tt@426@5914,
          Let ("Td@428@5913", FNeg Var vz@5905,
          App
           (Var vecset@2786,
            [Var vx@5903; Var Td@428@5913; Var m_vec@3447@6428; Var vy@5904]))))))))))))))))))))))))))))))))))))))))))))))))),
          Let ("x2@5898",
               App (Var adjust_position@5877, [Var y@5892; Var rx@5893]),
          Let ("Ti@421@5901", Int 1,
          Let ("Ti@422@5899", Add (Var icount@5890, Var Ti@421@5901),
          Let ("Td@423@5900",
               App (Var adjust_position@5877, [Var x2@5898; Var ry@5894]),
          App
           (Var calc_dirvec@5889,
            [Var group_id@5895; Var ry@5894; Var rx@5893; Var Td@423@5900;
             Var x2@5898; Var Ti@422@5899; Var index@5896]))))))),
LetRec ("calc_dirvecs@5949",
        ["group_id@5952"; "ry@5951"; "col@5950"; "index@5953"],
        Let ("Ti@399@5954", Int 0,
        IfLE
         (Var Ti@399@5954,
          Var col@5950,
          Let ("Td@416@5977", ItoF Var col@5950,
          Let ("Td@417@5978", Float 0.200000,
          Let ("Td@418@5975", FMul (Var Td@416@5977, Var Td@417@5978),
          Let ("Td@419@5976", Float 0.900000,
          Let ("rx@5955", FSub (Var Td@418@5975, Var Td@419@5976),
          Let ("Ti@413@5972", Int 0,
          Let ("Td@414@5973", Float 0.000000,
          Let ("Td@415@5974", Float 0.000000,
          Let ("Tu@224@5956",
               App
                (Var calc_dirvec@5889,
                 [Var group_id@5952; Var ry@5951; Var rx@5955;
                  Var Td@415@5974; Var Td@414@5973; Var Ti@413@5972;
                  Var index@5953]),
          Let ("Td@409@5970", ItoF Var col@5950,
          Let ("Td@410@5971", Float 0.200000,
          Let ("Td@411@5968", FMul (Var Td@409@5970, Var Td@410@5971),
          Let ("Td@412@5969", Float 0.100000,
          Let ("rx2@5957", FAdd (Var Td@411@5968, Var Td@412@5969),
          Let ("Ti@405@5963", Int 0,
          Let ("Td@406@5964", Float 0.000000,
          Let ("Td@407@5965", Float 0.000000,
          Let ("Ti@404@5967", Int 2,
          Let ("Ti@408@5966", Add (Var index@5953, Var Ti@404@5967),
          Let ("Tu@223@5958",
               App
                (Var calc_dirvec@5889,
                 [Var group_id@5952; Var ry@5951; Var rx2@5957;
                  Var Td@407@5965; Var Td@406@5964; Var Ti@405@5963;
                  Var Ti@408@5966]),
          Let ("Ti@400@5962", Int 1,
          Let ("Ti@402@5959", Sub (Var col@5950, Var Ti@400@5962),
          Let ("Ti@401@5961", Int 1,
          Let ("sum@2783@6425", Add (Var group_id@5952, Var Ti@401@5961),
          Let ("Ti@2345@2784@6426", Int 5,
          Let ("Ti@403@5960",
               IfLE
                (Var Ti@2345@2784@6426,
                 Var sum@2783@6425,
                 Let ("Ti@2346@2785@6427", Int 5,
                 Sub (Var sum@2783@6425, Var Ti@2346@2785@6427)),
                 Var sum@2783@6425),
          App
           (Var calc_dirvecs@5949,
            [Var Ti@403@5960; Var ry@5951; Var Ti@402@5959; Var index@5953]))))))))))))))))))))))))))),
          ())),
LetRec ("calc_dirvec_rows@5979", ["group_id@5981"; "row@5980"; "index@5982"],
        Let ("Ti@387@5983", Int 0,
        IfLE
         (Var Ti@387@5983,
          Var row@5980,
          Let ("Td@395@5995", ItoF Var row@5980,
          Let ("Td@396@5996", Float 0.200000,
          Let ("Td@397@5993", FMul (Var Td@395@5995, Var Td@396@5996),
          Let ("Td@398@5994", Float 0.900000,
          Let ("ry@5984", FSub (Var Td@397@5993, Var Td@398@5994),
          Let ("Ti@394@5992", Int 4,
          Let ("Tu@225@5985",
               App
                (Var calc_dirvecs@5949,
                 [Var group_id@5981; Var ry@5984; Var Ti@394@5992;
                  Var index@5982]),
          Let ("Ti@388@5991", Int 1,
          Let ("Ti@391@5986", Sub (Var row@5980, Var Ti@388@5991),
          Let ("Ti@389@5990", Int 2,
          Let ("sum@2783@6422", Add (Var group_id@5981, Var Ti@389@5990),
          Let ("Ti@2345@2784@6423", Int 5,
          Let ("Ti@392@5987",
               IfLE
                (Var Ti@2345@2784@6423,
                 Var sum@2783@6422,
                 Let ("Ti@2346@2785@6424", Int 5,
                 Sub (Var sum@2783@6422, Var Ti@2346@2785@6424)),
                 Var sum@2783@6422),
          Let ("Ti@390@5989", Int 4,
          Let ("Ti@393@5988", Add (Var index@5982, Var Ti@390@5989),
          App
           (Var calc_dirvec_rows@5979,
            [Var Ti@392@5987; Var Ti@391@5986; Var Ti@393@5988])))))))))))))))),
          ())),
LetRec ("create_dirvec@5997", ["Tu@226@5998"],
        Let ("Ti@385@6003", Int 3,
        Let ("Td@386@6004", Float 0.000000,
        Let ("v3@5999",
             ExtFunApp
              (Var create_float_array, [Var Ti@385@6003; Var Td@386@6004]),
        Let ("Ti@383@6002", Int 0,
        Let ("Ta@8260", Static n_objects@2735,
        Let ("Ti@384@6001", Get (Var Ta@8260, Var Ti@383@6002),
        Let ("consts@6000",
             ExtFunApp (Var create_array, [Var Ti@384@6001; Var v3@5999]),
        Tuple [Var v3@5999; Var consts@6000]))))))),
LetRec ("create_dirvec_elements@6005", ["d@6006"; "index@6007"],
        Let ("Ti@378@6008", Int 0,
        IfLE
         (Var Ti@378@6008,
          Var index@6007,
          Let ("Tu@381@6013", (),
          Let ("Tt@382@6012",
               App (Var create_dirvec@5997, [Var Tu@381@6013]),
          Let ("Tu@227@6009",
               Put (Var d@6006, Var index@6007, Var Tt@382@6012),
          Let ("Ti@379@6011", Int 1,
          Let ("Ti@380@6010", Sub (Var index@6007, Var Ti@379@6011),
          App
           (Var create_dirvec_elements@6005, [Var d@6006; Var Ti@380@6010])))))),
          ())),
LetRec ("create_dirvecs@6014", ["index@6015"],
        Let ("Ti@369@6016", Int 0,
        IfLE
         (Var Ti@369@6016,
          Var index@6015,
          Let ("Ti@375@6024", Int 120,
          Let ("Tu@374@6026", (),
          Let ("Tt@376@6025",
               App (Var create_dirvec@5997, [Var Tu@374@6026]),
          Let ("Ta@377@6023",
               ExtFunApp
                (Var create_array, [Var Ti@375@6024; Var Tt@376@6025]),
          Let ("Ta@8259", Static dirvecs@2761,
          Let ("Tu@229@6017",
               Put (Var Ta@8259, Var index@6015, Var Ta@377@6023),
          Let ("Ta@8258", Static dirvecs@2761,
          Let ("Ta@372@6021", Get (Var Ta@8258, Var index@6015),
          Let ("Ti@373@6022", Int 118,
          Let ("Tu@228@6018",
               App
                (Var create_dirvec_elements@6005,
                 [Var Ta@372@6021; Var Ti@373@6022]),
          Let ("Ti@370@6020", Int 1,
          Let ("Ti@371@6019", Sub (Var index@6015, Var Ti@370@6020),
          App (Var create_dirvecs@6014, [Var Ti@371@6019]))))))))))))),
          ())),
LetRec ("init_dirvec_constants@6027", ["vecset@6028"; "index@6029"],
        Let ("Ti@365@6030", Int 0,
        IfLE
         (Var Ti@365@6030,
          Var index@6029,
          Let ("Tt@368@6034", Get (Var vecset@6028, Var index@6029),
          Let ("Ti@1328@4565@6418", Int 0,
          Let ("Ta@8257", Static n_objects@2735,
          Let ("Ti@1329@4563@6419", Get (Var Ta@8257, Var Ti@1328@4565@6418),
          Let ("Ti@1330@4564@6420", Int 1,
          Let ("Ti@1331@4562@6421",
               Sub (Var Ti@1329@4563@6419, Var Ti@1330@4564@6420),
          Let ("Tu@230@6031",
               App
                (Var iter_setup_dirvec_constants@4544,
                 [Var Tt@368@6034; Var Ti@1331@4562@6421]),
          Let ("Ti@366@6033", Int 1,
          Let ("Ti@367@6032", Sub (Var index@6029, Var Ti@366@6033),
          App
           (Var init_dirvec_constants@6027,
            [Var vecset@6028; Var Ti@367@6032])))))))))),
          ())),
LetRec ("init_vecset_constants@6035", ["index@6036"],
        Let ("Ti@360@6037", Int 0,
        IfLE
         (Var Ti@360@6037,
          Var index@6036,
          Let ("Ta@8256", Static dirvecs@2761,
          Let ("Ta@363@6041", Get (Var Ta@8256, Var index@6036),
          Let ("Ti@364@6042", Int 119,
          Let ("Tu@231@6038",
               App
                (Var init_dirvec_constants@6027,
                 [Var Ta@363@6041; Var Ti@364@6042]),
          Let ("Ti@361@6040", Int 1,
          Let ("Ti@362@6039", Sub (Var index@6036, Var Ti@361@6040),
          App (Var init_vecset_constants@6035, [Var Ti@362@6039]))))))),
          ())),
LetRec ("init_dirvecs@6043", ["Tu@232@6044"],
        Let ("Ti@359@6051", Int 4,
        Let ("Tu@234@6045", App (Var create_dirvecs@6014, [Var Ti@359@6051]),
        Let ("Ti@356@6048", Int 9,
        Let ("Ti@357@6049", Int 0,
        Let ("Ti@358@6050", Int 0,
        Let ("Tu@233@6046",
             App
              (Var calc_dirvec_rows@5979,
               [Var Ti@357@6049; Var Ti@356@6048; Var Ti@358@6050]),
        Let ("Ti@355@6047", Int 4,
        App (Var init_vecset_constants@6035, [Var Ti@355@6047])))))))),
LetRec ("add_reflection@6052",
        ["v1@6057"; "v0@6056"; "bright@6055"; "surface_id@6054";
         "index@6053"; "v2@6058"],
        Let ("Tu@354@6064", (),
        Let ("dvec@6059", App (Var create_dirvec@5997, [Var Tu@354@6064]),
        LetTuple (["m_vec@3447@6416"; "xm_const@3448@6417"], Var dvec@6059,
        Let ("Tu@236@6060",
             App
              (Var vecset@2786,
               [Var v1@6057; Var v0@6056; Var m_vec@3447@6416; Var v2@6058]),
        Let ("Ti@1328@4565@6412", Int 0,
        Let ("Ta@8255", Static n_objects@2735,
        Let ("Ti@1329@4563@6413", Get (Var Ta@8255, Var Ti@1328@4565@6412),
        Let ("Ti@1330@4564@6414", Int 1,
        Let ("Ti@1331@4562@6415",
             Sub (Var Ti@1329@4563@6413, Var Ti@1330@4564@6414),
        Let ("Tu@235@6061",
             App
              (Var iter_setup_dirvec_constants@4544,
               [Var dvec@6059; Var Ti@1331@4562@6415]),
        Let ("Tt@352@6062",
             Tuple [Var dvec@6059; Var surface_id@6054; Var bright@6055],
        Let ("Ta@8254", Static reflections@2763,
        Put (Var Ta@8254, Var index@6053, Var Tt@352@6062))))))))))))),
LetRec ("setup_rect_reflection@6065", ["obj_id@6066"; "obj@6067"],
        Let ("Ti@351@6105", Int 4,
        Let ("sid@6068", Mul (Var obj_id@6066, Var Ti@351@6105),
        Let ("Ti@350@6104", Int 0,
        Let ("Ta@8253", Static n_reflections@2764,
        Let ("nr@6069", Get (Var Ta@8253, Var Ti@350@6104),
        Let ("Td@348@6102", Float 1.000000,
        LetTuple (["xm_rot123@3238@6409"; "xm_color@3237@6408";
                   "m_surfparams@3236@6407"; "xm_invert@3235@6406";
                   "xm_xyz@3234@6405"; "xm_abc@3233@6404";
                   "xm_isrot@3232@6403"; "xm_surface@3231@6402";
                   "xm_shape@3230@6401"; "xm_tex@3229@6400";
                   "xm_ctbl@3239@6410"],
                  Var obj@6067,
        Let ("Ti@2128@3240@6411", Int 0,
        Let ("Td@349@6103",
             Get (Var m_surfparams@3236@6407, Var Ti@2128@3240@6411),
        Let ("br@6070", FSub (Var Td@348@6102, Var Td@349@6103),
        Let ("Ti@346@6101", Int 0,
        Let ("Ta@8252", Static light@2739,
        Let ("Td@347@6100", Get (Var Ta@8252, Var Ti@346@6101),
        Let ("n0@6071", FNeg Var Td@347@6100,
        Let ("Ti@344@6099", Int 1,
        Let ("Ta@8251", Static light@2739,
        Let ("Td@345@6098", Get (Var Ta@8251, Var Ti@344@6099),
        Let ("n1@6072", FNeg Var Td@345@6098,
        Let ("Ti@342@6097", Int 2,
        Let ("Ta@8250", Static light@2739,
        Let ("Td@343@6096", Get (Var Ta@8250, Var Ti@342@6097),
        Let ("n2@6073", FNeg Var Td@343@6096,
        Let ("Ti@338@6095", Int 1,
        Let ("Ti@340@6092", Add (Var sid@6068, Var Ti@338@6095),
        Let ("Ti@339@6094", Int 0,
        Let ("Ta@8249", Static light@2739,
        Let ("Td@341@6093", Get (Var Ta@8249, Var Ti@339@6094),
        Let ("Tu@239@6074",
             App
              (Var add_reflection@6052,
               [Var n1@6072; Var Td@341@6093; Var br@6070; Var Ti@340@6092;
                Var nr@6069; Var n2@6073]),
        Let ("Ti@332@6091", Int 1,
        Let ("Ti@335@6086", Add (Var nr@6069, Var Ti@332@6091),
        Let ("Ti@333@6090", Int 2,
        Let ("Ti@336@6087", Add (Var sid@6068, Var Ti@333@6090),
        Let ("Ti@334@6089", Int 1,
        Let ("Ta@8248", Static light@2739,
        Let ("Td@337@6088", Get (Var Ta@8248, Var Ti@334@6089),
        Let ("Tu@238@6075",
             App
              (Var add_reflection@6052,
               [Var Td@337@6088; Var n0@6071; Var br@6070; Var Ti@336@6087;
                Var Ti@335@6086; Var n2@6073]),
        Let ("Ti@326@6085", Int 2,
        Let ("Ti@329@6080", Add (Var nr@6069, Var Ti@326@6085),
        Let ("Ti@327@6084", Int 3,
        Let ("Ti@330@6081", Add (Var sid@6068, Var Ti@327@6084),
        Let ("Ti@328@6083", Int 2,
        Let ("Ta@8247", Static light@2739,
        Let ("Td@331@6082", Get (Var Ta@8247, Var Ti@328@6083),
        Let ("Tu@237@6076",
             App
              (Var add_reflection@6052,
               [Var n1@6072; Var n0@6071; Var br@6070; Var Ti@330@6081;
                Var Ti@329@6080; Var Td@331@6082]),
        Let ("Ti@324@6077", Int 0,
        Let ("Ti@323@6079", Int 3,
        Let ("Ti@325@6078", Add (Var nr@6069, Var Ti@323@6079),
        Let ("Ta@8246", Static n_reflections@2764,
        Put (Var Ta@8246, Var Ti@324@6077, Var Ti@325@6078))))))))))))))))))))))))))))))))))))))))))))))))),
LetRec ("setup_surface_reflection@6106", ["obj_id@6107"; "obj@6108"],
        Let ("Ti@320@6144", Int 4,
        Let ("Ti@321@6142", Mul (Var obj_id@6107, Var Ti@320@6144),
        Let ("Ti@322@6143", Int 1,
        Let ("sid@6109", Add (Var Ti@321@6142, Var Ti@322@6143),
        Let ("Ti@319@6141", Int 0,
        Let ("Ta@8245", Static n_reflections@2764,
        Let ("nr@6110", Get (Var Ta@8245, Var Ti@319@6141),
        Let ("Td@317@6139", Float 1.000000,
        LetTuple (["xm_rot123@3238@6397"; "xm_color@3237@6396";
                   "m_surfparams@3236@6395"; "xm_invert@3235@6394";
                   "xm_xyz@3234@6393"; "xm_abc@3233@6392";
                   "xm_isrot@3232@6391"; "xm_surface@3231@6390";
                   "xm_shape@3230@6389"; "xm_tex@3229@6388";
                   "xm_ctbl@3239@6398"],
                  Var obj@6108,
        Let ("Ti@2128@3240@6399", Int 0,
        Let ("Td@318@6140",
             Get (Var m_surfparams@3236@6395, Var Ti@2128@3240@6399),
        Let ("br@6111", FSub (Var Td@317@6139, Var Td@318@6140),
        LetTuple (["xm_rot123@3183@6386"; "xm_color@3182@6385";
                   "xm_surfparams@3181@6384"; "xm_invert@3180@6383";
                   "xm_xyz@3179@6382"; "m_abc@3178@6381";
                   "xm_isrot@3177@6380"; "xm_surface@3176@6379";
                   "xm_shape@3175@6378"; "xm_tex@3174@6377";
                   "xm_ctbl@3184@6387"],
                  Var obj@6108,
        Let ("Ta@8244", Static light@2739,
        Let ("p@6112",
             App (Var veciprod@2908, [Var Ta@8244; Var m_abc@3178@6381]),
        Let ("Td@295@6136", Float 2.000000,
        LetTuple (["xm_rot123@3141@6374"; "xm_color@3140@6373";
                   "xm_surfparams@3139@6372"; "xm_invert@3138@6371";
                   "xm_xyz@3137@6370"; "m_abc@3136@6369";
                   "xm_isrot@3135@6368"; "xm_surface@3134@6367";
                   "xm_shape@3133@6366"; "xm_tex@3132@6365";
                   "xm_ctbl@3142@6375"],
                  Var obj@6108,
        Let ("Ti@2134@3143@6376", Int 0,
        Let ("Td@296@6137", Get (Var m_abc@3136@6369, Var Ti@2134@3143@6376),
        Let ("Td@297@6135", FMul (Var Td@295@6136, Var Td@296@6137),
        Let ("Td@299@6132", FMul (Var Td@297@6135, Var p@6112),
        Let ("Ti@298@6134", Int 0,
        Let ("Ta@8243", Static light@2739,
        Let ("Td@300@6133", Get (Var Ta@8243, Var Ti@298@6134),
        Let ("Td@313@6117", FSub (Var Td@299@6132, Var Td@300@6133),
        Let ("Td@301@6130", Float 2.000000,
        LetTuple (["xm_rot123@3155@6362"; "xm_color@3154@6361";
                   "xm_surfparams@3153@6360"; "xm_invert@3152@6359";
                   "xm_xyz@3151@6358"; "m_abc@3150@6357";
                   "xm_isrot@3149@6356"; "xm_surface@3148@6355";
                   "xm_shape@3147@6354"; "xm_tex@3146@6353";
                   "xm_ctbl@3156@6363"],
                  Var obj@6108,
        Let ("Ti@2133@3157@6364", Int 1,
        Let ("Td@302@6131", Get (Var m_abc@3150@6357, Var Ti@2133@3157@6364),
        Let ("Td@303@6129", FMul (Var Td@301@6130, Var Td@302@6131),
        Let ("Td@305@6126", FMul (Var Td@303@6129, Var p@6112),
        Let ("Ti@304@6128", Int 1,
        Let ("Ta@8242", Static light@2739,
        Let ("Td@306@6127", Get (Var Ta@8242, Var Ti@304@6128),
        Let ("Td@314@6118", FSub (Var Td@305@6126, Var Td@306@6127),
        Let ("Td@307@6124", Float 2.000000,
        LetTuple (["xm_rot123@3169@6350"; "xm_color@3168@6349";
                   "xm_surfparams@3167@6348"; "xm_invert@3166@6347";
                   "xm_xyz@3165@6346"; "m_abc@3164@6345";
                   "xm_isrot@3163@6344"; "xm_surface@3162@6343";
                   "xm_shape@3161@6342"; "xm_tex@3160@6341";
                   "xm_ctbl@3170@6351"],
                  Var obj@6108,
        Let ("Ti@2132@3171@6352", Int 2,
        Let ("Td@308@6125", Get (Var m_abc@3164@6345, Var Ti@2132@3171@6352),
        Let ("Td@309@6123", FMul (Var Td@307@6124, Var Td@308@6125),
        Let ("Td@311@6120", FMul (Var Td@309@6123, Var p@6112),
        Let ("Ti@310@6122", Int 2,
        Let ("Ta@8241", Static light@2739,
        Let ("Td@312@6121", Get (Var Ta@8241, Var Ti@310@6122),
        Let ("Td@315@6119", FSub (Var Td@311@6120, Var Td@312@6121),
        Let ("Tu@240@6113",
             App
              (Var add_reflection@6052,
               [Var Td@314@6118; Var Td@313@6117; Var br@6111; Var sid@6109;
                Var nr@6110; Var Td@315@6119]),
        Let ("Ti@293@6114", Int 0,
        Let ("Ti@292@6116", Int 1,
        Let ("Ti@294@6115", Add (Var nr@6110, Var Ti@292@6116),
        Let ("Ta@8240", Static n_reflections@2764,
        Put (Var Ta@8240, Var Ti@293@6114, Var Ti@294@6115))))))))))))))))))))))))))))))))))))))))))))))))))),
LetRec ("setup_reflections@6145", ["obj_id@6146"],
        Let ("Ti@283@6147", Int 0,
        IfLE
         (Var Ti@283@6147,
          Var obj_id@6146,
          Let ("Ta@8239", Static objects@2736,
          Let ("obj@6148", Get (Var Ta@8239, Var obj_id@6146),
          Let ("Ti@284@6149", Int 2,
          LetTuple (["xm_rot123@3102@6339"; "xm_color@3101@6338";
                     "xm_surfparams@3100@6337"; "xm_invert@3099@6336";
                     "xm_xyz@3098@6335"; "xm_abc@3097@6334";
                     "xm_isrot@3096@6333"; "m_surface@3095@6332";
                     "xm_shape@3094@6331"; "xm_tex@3093@6330";
                     "xm_ctbl@3103@6340"],
                    Var obj@6148,
          IfEq
           (Var m_surface@3095@6332,
            Var Ti@284@6149,
            Let ("Tb@288@6151", Int 0,
            LetTuple (["xm_rot123@3238@6327"; "xm_color@3237@6326";
                       "m_surfparams@3236@6325"; "xm_invert@3235@6324";
                       "xm_xyz@3234@6323"; "xm_abc@3233@6322";
                       "xm_isrot@3232@6321"; "xm_surface@3231@6320";
                       "xm_shape@3230@6319"; "xm_tex@3229@6318";
                       "xm_ctbl@3239@6328"],
                      Var obj@6148,
            Let ("Ti@2128@3240@6329", Int 0,
            Let ("Td@286@6156",
                 Get (Var m_surfparams@3236@6325, Var Ti@2128@3240@6329),
            Let ("Td@287@6157", Float 1.000000,
            Let ("Tb@289@6152",
                 IfLE (Var Td@287@6157, Var Td@286@6156, Int 0, Int 1),
            IfEq
             (Var Tb@289@6152,
              Var Tb@288@6151,
              (),
              LetTuple (["xm_rot123@3089@6316"; "xm_color@3088@6315";
                         "xm_surfparams@3087@6314"; "xm_invert@3086@6313";
                         "xm_xyz@3085@6312"; "xm_abc@3084@6311";
                         "xm_isrot@3083@6310"; "xm_surface@3082@6309";
                         "m_shape@3081@6308"; "xm_tex@3080@6307";
                         "xm_ctbl@3090@6317"],
                        Var obj@6148,
              Let ("Ti@290@6154", Int 1,
              IfEq
               (Var m_shape@3081@6308,
                Var Ti@290@6154,
                App
                 (Var setup_rect_reflection@6065,
                  [Var obj_id@6146; Var obj@6148]),
                Let ("Ti@291@6155", Int 2,
                IfEq
                 (Var m_shape@3081@6308,
                  Var Ti@291@6155,
                  App
                   (Var setup_surface_reflection@6106,
                    [Var obj_id@6146; Var obj@6148]),
                  ())))))))))))),
            ()))))),
          ())),
LetRec ("rt@6158", ["size_x@6159"; "size_y@6160"],
        Let ("Ti@282@6202", Int 0,
        Let ("Ta@8238", Static image_size@2752,
        Let ("Tu@252@6161",
             Put (Var Ta@8238, Var Ti@282@6202, Var size_x@6159),
        Let ("Ti@281@6201", Int 1,
        Let ("Ta@8237", Static image_size@2752,
        Let ("Tu@251@6162",
             Put (Var Ta@8237, Var Ti@281@6201, Var size_y@6160),
        Let ("Ti@279@6198", Int 0,
        Let ("Ti@278@6200", Int 2,
        Let ("Ti@280@6199", Div (Var size_x@6159, Var Ti@278@6200),
        Let ("Ta@8236", Static image_center@2753,
        Let ("Tu@250@6163",
             Put (Var Ta@8236, Var Ti@279@6198, Var Ti@280@6199),
        Let ("Ti@276@6195", Int 1,
        Let ("Ti@275@6197", Int 2,
        Let ("Ti@277@6196", Div (Var size_y@6160, Var Ti@275@6197),
        Let ("Ta@8235", Static image_center@2753,
        Let ("Tu@249@6164",
             Put (Var Ta@8235, Var Ti@276@6195, Var Ti@277@6196),
        Let ("Ti@273@6191", Int 0,
        Let ("Td@271@6193", Float 128.000000,
        Let ("Td@272@6194", ItoF Var size_x@6159,
        Let ("Td@274@6192", FDiv (Var Td@271@6193, Var Td@272@6194),
        Let ("Ta@8234", Static scan_pitch@2754,
        Let ("Tu@248@6165",
             Put (Var Ta@8234, Var Ti@273@6191, Var Td@274@6192),
        Let ("Tu@270@6190", (),
        Let ("prev@6166", App (Var create_pixelline@5862, [Var Tu@270@6190]),
        Let ("Tu@269@6189", (),
        Let ("cur@6167", App (Var create_pixelline@5862, [Var Tu@269@6189]),
        Let ("Tu@268@6188", (),
        Let ("next@6168", App (Var create_pixelline@5862, [Var Tu@268@6188]),
        Let ("Tu@267@6187", (),
        Let ("Tu@247@6169", App (Var read_parameter@3867, [Var Tu@267@6187]),
        Let ("Tu@266@6186", (),
        Let ("Tu@246@6170",
             App (Var write_ppm_header@5607, [Var Tu@266@6186]),
        Let ("Tu@265@6185", (),
        Let ("Tu@245@6171", App (Var init_dirvecs@6043, [Var Tu@265@6185]),
        Let ("xm_const@3448@6306", Static consts@6220,
        Let ("m_vec@3447@6305", Static v3@6219,
        Let ("Ta@8233", Static light@2739,
        Let ("Tu@244@6172",
             App (Var veccpy@2807, [Var m_vec@3447@6305; Var Ta@8233]),
        Let ("Ti@1328@4565@6301", Int 0,
        Let ("Ta@8232", Static n_objects@2735,
        Let ("Ti@1329@4563@6302", Get (Var Ta@8232, Var Ti@1328@4565@6301),
        Let ("Ti@1330@4564@6303", Int 1,
        Let ("Ti@1331@4562@6304",
             Sub (Var Ti@1329@4563@6302, Var Ti@1330@4564@6303),
        Let ("Tt@8231", Static light_dirvec@2762,
        Let ("Tu@243@6173",
             App
              (Var iter_setup_dirvec_constants@4544,
               [Var Tt@8231; Var Ti@1331@4562@6304]),
        Let ("Ti@260@6183", Int 0,
        Let ("Ta@8230", Static n_objects@2735,
        Let ("Ti@261@6181", Get (Var Ta@8230, Var Ti@260@6183),
        Let ("Ti@262@6182", Int 1,
        Let ("Ti@263@6180", Sub (Var Ti@261@6181, Var Ti@262@6182),
        Let ("Tu@242@6174",
             App (Var setup_reflections@6145, [Var Ti@263@6180]),
        Let ("Ti@258@6178", Int 0,
        Let ("Ti@259@6179", Int 0,
        Let ("Tu@241@6175",
             App
              (Var pretrace_line@5728,
               [Var Ti@258@6178; Var cur@6167; Var Ti@259@6179]),
        Let ("Ti@256@6176", Int 0,
        Let ("Ti@257@6177", Int 2,
        App
         (Var scan_line@5782,
          [Var next@6168; Var cur@6167; Var prev@6166; Var Ti@256@6176;
           Var Ti@257@6177]))))))))))))))))))))))))))))))))))))))))))))))))))))))))),
Let ("Ti@254@6204", Int 128,
Let ("Ti@255@6205", Int 128,
Let ("Tu@253@6203", App (Var rt@6158, [Var Ti@254@6204; Var Ti@255@6205]),
Int 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))replace2 Tt@2359@6212
replace2 dummydv@6210
replace2 dummyf3@6208
replace2 dummyff3@6209
replace2 dummyf3@6208
replace2 v3@6219
replace2 consts@6220
replace2 dummyf2@6218
replace2 dummy_vs@6228
replace2 Tt@2370@6231
replace2 dummyf@6226
replace2 dummyff@6227
replace2 dummyf@6226
replace2 Ta@2414@6272
replace2 and_net@2741
replace2 Ta@2419@6277
replace2 Tt@2434@6291
replace2 dummy@6289
replace2 dummy@6289
replace2 dummy@6289
replace2 dummy@6289
replace2 dummy@6289
replace2 dummy@6289
replace2 viewpoint@2738
replace2 screenz_dir@2759
replace2 screen@2737
replace2 viewpoint@2738
replace2 screenz_dir@2759
replace2 screen@2737
replace2 viewpoint@2738
replace2 screenz_dir@2759
replace2 screen@2737
replace2 screeny_dir@2758
replace2 screeny_dir@2758
replace2 screeny_dir@2758
replace2 screenx_dir@2757
replace2 screenx_dir@2757
replace2 screenx_dir@2757
replace2 screenz_dir@2759
replace2 screenz_dir@2759
replace2 screenz_dir@2759
replace2 screen@2737
replace2 screen@2737
replace2 screen@2737
replace2 beam@2740
replace2 light@2739
replace2 light@2739
replace2 light@2739
replace2 or_net@2742
replace2 objects@2736
replace2 objects@2736
replace2 objects@2736
replace2 n_objects@2735
replace2 startp_fast@2756
replace2 tmin@2745
replace2 or_net@2742
replace2 tmin@2745
replace2 tmin@2745
replace2 or_net@2742
replace2 tmin@2745
replace2 nvector@2748
replace2 nvector@2748
replace2 intsec_rectside@2744
replace2 nvector@2748
replace2 nvector@2748
replace2 nvector@2748
replace2 nvector@2748
replace2 intersection_point@2746
replace2 intersection_point@2746
replace2 intersection_point@2746
replace2 texture_color@2749
replace2 texture_color@2749
replace2 texture_color@2749
replace2 rgb@2751
replace2 diffuse_ray@2750
replace2 diffuse_ray@2750
replace2 rgb@2751
replace2 diffuse_ray@2750
replace2 diffuse_ray@2750
replace2 diffuse_ray@2750
replace2 diffuse_ray@2750
replace2 diffuse_ray@2750
replace2 diffuse_ray@2750
replace2 image_size@2752
replace2 image_size@2752
replace2 image_size@2752
replace2 rgb@2751
replace2 rgb@2751
replace2 rgb@2751
replace2 image_size@2752
replace2 screenz_dir@2759
replace2 screeny_dir@2758
replace2 screenz_dir@2759
replace2 screeny_dir@2758
replace2 screenz_dir@2759
replace2 screeny_dir@2758
replace2 image_center@2753
replace2 scan_pitch@2754
replace2 image_size@2752
replace2 image_size@2752
replace2 image_size@2752
replace2 image_size@2752
replace2 n_objects@2735
replace2 reflections@2763
replace2 n_objects@2735
replace2 n_reflections@2764
replace2 light@2739
replace2 light@2739
replace2 light@2739
replace2 light@2739
replace2 light@2739
replace2 light@2739
replace2 n_reflections@2764
replace2 n_reflections@2764
replace2 light@2739
replace2 light@2739
replace2 light@2739
replace2 light@2739
replace2 n_reflections@2764
replace2 n_objects@2735
replace2 light_dirvec@2762
replace2 n_objects@2735
replace2 light@2739
replace2 v3@6219
replace2 consts@6220
replace2 scan_pitch@2754
replace2 image_center@2753
replace2 image_center@2753
replace2 image_size@2752
replace2 image_size@2752
